2024-04-29 20:59:25,839:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 20:59:25,839:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 20:59:25,839:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 20:59:25,839:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 20:59:26,061:INFO:PyCaret ClassificationExperiment
2024-04-29 20:59:26,061:INFO:Logging name: clf-default-name
2024-04-29 20:59:26,061:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-29 20:59:26,061:INFO:version 3.3.1
2024-04-29 20:59:26,061:INFO:Initializing setup()
2024-04-29 20:59:26,061:INFO:self.USI: af2d
2024-04-29 20:59:26,061:INFO:self._variable_keys: {'X_test', 'gpu_n_jobs_param', 'html_param', 'memory', 'log_plots_param', 'X_train', 'fold_generator', 'y_train', 'pipeline', 'seed', 'exp_name_log', 'data', 'gpu_param', 'USI', '_available_plots', 'target_param', 'y_test', 'is_multiclass', 'X', 'exp_id', 'fix_imbalance', 'fold_shuffle_param', 'logging_param', 'n_jobs_param', '_ml_usecase', 'y', 'fold_groups_param', 'idx'}
2024-04-29 20:59:26,061:INFO:Checking environment
2024-04-29 20:59:26,061:INFO:python_version: 3.10.12
2024-04-29 20:59:26,061:INFO:python_build: ('main', 'Nov 20 2023 15:14:05')
2024-04-29 20:59:26,061:INFO:machine: x86_64
2024-04-29 20:59:26,063:INFO:platform: Linux-6.5.0-28-generic-x86_64-with-glibc2.35
2024-04-29 20:59:26,063:INFO:Memory: svmem(total=16608317440, available=9408671744, percent=43.3, used=5509730304, free=6298894336, active=6356807680, inactive=2333290496, buffers=163930112, cached=4635762688, shared=1316204544, slab=593866752)
2024-04-29 20:59:26,064:INFO:Physical Core: 4
2024-04-29 20:59:26,064:INFO:Logical Core: 8
2024-04-29 20:59:26,064:INFO:Checking libraries
2024-04-29 20:59:26,064:INFO:System:
2024-04-29 20:59:26,064:INFO:    python: 3.10.12 (main, Nov 20 2023, 15:14:05) [GCC 11.4.0]
2024-04-29 20:59:26,064:INFO:executable: /bin/python3
2024-04-29 20:59:26,064:INFO:   machine: Linux-6.5.0-28-generic-x86_64-with-glibc2.35
2024-04-29 20:59:26,064:INFO:PyCaret required dependencies:
2024-04-29 20:59:26,078:INFO:                 pip: 22.0.2
2024-04-29 20:59:26,078:INFO:          setuptools: 59.6.0
2024-04-29 20:59:26,078:INFO:             pycaret: 3.3.1
2024-04-29 20:59:26,078:INFO:             IPython: 8.24.0
2024-04-29 20:59:26,078:INFO:          ipywidgets: 8.1.2
2024-04-29 20:59:26,078:INFO:                tqdm: 4.66.2
2024-04-29 20:59:26,079:INFO:               numpy: 1.23.5
2024-04-29 20:59:26,079:INFO:              pandas: 1.5.2
2024-04-29 20:59:26,079:INFO:              jinja2: 3.0.3
2024-04-29 20:59:26,079:INFO:               scipy: 1.11.4
2024-04-29 20:59:26,079:INFO:              joblib: 1.3.2
2024-04-29 20:59:26,079:INFO:             sklearn: 1.4.2
2024-04-29 20:59:26,079:INFO:                pyod: 1.1.3
2024-04-29 20:59:26,079:INFO:            imblearn: 0.12.2
2024-04-29 20:59:26,079:INFO:   category_encoders: 2.6.3
2024-04-29 20:59:26,079:INFO:            lightgbm: 4.3.0
2024-04-29 20:59:26,079:INFO:               numba: 0.59.1
2024-04-29 20:59:26,079:INFO:            requests: 2.25.1
2024-04-29 20:59:26,079:INFO:          matplotlib: 3.6.2
2024-04-29 20:59:26,079:INFO:          scikitplot: 0.3.7
2024-04-29 20:59:26,079:INFO:         yellowbrick: 1.5
2024-04-29 20:59:26,079:INFO:              plotly: 5.21.0
2024-04-29 20:59:26,079:INFO:    plotly-resampler: Not installed
2024-04-29 20:59:26,079:INFO:             kaleido: 0.2.1
2024-04-29 20:59:26,079:INFO:           schemdraw: 0.15
2024-04-29 20:59:26,079:INFO:         statsmodels: 0.14.2
2024-04-29 20:59:26,079:INFO:              sktime: 0.26.0
2024-04-29 20:59:26,079:INFO:               tbats: 1.1.3
2024-04-29 20:59:26,079:INFO:            pmdarima: 2.0.4
2024-04-29 20:59:26,080:INFO:              psutil: 5.9.8
2024-04-29 20:59:26,080:INFO:          markupsafe: 2.0.1
2024-04-29 20:59:26,080:INFO:             pickle5: Not installed
2024-04-29 20:59:26,080:INFO:         cloudpickle: 3.0.0
2024-04-29 20:59:26,080:INFO:         deprecation: 2.1.0
2024-04-29 20:59:26,080:INFO:              xxhash: 3.4.1
2024-04-29 20:59:26,080:INFO:           wurlitzer: 3.0.3
2024-04-29 20:59:26,080:INFO:PyCaret optional dependencies:
2024-04-29 20:59:26,179:INFO:                shap: Not installed
2024-04-29 20:59:26,179:INFO:           interpret: Not installed
2024-04-29 20:59:26,179:INFO:                umap: Not installed
2024-04-29 20:59:26,179:INFO:     ydata_profiling: Not installed
2024-04-29 20:59:26,179:INFO:  explainerdashboard: Not installed
2024-04-29 20:59:26,179:INFO:             autoviz: Not installed
2024-04-29 20:59:26,179:INFO:           fairlearn: Not installed
2024-04-29 20:59:26,179:INFO:          deepchecks: Not installed
2024-04-29 20:59:26,180:INFO:             xgboost: Not installed
2024-04-29 20:59:26,180:INFO:            catboost: Not installed
2024-04-29 20:59:26,180:INFO:              kmodes: Not installed
2024-04-29 20:59:26,180:INFO:             mlxtend: Not installed
2024-04-29 20:59:26,180:INFO:       statsforecast: Not installed
2024-04-29 20:59:26,180:INFO:        tune_sklearn: Not installed
2024-04-29 20:59:26,180:INFO:                 ray: Not installed
2024-04-29 20:59:26,180:INFO:            hyperopt: Not installed
2024-04-29 20:59:26,180:INFO:              optuna: Not installed
2024-04-29 20:59:26,180:INFO:               skopt: Not installed
2024-04-29 20:59:26,180:INFO:              mlflow: Not installed
2024-04-29 20:59:26,180:INFO:              gradio: Not installed
2024-04-29 20:59:26,180:INFO:             fastapi: 0.88.0
2024-04-29 20:59:26,180:INFO:             uvicorn: Not installed
2024-04-29 20:59:26,180:INFO:              m2cgen: Not installed
2024-04-29 20:59:26,180:INFO:           evidently: Not installed
2024-04-29 20:59:26,180:INFO:               fugue: Not installed
2024-04-29 20:59:26,180:INFO:           streamlit: Not installed
2024-04-29 20:59:26,180:INFO:             prophet: Not installed
2024-04-29 20:59:26,180:INFO:None
2024-04-29 20:59:26,180:INFO:Set up data.
2024-04-29 20:59:26,187:INFO:Set up folding strategy.
2024-04-29 20:59:26,187:INFO:Set up train/test split.
2024-04-29 20:59:26,190:INFO:Set up index.
2024-04-29 20:59:26,191:INFO:Assigning column types.
2024-04-29 20:59:26,193:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-29 20:59:26,226:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-29 20:59:26,229:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-29 20:59:26,251:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 20:59:26,251:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 20:59:26,283:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-29 20:59:26,284:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-29 20:59:26,303:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 20:59:26,303:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 20:59:26,304:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-29 20:59:26,336:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-29 20:59:26,356:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 20:59:26,357:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 20:59:26,389:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-29 20:59:26,408:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 20:59:26,409:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 20:59:26,409:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-29 20:59:26,460:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 20:59:26,460:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 20:59:26,513:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 20:59:26,513:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 20:59:26,514:INFO:Preparing preprocessing pipeline...
2024-04-29 20:59:26,516:INFO:Set up label encoding.
2024-04-29 20:59:26,516:INFO:Set up simple imputation.
2024-04-29 20:59:26,535:INFO:Finished creating preprocessing pipeline.
2024-04-29 20:59:26,539:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Jsc', 'Voc', 'FF', 'Efficiency',
                                             'Sr', 'Sp', 'Temp'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-04-29 20:59:26,539:INFO:Creating final display dataframe.
2024-04-29 20:59:26,591:INFO:Setup _display_container:                     Description                   Value
0                    Session id                     123
1                        Target                   Class
2                   Target type              Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2, 4: 3
4           Original data shape                (182, 8)
5        Transformed data shape                (182, 8)
6   Transformed train set shape                (127, 8)
7    Transformed test set shape                 (55, 8)
8              Numeric features                       7
9                    Preprocess                    True
10              Imputation type                  simple
11           Numeric imputation                    mean
12       Categorical imputation                    mode
13               Fold Generator         StratifiedKFold
14                  Fold Number                      10
15                     CPU Jobs                      -1
16                      Use GPU                   False
17               Log Experiment                   False
18              Experiment Name        clf-default-name
19                          USI                    af2d
2024-04-29 20:59:26,658:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 20:59:26,659:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 20:59:26,714:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 20:59:26,715:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 20:59:26,716:INFO:setup() successfully completed in 0.66s...............
2024-04-29 20:59:26,716:INFO:Initializing compare_models()
2024-04-29 20:59:26,716:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x737b2cfd9900>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x737b2cfd9900>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-29 20:59:26,716:INFO:Checking exceptions
2024-04-29 20:59:26,719:INFO:Preparing display monitor
2024-04-29 20:59:26,721:INFO:Initializing Logistic Regression
2024-04-29 20:59:26,721:INFO:Total runtime is 2.0384788513183595e-06 minutes
2024-04-29 20:59:26,722:INFO:SubProcess create_model() called ==================================
2024-04-29 20:59:26,722:INFO:Initializing create_model()
2024-04-29 20:59:26,722:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x737b2cfd9900>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x737b0d89b730>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 20:59:26,722:INFO:Checking exceptions
2024-04-29 20:59:26,722:INFO:Importing libraries
2024-04-29 20:59:26,722:INFO:Copying training dataset
2024-04-29 20:59:26,725:INFO:Defining folds
2024-04-29 20:59:26,725:INFO:Declaring metric variables
2024-04-29 20:59:26,725:INFO:Importing untrained model
2024-04-29 20:59:26,725:INFO:Logistic Regression Imported successfully
2024-04-29 20:59:26,726:INFO:Starting cross validation
2024-04-29 20:59:26,726:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 20:59:29,686:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 20:59:29,703:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 20:59:29,710:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:29,714:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:29,720:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:29,720:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:29,723:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:29,724:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:29,726:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:29,729:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:29,731:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:29,735:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:29,775:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 20:59:29,792:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 20:59:29,793:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 20:59:29,794:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:29,798:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:29,803:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:29,809:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:29,810:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:29,811:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:29,814:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:29,815:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:29,819:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:29,820:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:29,824:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:29,826:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:29,847:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 20:59:29,869:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:29,873:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 20:59:29,873:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:29,879:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:29,884:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:29,892:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:29,895:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:29,900:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 20:59:29,901:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:29,903:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:29,906:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:29,918:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:29,922:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:29,927:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:29,932:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,021:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 20:59:30,029:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:30,030:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,033:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,035:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,061:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 20:59:30,068:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:30,069:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,071:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,074:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,078:INFO:Calculating mean and std
2024-04-29 20:59:30,079:INFO:Creating metrics dataframe
2024-04-29 20:59:30,083:INFO:Uploading results into container
2024-04-29 20:59:30,084:INFO:Uploading model into container now
2024-04-29 20:59:30,084:INFO:_master_model_container: 1
2024-04-29 20:59:30,084:INFO:_display_container: 2
2024-04-29 20:59:30,084:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-29 20:59:30,084:INFO:create_model() successfully completed......................................
2024-04-29 20:59:30,163:INFO:SubProcess create_model() end ==================================
2024-04-29 20:59:30,164:INFO:Creating metrics dataframe
2024-04-29 20:59:30,170:INFO:Initializing K Neighbors Classifier
2024-04-29 20:59:30,171:INFO:Total runtime is 0.05748693545659383 minutes
2024-04-29 20:59:30,171:INFO:SubProcess create_model() called ==================================
2024-04-29 20:59:30,171:INFO:Initializing create_model()
2024-04-29 20:59:30,171:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x737b2cfd9900>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x737b0d89b730>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 20:59:30,171:INFO:Checking exceptions
2024-04-29 20:59:30,171:INFO:Importing libraries
2024-04-29 20:59:30,172:INFO:Copying training dataset
2024-04-29 20:59:30,176:INFO:Defining folds
2024-04-29 20:59:30,176:INFO:Declaring metric variables
2024-04-29 20:59:30,177:INFO:Importing untrained model
2024-04-29 20:59:30,177:INFO:K Neighbors Classifier Imported successfully
2024-04-29 20:59:30,177:INFO:Starting cross validation
2024-04-29 20:59:30,178:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 20:59:30,241:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:30,241:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:30,242:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:30,245:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:30,245:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:30,246:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 20:59:30,246:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:30,246:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 20:59:30,247:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 20:59:30,248:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,249:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,249:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:30,249:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 20:59:30,249:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 20:59:30,249:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:30,250:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,250:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 20:59:30,251:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,252:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,253:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,253:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,253:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 20:59:30,253:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 20:59:30,254:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,254:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,256:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,256:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,256:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:30,256:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,256:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,257:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,258:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,259:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,259:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,260:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,261:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,261:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,261:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,262:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:30,264:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,265:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,266:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,306:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:30,308:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 20:59:30,308:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:30,310:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 20:59:30,313:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,315:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,322:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,323:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,329:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,332:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,353:INFO:Calculating mean and std
2024-04-29 20:59:30,355:INFO:Creating metrics dataframe
2024-04-29 20:59:30,368:INFO:Uploading results into container
2024-04-29 20:59:30,370:INFO:Uploading model into container now
2024-04-29 20:59:30,371:INFO:_master_model_container: 2
2024-04-29 20:59:30,371:INFO:_display_container: 2
2024-04-29 20:59:30,372:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-04-29 20:59:30,373:INFO:create_model() successfully completed......................................
2024-04-29 20:59:30,476:INFO:SubProcess create_model() end ==================================
2024-04-29 20:59:30,476:INFO:Creating metrics dataframe
2024-04-29 20:59:30,484:INFO:Initializing Naive Bayes
2024-04-29 20:59:30,484:INFO:Total runtime is 0.06271896759668985 minutes
2024-04-29 20:59:30,485:INFO:SubProcess create_model() called ==================================
2024-04-29 20:59:30,485:INFO:Initializing create_model()
2024-04-29 20:59:30,485:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x737b2cfd9900>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x737b0d89b730>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 20:59:30,485:INFO:Checking exceptions
2024-04-29 20:59:30,485:INFO:Importing libraries
2024-04-29 20:59:30,485:INFO:Copying training dataset
2024-04-29 20:59:30,490:INFO:Defining folds
2024-04-29 20:59:30,490:INFO:Declaring metric variables
2024-04-29 20:59:30,490:INFO:Importing untrained model
2024-04-29 20:59:30,491:INFO:Naive Bayes Imported successfully
2024-04-29 20:59:30,491:INFO:Starting cross validation
2024-04-29 20:59:30,492:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 20:59:30,540:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:30,541:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 20:59:30,544:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:30,544:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,544:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 20:59:30,547:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,549:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,550:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:30,550:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:30,551:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 20:59:30,551:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 20:59:30,553:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:30,553:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,553:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 20:59:30,553:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:30,554:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,554:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,554:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 20:59:30,554:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,556:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:30,556:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,557:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:30,557:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,557:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 20:59:30,559:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,559:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,560:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,560:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,561:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:30,561:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 20:59:30,562:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:30,562:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,564:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,564:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,565:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,565:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:30,565:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,566:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,566:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:30,568:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,568:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:30,569:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,570:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,571:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,572:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:30,574:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,585:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:30,585:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 20:59:30,587:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,589:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:30,590:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,590:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 20:59:30,591:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:30,591:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,592:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,594:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,596:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,603:INFO:Calculating mean and std
2024-04-29 20:59:30,604:INFO:Creating metrics dataframe
2024-04-29 20:59:30,607:INFO:Uploading results into container
2024-04-29 20:59:30,607:INFO:Uploading model into container now
2024-04-29 20:59:30,608:INFO:_master_model_container: 3
2024-04-29 20:59:30,608:INFO:_display_container: 2
2024-04-29 20:59:30,608:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-04-29 20:59:30,608:INFO:create_model() successfully completed......................................
2024-04-29 20:59:30,672:INFO:SubProcess create_model() end ==================================
2024-04-29 20:59:30,673:INFO:Creating metrics dataframe
2024-04-29 20:59:30,680:INFO:Initializing Decision Tree Classifier
2024-04-29 20:59:30,680:INFO:Total runtime is 0.06598624388376871 minutes
2024-04-29 20:59:30,681:INFO:SubProcess create_model() called ==================================
2024-04-29 20:59:30,681:INFO:Initializing create_model()
2024-04-29 20:59:30,681:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x737b2cfd9900>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x737b0d89b730>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 20:59:30,681:INFO:Checking exceptions
2024-04-29 20:59:30,681:INFO:Importing libraries
2024-04-29 20:59:30,681:INFO:Copying training dataset
2024-04-29 20:59:30,685:INFO:Defining folds
2024-04-29 20:59:30,686:INFO:Declaring metric variables
2024-04-29 20:59:30,686:INFO:Importing untrained model
2024-04-29 20:59:30,686:INFO:Decision Tree Classifier Imported successfully
2024-04-29 20:59:30,687:INFO:Starting cross validation
2024-04-29 20:59:30,688:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 20:59:30,731:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:30,732:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:30,732:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 20:59:30,732:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:30,732:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 20:59:30,732:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:30,732:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 20:59:30,733:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 20:59:30,734:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,735:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,735:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,736:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,737:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:30,738:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 20:59:30,739:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,740:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:30,740:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,740:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,740:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 20:59:30,741:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,741:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,742:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:30,743:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 20:59:30,743:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,744:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,745:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,745:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,746:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,746:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,746:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,747:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:30,747:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,748:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 20:59:30,750:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,750:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,751:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,753:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,754:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,756:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,757:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,770:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:30,771:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 20:59:30,772:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,772:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:30,773:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 20:59:30,774:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,774:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,776:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,777:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,779:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,786:INFO:Calculating mean and std
2024-04-29 20:59:30,787:INFO:Creating metrics dataframe
2024-04-29 20:59:30,790:INFO:Uploading results into container
2024-04-29 20:59:30,791:INFO:Uploading model into container now
2024-04-29 20:59:30,791:INFO:_master_model_container: 4
2024-04-29 20:59:30,791:INFO:_display_container: 2
2024-04-29 20:59:30,791:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-04-29 20:59:30,791:INFO:create_model() successfully completed......................................
2024-04-29 20:59:30,858:INFO:SubProcess create_model() end ==================================
2024-04-29 20:59:30,858:INFO:Creating metrics dataframe
2024-04-29 20:59:30,866:INFO:Initializing SVM - Linear Kernel
2024-04-29 20:59:30,866:INFO:Total runtime is 0.06908437013626098 minutes
2024-04-29 20:59:30,867:INFO:SubProcess create_model() called ==================================
2024-04-29 20:59:30,867:INFO:Initializing create_model()
2024-04-29 20:59:30,867:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x737b2cfd9900>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x737b0d89b730>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 20:59:30,867:INFO:Checking exceptions
2024-04-29 20:59:30,867:INFO:Importing libraries
2024-04-29 20:59:30,867:INFO:Copying training dataset
2024-04-29 20:59:30,871:INFO:Defining folds
2024-04-29 20:59:30,872:INFO:Declaring metric variables
2024-04-29 20:59:30,872:INFO:Importing untrained model
2024-04-29 20:59:30,872:INFO:SVM - Linear Kernel Imported successfully
2024-04-29 20:59:30,873:INFO:Starting cross validation
2024-04-29 20:59:30,874:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 20:59:30,932:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:30,934:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:30,934:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,937:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,938:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:30,939:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,939:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:30,940:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,940:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:30,941:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:30,942:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:30,942:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,942:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,943:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,944:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:30,944:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,945:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,945:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,945:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:30,946:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,947:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:30,947:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,947:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,948:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,949:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,949:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,949:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:30,950:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:30,950:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:30,951:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,951:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:30,952:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,952:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,953:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,954:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,955:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,957:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,959:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:30,962:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,990:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:30,990:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:30,992:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,992:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,994:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,994:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,996:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:30,996:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:30,997:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,008:INFO:Calculating mean and std
2024-04-29 20:59:31,008:INFO:Creating metrics dataframe
2024-04-29 20:59:31,012:INFO:Uploading results into container
2024-04-29 20:59:31,012:INFO:Uploading model into container now
2024-04-29 20:59:31,012:INFO:_master_model_container: 5
2024-04-29 20:59:31,012:INFO:_display_container: 2
2024-04-29 20:59:31,013:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-04-29 20:59:31,013:INFO:create_model() successfully completed......................................
2024-04-29 20:59:31,083:INFO:SubProcess create_model() end ==================================
2024-04-29 20:59:31,083:INFO:Creating metrics dataframe
2024-04-29 20:59:31,090:INFO:Initializing Ridge Classifier
2024-04-29 20:59:31,091:INFO:Total runtime is 0.07282057603200276 minutes
2024-04-29 20:59:31,091:INFO:SubProcess create_model() called ==================================
2024-04-29 20:59:31,091:INFO:Initializing create_model()
2024-04-29 20:59:31,091:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x737b2cfd9900>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x737b0d89b730>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 20:59:31,091:INFO:Checking exceptions
2024-04-29 20:59:31,091:INFO:Importing libraries
2024-04-29 20:59:31,091:INFO:Copying training dataset
2024-04-29 20:59:31,096:INFO:Defining folds
2024-04-29 20:59:31,096:INFO:Declaring metric variables
2024-04-29 20:59:31,096:INFO:Importing untrained model
2024-04-29 20:59:31,096:INFO:Ridge Classifier Imported successfully
2024-04-29 20:59:31,097:INFO:Starting cross validation
2024-04-29 20:59:31,098:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 20:59:31,151:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:31,151:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:31,152:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:31,152:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:31,153:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,153:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:31,154:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:31,154:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,155:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,155:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:31,155:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,156:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,157:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,158:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,158:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,159:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,159:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,159:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:31,160:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:31,161:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,161:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,162:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,163:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,163:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,163:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:31,163:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,164:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,164:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,166:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,167:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,167:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:31,168:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,168:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,169:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:31,171:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,171:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,190:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:31,191:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:31,192:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,192:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,194:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,195:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,195:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:31,196:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:31,196:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,197:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,209:INFO:Calculating mean and std
2024-04-29 20:59:31,210:INFO:Creating metrics dataframe
2024-04-29 20:59:31,213:INFO:Uploading results into container
2024-04-29 20:59:31,213:INFO:Uploading model into container now
2024-04-29 20:59:31,214:INFO:_master_model_container: 6
2024-04-29 20:59:31,214:INFO:_display_container: 2
2024-04-29 20:59:31,214:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-04-29 20:59:31,214:INFO:create_model() successfully completed......................................
2024-04-29 20:59:31,279:INFO:SubProcess create_model() end ==================================
2024-04-29 20:59:31,279:INFO:Creating metrics dataframe
2024-04-29 20:59:31,287:INFO:Initializing Random Forest Classifier
2024-04-29 20:59:31,287:INFO:Total runtime is 0.07610177199045816 minutes
2024-04-29 20:59:31,288:INFO:SubProcess create_model() called ==================================
2024-04-29 20:59:31,288:INFO:Initializing create_model()
2024-04-29 20:59:31,288:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x737b2cfd9900>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x737b0d89b730>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 20:59:31,288:INFO:Checking exceptions
2024-04-29 20:59:31,288:INFO:Importing libraries
2024-04-29 20:59:31,288:INFO:Copying training dataset
2024-04-29 20:59:31,293:INFO:Defining folds
2024-04-29 20:59:31,293:INFO:Declaring metric variables
2024-04-29 20:59:31,293:INFO:Importing untrained model
2024-04-29 20:59:31,294:INFO:Random Forest Classifier Imported successfully
2024-04-29 20:59:31,294:INFO:Starting cross validation
2024-04-29 20:59:31,295:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 20:59:31,592:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:31,593:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 20:59:31,594:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:31,595:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:31,595:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 20:59:31,595:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,595:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 20:59:31,596:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:31,597:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 20:59:31,597:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,598:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,599:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,599:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,601:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:31,602:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 20:59:31,602:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,603:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,603:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,604:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,604:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,605:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:31,606:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,607:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:31,607:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,608:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,608:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,608:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 20:59:31,611:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,612:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:31,612:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,613:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 20:59:31,613:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:31,614:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 20:59:31,615:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,615:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,616:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,619:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,620:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,621:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,624:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,625:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,803:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:31,804:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 20:59:31,806:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,808:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,809:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:31,809:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 20:59:31,811:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,811:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,813:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,815:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,825:INFO:Calculating mean and std
2024-04-29 20:59:31,826:INFO:Creating metrics dataframe
2024-04-29 20:59:31,829:INFO:Uploading results into container
2024-04-29 20:59:31,829:INFO:Uploading model into container now
2024-04-29 20:59:31,829:INFO:_master_model_container: 7
2024-04-29 20:59:31,830:INFO:_display_container: 2
2024-04-29 20:59:31,830:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-04-29 20:59:31,830:INFO:create_model() successfully completed......................................
2024-04-29 20:59:31,898:INFO:SubProcess create_model() end ==================================
2024-04-29 20:59:31,898:INFO:Creating metrics dataframe
2024-04-29 20:59:31,907:INFO:Initializing Quadratic Discriminant Analysis
2024-04-29 20:59:31,907:INFO:Total runtime is 0.0864299178123474 minutes
2024-04-29 20:59:31,907:INFO:SubProcess create_model() called ==================================
2024-04-29 20:59:31,908:INFO:Initializing create_model()
2024-04-29 20:59:31,908:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x737b2cfd9900>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x737b0d89b730>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 20:59:31,908:INFO:Checking exceptions
2024-04-29 20:59:31,908:INFO:Importing libraries
2024-04-29 20:59:31,908:INFO:Copying training dataset
2024-04-29 20:59:31,913:INFO:Defining folds
2024-04-29 20:59:31,913:INFO:Declaring metric variables
2024-04-29 20:59:31,913:INFO:Importing untrained model
2024-04-29 20:59:31,913:INFO:Quadratic Discriminant Analysis Imported successfully
2024-04-29 20:59:31,914:INFO:Starting cross validation
2024-04-29 20:59:31,915:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 20:59:31,949:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-29 20:59:31,949:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-29 20:59:31,949:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-29 20:59:31,949:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-29 20:59:31,952:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-29 20:59:31,953:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-29 20:59:31,954:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-29 20:59:31,958:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-29 20:59:31,960:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:31,960:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:31,960:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:31,960:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:31,960:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:31,960:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:31,960:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 20:59:31,960:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 20:59:31,960:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 20:59:31,961:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:31,961:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:31,962:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 20:59:31,963:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:31,964:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:31,964:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 20:59:31,965:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:31,965:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:31,965:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:31,965:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:31,965:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:31,965:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:31,965:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:31,965:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 20:59:31,965:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 20:59:31,965:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:31,966:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 20:59:31,966:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 20:59:31,966:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:31,966:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:31,966:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:31,967:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:31,967:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 20:59:31,967:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 20:59:31,968:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-04-29 20:59:31,968:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-04-29 20:59:31,968:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-04-29 20:59:31,969:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:31,969:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:31,969:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 20:59:31,970:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-04-29 20:59:31,971:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,971:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,972:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:31,972:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:31,972:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,972:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-04-29 20:59:31,973:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,973:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 20:59:31,973:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:31,973:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:31,974:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 20:59:31,976:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:31,976:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:31,976:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,976:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,976:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,977:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 20:59:31,977:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-04-29 20:59:31,978:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:31,978:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,978:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:31,978:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:31,979:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 20:59:31,979:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:31,980:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-04-29 20:59:31,980:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,980:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:31,980:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,981:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,981:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,982:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,982:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-04-29 20:59:31,983:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:31,983:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,983:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,984:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:31,984:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,985:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,986:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,986:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,988:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:31,989:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,989:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,991:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,991:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:31,991:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:31,994:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:31,994:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:32,001:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-29 20:59:32,002:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-29 20:59:32,006:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:32,007:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:32,007:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 20:59:32,008:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:32,008:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:32,008:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 20:59:32,009:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:32,009:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:32,010:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 20:59:32,010:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:32,010:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 20:59:32,011:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 20:59:32,011:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-04-29 20:59:32,012:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-04-29 20:59:32,013:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:32,013:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:32,015:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:32,016:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:32,016:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:32,017:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:32,018:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:32,018:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:32,029:INFO:Calculating mean and std
2024-04-29 20:59:32,030:INFO:Creating metrics dataframe
2024-04-29 20:59:32,033:INFO:Uploading results into container
2024-04-29 20:59:32,034:INFO:Uploading model into container now
2024-04-29 20:59:32,034:INFO:_master_model_container: 8
2024-04-29 20:59:32,034:INFO:_display_container: 2
2024-04-29 20:59:32,034:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-04-29 20:59:32,034:INFO:create_model() successfully completed......................................
2024-04-29 20:59:32,100:INFO:SubProcess create_model() end ==================================
2024-04-29 20:59:32,100:INFO:Creating metrics dataframe
2024-04-29 20:59:32,108:INFO:Initializing Ada Boost Classifier
2024-04-29 20:59:32,108:INFO:Total runtime is 0.08977374633153279 minutes
2024-04-29 20:59:32,108:INFO:SubProcess create_model() called ==================================
2024-04-29 20:59:32,108:INFO:Initializing create_model()
2024-04-29 20:59:32,108:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x737b2cfd9900>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x737b0d89b730>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 20:59:32,109:INFO:Checking exceptions
2024-04-29 20:59:32,109:INFO:Importing libraries
2024-04-29 20:59:32,109:INFO:Copying training dataset
2024-04-29 20:59:32,115:INFO:Defining folds
2024-04-29 20:59:32,115:INFO:Declaring metric variables
2024-04-29 20:59:32,115:INFO:Importing untrained model
2024-04-29 20:59:32,115:INFO:Ada Boost Classifier Imported successfully
2024-04-29 20:59:32,116:INFO:Starting cross validation
2024-04-29 20:59:32,117:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 20:59:32,147:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-29 20:59:32,148:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-29 20:59:32,149:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-29 20:59:32,150:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-29 20:59:32,151:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-29 20:59:32,155:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-29 20:59:32,156:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-29 20:59:32,160:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-29 20:59:32,311:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:32,312:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:32,312:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:32,314:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:32,314:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:32,314:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:32,316:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:32,316:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:32,318:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:32,318:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:32,319:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:32,319:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:32,319:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:32,321:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:32,321:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:32,322:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:32,322:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:32,322:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:32,323:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:32,323:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:32,324:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:32,324:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:32,324:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:32,326:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:32,327:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:32,327:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:32,329:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:32,329:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:32,331:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:32,331:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:32,331:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:32,333:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:32,333:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:32,335:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:32,335:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:32,338:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:32,341:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-29 20:59:32,342:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-29 20:59:32,422:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:32,423:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:32,423:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:32,424:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:32,425:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:32,426:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:32,426:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:32,427:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:32,428:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:32,428:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:32,440:INFO:Calculating mean and std
2024-04-29 20:59:32,440:INFO:Creating metrics dataframe
2024-04-29 20:59:32,443:INFO:Uploading results into container
2024-04-29 20:59:32,444:INFO:Uploading model into container now
2024-04-29 20:59:32,444:INFO:_master_model_container: 9
2024-04-29 20:59:32,444:INFO:_display_container: 2
2024-04-29 20:59:32,444:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-04-29 20:59:32,444:INFO:create_model() successfully completed......................................
2024-04-29 20:59:32,510:INFO:SubProcess create_model() end ==================================
2024-04-29 20:59:32,510:INFO:Creating metrics dataframe
2024-04-29 20:59:32,520:INFO:Initializing Gradient Boosting Classifier
2024-04-29 20:59:32,520:INFO:Total runtime is 0.09664122263590494 minutes
2024-04-29 20:59:32,520:INFO:SubProcess create_model() called ==================================
2024-04-29 20:59:32,520:INFO:Initializing create_model()
2024-04-29 20:59:32,521:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x737b2cfd9900>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x737b0d89b730>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 20:59:32,521:INFO:Checking exceptions
2024-04-29 20:59:32,521:INFO:Importing libraries
2024-04-29 20:59:32,521:INFO:Copying training dataset
2024-04-29 20:59:32,525:INFO:Defining folds
2024-04-29 20:59:32,525:INFO:Declaring metric variables
2024-04-29 20:59:32,526:INFO:Importing untrained model
2024-04-29 20:59:32,526:INFO:Gradient Boosting Classifier Imported successfully
2024-04-29 20:59:32,527:INFO:Starting cross validation
2024-04-29 20:59:32,528:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 20:59:33,360:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:33,363:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,363:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:33,366:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,367:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:33,367:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:33,368:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,369:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,370:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,372:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,374:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,375:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:33,375:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,376:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,377:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,377:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,380:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,381:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,383:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,388:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,391:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:33,393:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,399:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,405:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,408:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:33,411:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,414:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:33,415:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,416:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,416:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:33,418:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,419:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,422:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,832:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:33,834:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,836:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,838:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,841:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:33,842:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,844:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,846:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,853:INFO:Calculating mean and std
2024-04-29 20:59:33,854:INFO:Creating metrics dataframe
2024-04-29 20:59:33,857:INFO:Uploading results into container
2024-04-29 20:59:33,857:INFO:Uploading model into container now
2024-04-29 20:59:33,858:INFO:_master_model_container: 10
2024-04-29 20:59:33,858:INFO:_display_container: 2
2024-04-29 20:59:33,858:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-04-29 20:59:33,858:INFO:create_model() successfully completed......................................
2024-04-29 20:59:33,921:INFO:SubProcess create_model() end ==================================
2024-04-29 20:59:33,921:INFO:Creating metrics dataframe
2024-04-29 20:59:33,929:INFO:Initializing Linear Discriminant Analysis
2024-04-29 20:59:33,929:INFO:Total runtime is 0.12012342611948648 minutes
2024-04-29 20:59:33,929:INFO:SubProcess create_model() called ==================================
2024-04-29 20:59:33,929:INFO:Initializing create_model()
2024-04-29 20:59:33,929:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x737b2cfd9900>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x737b0d89b730>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 20:59:33,929:INFO:Checking exceptions
2024-04-29 20:59:33,929:INFO:Importing libraries
2024-04-29 20:59:33,930:INFO:Copying training dataset
2024-04-29 20:59:33,934:INFO:Defining folds
2024-04-29 20:59:33,934:INFO:Declaring metric variables
2024-04-29 20:59:33,935:INFO:Importing untrained model
2024-04-29 20:59:33,935:INFO:Linear Discriminant Analysis Imported successfully
2024-04-29 20:59:33,935:INFO:Starting cross validation
2024-04-29 20:59:33,936:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 20:59:33,982:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:33,982:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:33,983:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:33,984:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:33,985:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,985:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,986:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:33,986:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,987:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,988:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:33,988:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,990:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,990:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,991:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,991:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,991:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:33,991:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,992:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:33,993:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:33,993:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,994:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,995:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,995:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,995:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,996:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,996:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,996:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,998:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:33,999:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,000:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,001:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,002:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 20:59:34,004:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,005:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,030:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:34,030:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 20:59:34,032:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,032:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,035:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,036:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,039:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,039:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,045:INFO:Calculating mean and std
2024-04-29 20:59:34,046:INFO:Creating metrics dataframe
2024-04-29 20:59:34,049:INFO:Uploading results into container
2024-04-29 20:59:34,049:INFO:Uploading model into container now
2024-04-29 20:59:34,049:INFO:_master_model_container: 11
2024-04-29 20:59:34,049:INFO:_display_container: 2
2024-04-29 20:59:34,050:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-04-29 20:59:34,050:INFO:create_model() successfully completed......................................
2024-04-29 20:59:34,114:INFO:SubProcess create_model() end ==================================
2024-04-29 20:59:34,114:INFO:Creating metrics dataframe
2024-04-29 20:59:34,121:INFO:Initializing Extra Trees Classifier
2024-04-29 20:59:34,121:INFO:Total runtime is 0.12333267927169798 minutes
2024-04-29 20:59:34,122:INFO:SubProcess create_model() called ==================================
2024-04-29 20:59:34,122:INFO:Initializing create_model()
2024-04-29 20:59:34,122:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x737b2cfd9900>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x737b0d89b730>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 20:59:34,122:INFO:Checking exceptions
2024-04-29 20:59:34,122:INFO:Importing libraries
2024-04-29 20:59:34,122:INFO:Copying training dataset
2024-04-29 20:59:34,128:INFO:Defining folds
2024-04-29 20:59:34,128:INFO:Declaring metric variables
2024-04-29 20:59:34,128:INFO:Importing untrained model
2024-04-29 20:59:34,129:INFO:Extra Trees Classifier Imported successfully
2024-04-29 20:59:34,129:INFO:Starting cross validation
2024-04-29 20:59:34,130:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 20:59:34,372:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:34,373:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 20:59:34,376:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,382:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,387:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,403:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:34,404:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 20:59:34,406:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,410:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:34,411:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 20:59:34,412:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:34,413:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 20:59:34,414:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,415:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,416:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,417:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:34,418:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 20:59:34,420:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,420:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,421:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,421:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,422:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:34,423:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 20:59:34,425:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,426:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,427:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,427:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,429:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:34,429:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 20:59:34,431:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,432:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,432:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,436:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,436:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,440:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,443:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:34,444:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 20:59:34,446:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,449:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,452:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,602:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:34,603:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 20:59:34,604:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,608:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,611:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,620:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 20:59:34,621:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 20:59:34,623:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,627:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,631:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 20:59:34,643:INFO:Calculating mean and std
2024-04-29 20:59:34,643:INFO:Creating metrics dataframe
2024-04-29 20:59:34,647:INFO:Uploading results into container
2024-04-29 20:59:34,648:INFO:Uploading model into container now
2024-04-29 20:59:34,649:INFO:_master_model_container: 12
2024-04-29 20:59:34,649:INFO:_display_container: 2
2024-04-29 20:59:34,649:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-04-29 20:59:34,649:INFO:create_model() successfully completed......................................
2024-04-29 20:59:34,715:INFO:SubProcess create_model() end ==================================
2024-04-29 20:59:34,715:INFO:Creating metrics dataframe
2024-04-29 20:59:34,726:INFO:Initializing Light Gradient Boosting Machine
2024-04-29 20:59:34,726:INFO:Total runtime is 0.13341157833735146 minutes
2024-04-29 20:59:34,726:INFO:SubProcess create_model() called ==================================
2024-04-29 20:59:34,727:INFO:Initializing create_model()
2024-04-29 20:59:34,727:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x737b2cfd9900>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x737b0d89b730>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 20:59:34,727:INFO:Checking exceptions
2024-04-29 20:59:34,727:INFO:Importing libraries
2024-04-29 20:59:34,727:INFO:Copying training dataset
2024-04-29 20:59:34,733:INFO:Defining folds
2024-04-29 20:59:34,733:INFO:Declaring metric variables
2024-04-29 20:59:34,733:INFO:Importing untrained model
2024-04-29 20:59:34,734:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-29 20:59:34,734:INFO:Starting cross validation
2024-04-29 20:59:34,736:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 21:08:04,934:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:08:04,934:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:08:04,936:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:08:04,942:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:08:04,945:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:08:19,106:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:08:19,107:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:08:19,108:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:08:19,111:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:08:19,147:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:08:33,658:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:08:33,662:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:08:33,664:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:08:33,707:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:08:33,762:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:08:35,818:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:08:35,822:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:08:35,824:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:08:35,908:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:08:35,944:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:08:38,324:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:08:38,329:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:08:38,330:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:08:38,334:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:08:38,370:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:08:40,094:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:08:40,095:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:08:40,097:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:08:40,111:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:08:40,127:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:08:45,018:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:08:45,028:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 21:08:45,030:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:08:45,037:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:08:45,063:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:08:59,646:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:08:59,650:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:08:59,652:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:08:59,662:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:08:59,667:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:09:47,321:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:09:47,322:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 21:09:47,323:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:09:47,326:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:09:47,329:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:09:47,373:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:09:47,374:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 21:09:47,375:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:09:47,378:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:09:47,381:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:09:47,395:INFO:Calculating mean and std
2024-04-29 21:09:47,396:INFO:Creating metrics dataframe
2024-04-29 21:09:47,399:INFO:Uploading results into container
2024-04-29 21:09:47,400:INFO:Uploading model into container now
2024-04-29 21:09:47,400:INFO:_master_model_container: 13
2024-04-29 21:09:47,400:INFO:_display_container: 2
2024-04-29 21:09:47,401:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-04-29 21:09:47,401:INFO:create_model() successfully completed......................................
2024-04-29 21:09:47,467:INFO:SubProcess create_model() end ==================================
2024-04-29 21:09:47,468:INFO:Creating metrics dataframe
2024-04-29 21:09:47,476:INFO:Initializing Dummy Classifier
2024-04-29 21:09:47,476:INFO:Total runtime is 10.34590627749761 minutes
2024-04-29 21:09:47,476:INFO:SubProcess create_model() called ==================================
2024-04-29 21:09:47,476:INFO:Initializing create_model()
2024-04-29 21:09:47,476:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x737b2cfd9900>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x737b0d89b730>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 21:09:47,476:INFO:Checking exceptions
2024-04-29 21:09:47,476:INFO:Importing libraries
2024-04-29 21:09:47,477:INFO:Copying training dataset
2024-04-29 21:09:47,481:INFO:Defining folds
2024-04-29 21:09:47,481:INFO:Declaring metric variables
2024-04-29 21:09:47,482:INFO:Importing untrained model
2024-04-29 21:09:47,482:INFO:Dummy Classifier Imported successfully
2024-04-29 21:09:47,482:INFO:Starting cross validation
2024-04-29 21:09:47,484:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 21:09:47,520:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:09:47,521:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:09:47,522:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:09:47,523:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:09:47,524:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:09:47,524:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:09:47,525:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:09:47,525:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:09:47,525:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:09:47,526:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:09:47,526:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:09:47,527:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:09:47,527:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:09:47,527:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:09:47,528:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:09:47,529:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:09:47,529:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:09:47,530:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:09:47,530:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:09:47,530:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:09:47,531:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:09:47,531:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:09:47,531:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:09:47,533:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:09:47,533:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:09:47,533:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:09:47,533:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:09:47,534:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:09:47,534:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 21:09:47,535:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:09:47,535:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:09:47,535:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:09:47,536:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:09:47,536:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:09:47,537:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:09:47,537:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:09:47,537:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:09:47,538:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:09:47,539:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:09:47,539:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:09:47,540:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:09:47,540:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:09:47,541:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:09:47,541:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:09:47,542:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:09:47,543:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:09:47,544:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:09:47,546:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:09:47,559:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:09:47,559:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:09:47,559:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 21:09:47,559:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 21:09:47,561:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:09:47,561:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:09:47,563:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:09:47,563:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:09:47,564:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:09:47,564:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:09:47,565:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:09:47,565:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:09:47,579:INFO:Calculating mean and std
2024-04-29 21:09:47,580:INFO:Creating metrics dataframe
2024-04-29 21:09:47,583:INFO:Uploading results into container
2024-04-29 21:09:47,584:INFO:Uploading model into container now
2024-04-29 21:09:47,584:INFO:_master_model_container: 14
2024-04-29 21:09:47,584:INFO:_display_container: 2
2024-04-29 21:09:47,584:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-04-29 21:09:47,584:INFO:create_model() successfully completed......................................
2024-04-29 21:09:47,650:INFO:SubProcess create_model() end ==================================
2024-04-29 21:09:47,651:INFO:Creating metrics dataframe
2024-04-29 21:09:47,662:INFO:Initializing create_model()
2024-04-29 21:09:47,662:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x737b2cfd9900>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 21:09:47,662:INFO:Checking exceptions
2024-04-29 21:09:47,663:INFO:Importing libraries
2024-04-29 21:09:47,663:INFO:Copying training dataset
2024-04-29 21:09:47,667:INFO:Defining folds
2024-04-29 21:09:47,667:INFO:Declaring metric variables
2024-04-29 21:09:47,668:INFO:Importing untrained model
2024-04-29 21:09:47,668:INFO:Declaring custom model
2024-04-29 21:09:47,669:INFO:Extra Trees Classifier Imported successfully
2024-04-29 21:09:47,670:INFO:Cross validation set to False
2024-04-29 21:09:47,670:INFO:Fitting Model
2024-04-29 21:09:47,780:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-04-29 21:09:47,780:INFO:create_model() successfully completed......................................
2024-04-29 21:09:47,864:INFO:_master_model_container: 14
2024-04-29 21:09:47,864:INFO:_display_container: 2
2024-04-29 21:09:47,865:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-04-29 21:09:47,865:INFO:compare_models() successfully completed......................................
2024-04-29 21:09:47,866:INFO:Initializing evaluate_model()
2024-04-29 21:09:47,866:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x737b2cfd9900>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-04-29 21:09:47,875:INFO:Initializing plot_model()
2024-04-29 21:09:47,875:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x737b2cfd9900>, system=True)
2024-04-29 21:09:47,876:INFO:Checking exceptions
2024-04-29 21:09:47,904:INFO:Preloading libraries
2024-04-29 21:09:47,914:INFO:Copying training dataset
2024-04-29 21:09:47,914:INFO:Plot type: pipeline
2024-04-29 21:11:53,406:INFO:Visual Rendered Successfully
2024-04-29 21:11:53,491:INFO:plot_model() successfully completed......................................
2024-04-29 21:11:53,494:INFO:Initializing plot_model()
2024-04-29 21:11:53,494:INFO:plot_model(plot=class_report, fold=None, verbose=True, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x737b2cfd9900>, system=True)
2024-04-29 21:11:53,494:INFO:Checking exceptions
2024-04-29 21:11:53,524:INFO:Preloading libraries
2024-04-29 21:11:53,535:INFO:Copying training dataset
2024-04-29 21:11:53,535:INFO:Plot type: class_report
2024-04-29 21:11:53,623:INFO:Fitting Model
2024-04-29 21:11:53,624:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2024-04-29 21:11:53,624:INFO:Scoring test/hold-out set
2024-04-29 21:11:59,740:INFO:Visual Rendered Successfully
2024-04-29 21:11:59,818:INFO:plot_model() successfully completed......................................
2024-04-29 21:11:59,819:INFO:Initializing predict_model()
2024-04-29 21:11:59,819:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x737b2cfd9900>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x737b0da32560>)
2024-04-29 21:11:59,819:INFO:Checking exceptions
2024-04-29 21:11:59,820:INFO:Preloading libraries
2024-04-29 21:11:59,938:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:11:59,941:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:11:59,944:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:12:00,039:INFO:Initializing predict_model()
2024-04-29 21:12:00,039:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x737b2cfd9900>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x737b0da32560>)
2024-04-29 21:12:00,040:INFO:Checking exceptions
2024-04-29 21:12:00,040:INFO:Preloading libraries
2024-04-29 21:12:00,040:INFO:Set up data.
2024-04-29 21:12:00,046:INFO:Set up index.
2024-04-29 21:12:00,124:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:12:00,126:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:12:00,129:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:12:00,224:INFO:Initializing predict_model()
2024-04-29 21:12:00,224:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x737b2cfd9900>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x737b0da32560>)
2024-04-29 21:12:00,224:INFO:Checking exceptions
2024-04-29 21:12:00,224:INFO:Preloading libraries
2024-04-29 21:12:00,225:INFO:Set up data.
2024-04-29 21:12:00,234:INFO:Set up index.
2024-04-29 21:12:00,313:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:12:00,315:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:12:00,317:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:12:00,408:INFO:Initializing save_model()
2024-04-29 21:12:00,408:INFO:save_model(model=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), model_name=my_best_pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Jsc', 'Voc', 'FF', 'Efficiency',
                                             'Sr', 'Sp', 'Temp'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-29 21:12:00,408:INFO:Adding model into prep_pipe
2024-04-29 21:12:00,465:INFO:my_best_pipeline.pkl saved in current working directory
2024-04-29 21:12:00,470:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Jsc', 'Voc', 'FF', 'Efficiency',
                                             'Sr', 'Sp', 'Temp'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2024-04-29 21:12:00,470:INFO:save_model() successfully completed......................................
2024-04-29 21:12:00,538:INFO:Initializing load_model()
2024-04-29 21:12:00,538:INFO:load_model(model_name=my_best_pipeline, platform=None, authentication=None, verbose=True)
2024-04-29 21:12:50,563:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 21:12:50,563:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 21:12:50,563:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 21:12:50,563:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 21:12:50,697:INFO:PyCaret ClusteringExperiment
2024-04-29 21:12:50,697:INFO:Logging name: cluster-default-name
2024-04-29 21:12:50,697:INFO:ML Usecase: MLUsecase.CLUSTERING
2024-04-29 21:12:50,697:INFO:version 3.3.1
2024-04-29 21:12:50,697:INFO:Initializing setup()
2024-04-29 21:12:50,697:INFO:self.USI: cb43
2024-04-29 21:12:50,697:INFO:self._variable_keys: {'exp_name_log', 'n_jobs_param', 'idx', 'memory', 'pipeline', 'exp_id', 'gpu_param', 'logging_param', '_available_plots', 'gpu_n_jobs_param', '_ml_usecase', 'html_param', 'X', 'seed', 'USI', 'data', 'log_plots_param'}
2024-04-29 21:12:50,697:INFO:Checking environment
2024-04-29 21:12:50,698:INFO:python_version: 3.10.12
2024-04-29 21:12:50,698:INFO:python_build: ('main', 'Nov 20 2023 15:14:05')
2024-04-29 21:12:50,698:INFO:machine: x86_64
2024-04-29 21:12:50,699:INFO:platform: Linux-6.5.0-28-generic-x86_64-with-glibc2.35
2024-04-29 21:12:50,699:INFO:Memory: svmem(total=16608317440, available=8683909120, percent=47.7, used=5985460224, free=5351526400, active=6927998976, inactive=2418270208, buffers=172359680, cached=5098971136, shared=1565237248, slab=606580736)
2024-04-29 21:12:50,700:INFO:Physical Core: 4
2024-04-29 21:12:50,700:INFO:Logical Core: 8
2024-04-29 21:12:50,700:INFO:Checking libraries
2024-04-29 21:12:50,700:INFO:System:
2024-04-29 21:12:50,700:INFO:    python: 3.10.12 (main, Nov 20 2023, 15:14:05) [GCC 11.4.0]
2024-04-29 21:12:50,700:INFO:executable: /bin/python3
2024-04-29 21:12:50,701:INFO:   machine: Linux-6.5.0-28-generic-x86_64-with-glibc2.35
2024-04-29 21:12:50,701:INFO:PyCaret required dependencies:
2024-04-29 21:12:50,716:INFO:                 pip: 22.0.2
2024-04-29 21:12:50,716:INFO:          setuptools: 59.6.0
2024-04-29 21:12:50,716:INFO:             pycaret: 3.3.1
2024-04-29 21:12:50,716:INFO:             IPython: 8.24.0
2024-04-29 21:12:50,716:INFO:          ipywidgets: 8.1.2
2024-04-29 21:12:50,716:INFO:                tqdm: 4.66.2
2024-04-29 21:12:50,716:INFO:               numpy: 1.23.5
2024-04-29 21:12:50,716:INFO:              pandas: 1.5.2
2024-04-29 21:12:50,716:INFO:              jinja2: 3.0.3
2024-04-29 21:12:50,716:INFO:               scipy: 1.11.4
2024-04-29 21:12:50,716:INFO:              joblib: 1.3.2
2024-04-29 21:12:50,716:INFO:             sklearn: 1.4.2
2024-04-29 21:12:50,716:INFO:                pyod: 1.1.3
2024-04-29 21:12:50,716:INFO:            imblearn: 0.12.2
2024-04-29 21:12:50,716:INFO:   category_encoders: 2.6.3
2024-04-29 21:12:50,717:INFO:            lightgbm: 4.3.0
2024-04-29 21:12:50,717:INFO:               numba: 0.59.1
2024-04-29 21:12:50,717:INFO:            requests: 2.25.1
2024-04-29 21:12:50,717:INFO:          matplotlib: 3.6.2
2024-04-29 21:12:50,717:INFO:          scikitplot: 0.3.7
2024-04-29 21:12:50,717:INFO:         yellowbrick: 1.5
2024-04-29 21:12:50,717:INFO:              plotly: 5.21.0
2024-04-29 21:12:50,717:INFO:    plotly-resampler: Not installed
2024-04-29 21:12:50,717:INFO:             kaleido: 0.2.1
2024-04-29 21:12:50,717:INFO:           schemdraw: 0.15
2024-04-29 21:12:50,717:INFO:         statsmodels: 0.14.2
2024-04-29 21:12:50,717:INFO:              sktime: 0.26.0
2024-04-29 21:12:50,717:INFO:               tbats: 1.1.3
2024-04-29 21:12:50,717:INFO:            pmdarima: 2.0.4
2024-04-29 21:12:50,717:INFO:              psutil: 5.9.8
2024-04-29 21:12:50,717:INFO:          markupsafe: 2.0.1
2024-04-29 21:12:50,717:INFO:             pickle5: Not installed
2024-04-29 21:12:50,717:INFO:         cloudpickle: 3.0.0
2024-04-29 21:12:50,717:INFO:         deprecation: 2.1.0
2024-04-29 21:12:50,717:INFO:              xxhash: 3.4.1
2024-04-29 21:12:50,717:INFO:           wurlitzer: 3.0.3
2024-04-29 21:12:50,717:INFO:PyCaret optional dependencies:
2024-04-29 21:12:50,817:INFO:                shap: Not installed
2024-04-29 21:12:50,817:INFO:           interpret: Not installed
2024-04-29 21:12:50,817:INFO:                umap: Not installed
2024-04-29 21:12:50,817:INFO:     ydata_profiling: Not installed
2024-04-29 21:12:50,817:INFO:  explainerdashboard: Not installed
2024-04-29 21:12:50,817:INFO:             autoviz: Not installed
2024-04-29 21:12:50,817:INFO:           fairlearn: Not installed
2024-04-29 21:12:50,817:INFO:          deepchecks: Not installed
2024-04-29 21:12:50,817:INFO:             xgboost: Not installed
2024-04-29 21:12:50,817:INFO:            catboost: Not installed
2024-04-29 21:12:50,817:INFO:              kmodes: Not installed
2024-04-29 21:12:50,818:INFO:             mlxtend: Not installed
2024-04-29 21:12:50,818:INFO:       statsforecast: Not installed
2024-04-29 21:12:50,818:INFO:        tune_sklearn: Not installed
2024-04-29 21:12:50,818:INFO:                 ray: Not installed
2024-04-29 21:12:50,818:INFO:            hyperopt: Not installed
2024-04-29 21:12:50,818:INFO:              optuna: Not installed
2024-04-29 21:12:50,818:INFO:               skopt: Not installed
2024-04-29 21:12:50,818:INFO:              mlflow: Not installed
2024-04-29 21:12:50,818:INFO:              gradio: Not installed
2024-04-29 21:12:50,818:INFO:             fastapi: 0.88.0
2024-04-29 21:12:50,818:INFO:             uvicorn: Not installed
2024-04-29 21:12:50,818:INFO:              m2cgen: Not installed
2024-04-29 21:12:50,818:INFO:           evidently: Not installed
2024-04-29 21:12:50,818:INFO:               fugue: Not installed
2024-04-29 21:12:50,818:INFO:           streamlit: Not installed
2024-04-29 21:12:50,818:INFO:             prophet: Not installed
2024-04-29 21:12:50,818:INFO:None
2024-04-29 21:12:50,818:INFO:Set up data.
2024-04-29 21:12:50,821:INFO:Set up index.
2024-04-29 21:12:50,821:INFO:Assigning column types.
2024-04-29 21:12:50,823:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2024-04-29 21:12:50,824:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2024-04-29 21:12:50,824:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 21:12:50,824:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2024-04-29 21:12:50,824:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 21:12:50,824:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2024-04-29 21:12:50,824:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 21:12:50,825:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 21:12:50,826:INFO:Preparing preprocessing pipeline...
2024-04-29 21:12:50,826:INFO:Set up simple imputation.
2024-04-29 21:12:50,826:INFO:Set up feature normalization.
2024-04-29 21:12:50,842:INFO:Finished creating preprocessing pipeline.
2024-04-29 21:12:50,846:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Jsc', 'Voc', 'FF', 'Efficiency',
                                             'Sr', 'Sp', 'Temp', 'Class'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2024-04-29 21:12:50,847:INFO:Creating final display dataframe.
2024-04-29 21:12:50,861:INFO:Setup _display_container:                Description                 Value
0               Session id                  8003
1      Original data shape              (182, 8)
2   Transformed data shape              (182, 8)
3         Numeric features                     8
4               Preprocess                  True
5          Imputation type                simple
6       Numeric imputation                  mean
7   Categorical imputation                  mode
8                Normalize                  True
9         Normalize method                zscore
10                CPU Jobs                    -1
11                 Use GPU                 False
12          Log Experiment                 False
13         Experiment Name  cluster-default-name
14                     USI                  cb43
2024-04-29 21:12:50,864:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 21:12:50,864:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 21:12:50,864:INFO:setup() successfully completed in 0.17s...............
2024-04-29 21:12:50,864:INFO:Initializing create_model()
2024-04-29 21:12:50,864:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x7fe23b24c160>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2024-04-29 21:12:50,864:INFO:Checking exceptions
2024-04-29 21:12:50,878:INFO:Importing untrained model
2024-04-29 21:12:50,878:INFO:K-Means Clustering Imported successfully
2024-04-29 21:12:50,879:INFO:Fitting Model
2024-04-29 21:12:50,942:INFO:KMeans(n_clusters=4, random_state=8003)
2024-04-29 21:12:50,943:INFO:create_models() successfully completed......................................
2024-04-29 21:12:50,943:INFO:Uploading results into container
2024-04-29 21:12:50,948:INFO:Uploading model into container now
2024-04-29 21:12:50,959:INFO:_master_model_container: 1
2024-04-29 21:12:50,959:INFO:_display_container: 2
2024-04-29 21:12:50,960:INFO:KMeans(n_clusters=4, random_state=8003)
2024-04-29 21:12:50,960:INFO:create_model() successfully completed......................................
2024-04-29 21:12:51,063:INFO:Initializing evaluate_model()
2024-04-29 21:12:51,063:INFO:evaluate_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x7fe23b24c160>, estimator=KMeans(n_clusters=4, random_state=8003), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-04-29 21:12:51,070:INFO:Initializing plot_model()
2024-04-29 21:12:51,070:INFO:plot_model(plot=pipeline, fold=None, verbose=False, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=8003), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x7fe23b24c160>, system=True)
2024-04-29 21:12:51,070:INFO:Checking exceptions
2024-04-29 21:12:51,070:INFO:Preloading libraries
2024-04-29 21:12:51,071:INFO:Copying training dataset
2024-04-29 21:12:51,071:INFO:Plot type: pipeline
2024-04-29 21:12:54,668:INFO:Visual Rendered Successfully
2024-04-29 21:12:54,761:INFO:plot_model() successfully completed......................................
2024-04-29 21:12:54,763:INFO:Initializing plot_model()
2024-04-29 21:12:54,763:INFO:plot_model(plot=tsne, fold=None, verbose=True, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=8003), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x7fe23b24c160>, system=True)
2024-04-29 21:12:54,763:INFO:Checking exceptions
2024-04-29 21:12:54,764:INFO:Preloading libraries
2024-04-29 21:12:54,765:INFO:Copying training dataset
2024-04-29 21:12:54,765:INFO:Plot type: tsne
2024-04-29 21:12:54,766:INFO:SubProcess assign_model() called ==================================
2024-04-29 21:12:54,766:INFO:Initializing assign_model()
2024-04-29 21:12:54,766:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x7fe23b24c160>, model=KMeans(n_clusters=4, random_state=8003), transformation=True, score=False, verbose=False)
2024-04-29 21:12:54,766:INFO:Checking exceptions
2024-04-29 21:12:54,766:INFO:Determining Trained Model
2024-04-29 21:12:54,767:INFO:Trained Model : K-Means Clustering
2024-04-29 21:12:54,767:INFO:Copying data
2024-04-29 21:12:54,792:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2024-04-29 21:12:54,793:INFO:(182, 9)
2024-04-29 21:12:54,793:INFO:assign_model() successfully completed......................................
2024-04-29 21:12:54,793:INFO:SubProcess assign_model() end ==================================
2024-04-29 21:12:54,794:INFO:Fitting TSNE()
2024-04-29 21:12:55,434:INFO:Sorting dataframe
2024-04-29 21:12:55,435:INFO:Rendering Visual
2024-04-29 21:13:00,785:INFO:Visual Rendered Successfully
2024-04-29 21:13:00,887:INFO:plot_model() successfully completed......................................
2024-04-29 21:13:00,888:INFO:Initializing assign_model()
2024-04-29 21:13:00,888:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x7fe23b24c160>, model=KMeans(n_clusters=4, random_state=8003), transformation=False, score=True, verbose=True)
2024-04-29 21:13:00,888:INFO:Checking exceptions
2024-04-29 21:13:00,888:INFO:Determining Trained Model
2024-04-29 21:13:00,888:INFO:Trained Model : K-Means Clustering
2024-04-29 21:13:00,888:INFO:Copying data
2024-04-29 21:13:00,890:INFO:(182, 9)
2024-04-29 21:13:00,890:INFO:assign_model() successfully completed......................................
2024-04-29 21:13:00,891:INFO:Initializing predict_model()
2024-04-29 21:13:00,891:INFO:predict_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x7fe23b24c160>, estimator=KMeans(n_clusters=4, random_state=8003), ml_usecase=None)
2024-04-29 21:13:00,918:INFO:Initializing save_model()
2024-04-29 21:13:00,918:INFO:save_model(model=KMeans(n_clusters=4, random_state=8003), model_name=kmeans_pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Jsc', 'Voc', 'FF', 'Efficiency',
                                             'Sr', 'Sp', 'Temp', 'Class'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.CLUSTERING, kwargs={})
2024-04-29 21:13:00,918:INFO:Adding model into prep_pipe
2024-04-29 21:13:00,921:INFO:kmeans_pipeline.pkl saved in current working directory
2024-04-29 21:13:00,927:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Jsc', 'Voc', 'FF', 'Efficiency',
                                             'Sr', 'Sp', 'Temp', 'Class'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', KMeans(n_clusters=4, random_state=8003))])
2024-04-29 21:13:00,927:INFO:save_model() successfully completed......................................
2024-04-29 21:13:01,012:INFO:Initializing load_model()
2024-04-29 21:13:01,013:INFO:load_model(model_name=kmeans_pipeline, platform=None, authentication=None, verbose=True)
2024-04-29 21:14:12,612:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 21:14:12,612:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 21:14:12,612:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 21:14:12,612:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 21:14:12,748:INFO:PyCaret ClusteringExperiment
2024-04-29 21:14:12,748:INFO:Logging name: cluster-default-name
2024-04-29 21:14:12,748:INFO:ML Usecase: MLUsecase.CLUSTERING
2024-04-29 21:14:12,748:INFO:version 3.3.1
2024-04-29 21:14:12,748:INFO:Initializing setup()
2024-04-29 21:14:12,749:INFO:self.USI: b063
2024-04-29 21:14:12,749:INFO:self._variable_keys: {'n_jobs_param', 'gpu_param', 'X', '_available_plots', 'USI', 'seed', 'gpu_n_jobs_param', 'idx', 'log_plots_param', 'memory', 'exp_id', 'html_param', 'pipeline', '_ml_usecase', 'logging_param', 'data', 'exp_name_log'}
2024-04-29 21:14:12,749:INFO:Checking environment
2024-04-29 21:14:12,749:INFO:python_version: 3.10.12
2024-04-29 21:14:12,749:INFO:python_build: ('main', 'Nov 20 2023 15:14:05')
2024-04-29 21:14:12,749:INFO:machine: x86_64
2024-04-29 21:14:12,750:INFO:platform: Linux-6.5.0-28-generic-x86_64-with-glibc2.35
2024-04-29 21:14:12,751:INFO:Memory: svmem(total=16608317440, available=8476704768, percent=49.0, used=6074847232, free=5075464192, active=7018975232, inactive=2478555136, buffers=175599616, cached=5282406400, shared=1683054592, slab=608641024)
2024-04-29 21:14:12,751:INFO:Physical Core: 4
2024-04-29 21:14:12,751:INFO:Logical Core: 8
2024-04-29 21:14:12,751:INFO:Checking libraries
2024-04-29 21:14:12,751:INFO:System:
2024-04-29 21:14:12,751:INFO:    python: 3.10.12 (main, Nov 20 2023, 15:14:05) [GCC 11.4.0]
2024-04-29 21:14:12,751:INFO:executable: /bin/python3
2024-04-29 21:14:12,751:INFO:   machine: Linux-6.5.0-28-generic-x86_64-with-glibc2.35
2024-04-29 21:14:12,751:INFO:PyCaret required dependencies:
2024-04-29 21:14:12,765:INFO:                 pip: 22.0.2
2024-04-29 21:14:12,765:INFO:          setuptools: 59.6.0
2024-04-29 21:14:12,765:INFO:             pycaret: 3.3.1
2024-04-29 21:14:12,765:INFO:             IPython: 8.24.0
2024-04-29 21:14:12,765:INFO:          ipywidgets: 8.1.2
2024-04-29 21:14:12,765:INFO:                tqdm: 4.66.2
2024-04-29 21:14:12,765:INFO:               numpy: 1.23.5
2024-04-29 21:14:12,765:INFO:              pandas: 1.5.2
2024-04-29 21:14:12,765:INFO:              jinja2: 3.0.3
2024-04-29 21:14:12,765:INFO:               scipy: 1.11.4
2024-04-29 21:14:12,765:INFO:              joblib: 1.3.2
2024-04-29 21:14:12,765:INFO:             sklearn: 1.4.2
2024-04-29 21:14:12,765:INFO:                pyod: 1.1.3
2024-04-29 21:14:12,765:INFO:            imblearn: 0.12.2
2024-04-29 21:14:12,765:INFO:   category_encoders: 2.6.3
2024-04-29 21:14:12,765:INFO:            lightgbm: 4.3.0
2024-04-29 21:14:12,765:INFO:               numba: 0.59.1
2024-04-29 21:14:12,765:INFO:            requests: 2.25.1
2024-04-29 21:14:12,766:INFO:          matplotlib: 3.6.2
2024-04-29 21:14:12,766:INFO:          scikitplot: 0.3.7
2024-04-29 21:14:12,766:INFO:         yellowbrick: 1.5
2024-04-29 21:14:12,766:INFO:              plotly: 5.21.0
2024-04-29 21:14:12,766:INFO:    plotly-resampler: Not installed
2024-04-29 21:14:12,766:INFO:             kaleido: 0.2.1
2024-04-29 21:14:12,766:INFO:           schemdraw: 0.15
2024-04-29 21:14:12,766:INFO:         statsmodels: 0.14.2
2024-04-29 21:14:12,766:INFO:              sktime: 0.26.0
2024-04-29 21:14:12,766:INFO:               tbats: 1.1.3
2024-04-29 21:14:12,766:INFO:            pmdarima: 2.0.4
2024-04-29 21:14:12,766:INFO:              psutil: 5.9.8
2024-04-29 21:14:12,766:INFO:          markupsafe: 2.0.1
2024-04-29 21:14:12,766:INFO:             pickle5: Not installed
2024-04-29 21:14:12,766:INFO:         cloudpickle: 3.0.0
2024-04-29 21:14:12,766:INFO:         deprecation: 2.1.0
2024-04-29 21:14:12,766:INFO:              xxhash: 3.4.1
2024-04-29 21:14:12,766:INFO:           wurlitzer: 3.0.3
2024-04-29 21:14:12,766:INFO:PyCaret optional dependencies:
2024-04-29 21:14:12,864:INFO:                shap: Not installed
2024-04-29 21:14:12,864:INFO:           interpret: Not installed
2024-04-29 21:14:12,864:INFO:                umap: Not installed
2024-04-29 21:14:12,864:INFO:     ydata_profiling: Not installed
2024-04-29 21:14:12,864:INFO:  explainerdashboard: Not installed
2024-04-29 21:14:12,864:INFO:             autoviz: Not installed
2024-04-29 21:14:12,864:INFO:           fairlearn: Not installed
2024-04-29 21:14:12,864:INFO:          deepchecks: Not installed
2024-04-29 21:14:12,864:INFO:             xgboost: Not installed
2024-04-29 21:14:12,864:INFO:            catboost: Not installed
2024-04-29 21:14:12,864:INFO:              kmodes: Not installed
2024-04-29 21:14:12,864:INFO:             mlxtend: Not installed
2024-04-29 21:14:12,864:INFO:       statsforecast: Not installed
2024-04-29 21:14:12,864:INFO:        tune_sklearn: Not installed
2024-04-29 21:14:12,864:INFO:                 ray: Not installed
2024-04-29 21:14:12,864:INFO:            hyperopt: Not installed
2024-04-29 21:14:12,864:INFO:              optuna: Not installed
2024-04-29 21:14:12,864:INFO:               skopt: Not installed
2024-04-29 21:14:12,864:INFO:              mlflow: Not installed
2024-04-29 21:14:12,864:INFO:              gradio: Not installed
2024-04-29 21:14:12,865:INFO:             fastapi: 0.88.0
2024-04-29 21:14:12,865:INFO:             uvicorn: Not installed
2024-04-29 21:14:12,865:INFO:              m2cgen: Not installed
2024-04-29 21:14:12,865:INFO:           evidently: Not installed
2024-04-29 21:14:12,865:INFO:               fugue: Not installed
2024-04-29 21:14:12,865:INFO:           streamlit: Not installed
2024-04-29 21:14:12,865:INFO:             prophet: Not installed
2024-04-29 21:14:12,865:INFO:None
2024-04-29 21:14:12,865:INFO:Set up data.
2024-04-29 21:14:12,868:INFO:Set up index.
2024-04-29 21:14:12,868:INFO:Assigning column types.
2024-04-29 21:14:12,870:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2024-04-29 21:14:12,870:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2024-04-29 21:14:12,870:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 21:14:12,871:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2024-04-29 21:14:12,871:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 21:14:12,871:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2024-04-29 21:14:12,871:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 21:14:12,871:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 21:14:12,872:INFO:Preparing preprocessing pipeline...
2024-04-29 21:14:12,872:INFO:Set up simple imputation.
2024-04-29 21:14:12,872:INFO:Set up feature normalization.
2024-04-29 21:14:12,888:INFO:Finished creating preprocessing pipeline.
2024-04-29 21:14:12,892:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Jsc', 'Voc', 'FF', 'Efficiency',
                                             'Sr', 'Sp', 'Temp', 'Class'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2024-04-29 21:14:12,892:INFO:Creating final display dataframe.
2024-04-29 21:14:12,906:INFO:Setup _display_container:                Description                 Value
0               Session id                  4339
1      Original data shape              (182, 8)
2   Transformed data shape              (182, 8)
3         Numeric features                     8
4               Preprocess                  True
5          Imputation type                simple
6       Numeric imputation                  mean
7   Categorical imputation                  mode
8                Normalize                  True
9         Normalize method                zscore
10                CPU Jobs                    -1
11                 Use GPU                 False
12          Log Experiment                 False
13         Experiment Name  cluster-default-name
14                     USI                  b063
2024-04-29 21:14:12,910:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 21:14:12,910:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 21:14:12,910:INFO:setup() successfully completed in 0.16s...............
2024-04-29 21:14:12,910:INFO:Initializing create_model()
2024-04-29 21:14:12,910:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x73632f8a5930>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2024-04-29 21:14:12,910:INFO:Checking exceptions
2024-04-29 21:14:12,924:INFO:Importing untrained model
2024-04-29 21:14:12,924:INFO:K-Means Clustering Imported successfully
2024-04-29 21:14:12,925:INFO:Fitting Model
2024-04-29 21:14:13,000:INFO:KMeans(n_clusters=4, random_state=4339)
2024-04-29 21:14:13,000:INFO:create_models() successfully completed......................................
2024-04-29 21:14:13,001:INFO:Uploading results into container
2024-04-29 21:14:13,012:INFO:Uploading model into container now
2024-04-29 21:14:13,039:INFO:_master_model_container: 1
2024-04-29 21:14:13,039:INFO:_display_container: 2
2024-04-29 21:14:13,040:INFO:KMeans(n_clusters=4, random_state=4339)
2024-04-29 21:14:13,041:INFO:create_model() successfully completed......................................
2024-04-29 21:14:13,149:INFO:Initializing evaluate_model()
2024-04-29 21:14:13,149:INFO:evaluate_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x73632f8a5930>, estimator=KMeans(n_clusters=4, random_state=4339), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-04-29 21:14:13,154:INFO:Initializing plot_model()
2024-04-29 21:14:13,154:INFO:plot_model(plot=pipeline, fold=None, verbose=False, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=4339), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x73632f8a5930>, system=True)
2024-04-29 21:14:13,155:INFO:Checking exceptions
2024-04-29 21:14:13,156:INFO:Preloading libraries
2024-04-29 21:14:13,156:INFO:Copying training dataset
2024-04-29 21:14:13,156:INFO:Plot type: pipeline
2024-04-29 21:14:15,358:INFO:Visual Rendered Successfully
2024-04-29 21:14:15,445:INFO:plot_model() successfully completed......................................
2024-04-29 21:14:15,447:INFO:Initializing plot_model()
2024-04-29 21:14:15,447:INFO:plot_model(plot=elbow, fold=None, verbose=True, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=4339), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x73632f8a5930>, system=True)
2024-04-29 21:14:15,447:INFO:Checking exceptions
2024-04-29 21:14:15,449:INFO:Preloading libraries
2024-04-29 21:14:15,449:INFO:Copying training dataset
2024-04-29 21:14:15,449:INFO:Plot type: elbow
2024-04-29 21:14:15,510:INFO:Fitting Model
2024-04-29 21:14:30,492:INFO:Visual Rendered Successfully
2024-04-29 21:14:30,575:INFO:plot_model() successfully completed......................................
2024-04-29 21:14:30,576:INFO:Initializing plot_model()
2024-04-29 21:14:30,576:INFO:plot_model(plot=silhouette, fold=None, verbose=True, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=4339), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x73632f8a5930>, system=True)
2024-04-29 21:14:30,576:INFO:Checking exceptions
2024-04-29 21:14:30,578:INFO:Preloading libraries
2024-04-29 21:14:30,578:INFO:Copying training dataset
2024-04-29 21:14:30,578:INFO:Plot type: silhouette
2024-04-29 21:14:30,607:INFO:Fitting Model
2024-04-29 21:14:30,608:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but KMeans was fitted with feature names
  warnings.warn(

2024-04-29 21:14:47,565:INFO:Visual Rendered Successfully
2024-04-29 21:14:47,641:INFO:plot_model() successfully completed......................................
2024-04-29 21:14:47,642:INFO:Initializing plot_model()
2024-04-29 21:14:47,642:INFO:plot_model(plot=tsne, fold=None, verbose=True, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=4339), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x73632f8a5930>, system=True)
2024-04-29 21:14:47,642:INFO:Checking exceptions
2024-04-29 21:14:47,645:INFO:Preloading libraries
2024-04-29 21:14:47,645:INFO:Copying training dataset
2024-04-29 21:14:47,645:INFO:Plot type: tsne
2024-04-29 21:14:47,646:INFO:SubProcess assign_model() called ==================================
2024-04-29 21:14:47,647:INFO:Initializing assign_model()
2024-04-29 21:14:47,647:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x73632f8a5930>, model=KMeans(n_clusters=4, random_state=4339), transformation=True, score=False, verbose=False)
2024-04-29 21:14:47,647:INFO:Checking exceptions
2024-04-29 21:14:47,647:INFO:Determining Trained Model
2024-04-29 21:14:47,647:INFO:Trained Model : K-Means Clustering
2024-04-29 21:14:47,647:INFO:Copying data
2024-04-29 21:14:47,667:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2024-04-29 21:14:47,668:INFO:(182, 9)
2024-04-29 21:14:47,668:INFO:assign_model() successfully completed......................................
2024-04-29 21:14:47,668:INFO:SubProcess assign_model() end ==================================
2024-04-29 21:14:47,669:INFO:Fitting TSNE()
2024-04-29 21:14:48,267:INFO:Sorting dataframe
2024-04-29 21:14:48,268:INFO:Rendering Visual
2024-04-29 21:14:53,525:INFO:Visual Rendered Successfully
2024-04-29 21:14:53,622:INFO:plot_model() successfully completed......................................
2024-04-29 21:14:53,623:INFO:Initializing assign_model()
2024-04-29 21:14:53,623:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x73632f8a5930>, model=KMeans(n_clusters=4, random_state=4339), transformation=False, score=True, verbose=True)
2024-04-29 21:14:53,623:INFO:Checking exceptions
2024-04-29 21:14:53,623:INFO:Determining Trained Model
2024-04-29 21:14:53,623:INFO:Trained Model : K-Means Clustering
2024-04-29 21:14:53,623:INFO:Copying data
2024-04-29 21:14:53,625:INFO:(182, 9)
2024-04-29 21:14:53,625:INFO:assign_model() successfully completed......................................
2024-04-29 21:14:53,626:INFO:Initializing predict_model()
2024-04-29 21:14:53,626:INFO:predict_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x73632f8a5930>, estimator=KMeans(n_clusters=4, random_state=4339), ml_usecase=None)
2024-04-29 21:14:53,655:INFO:Initializing save_model()
2024-04-29 21:14:53,655:INFO:save_model(model=KMeans(n_clusters=4, random_state=4339), model_name=kmeans_pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Jsc', 'Voc', 'FF', 'Efficiency',
                                             'Sr', 'Sp', 'Temp', 'Class'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.CLUSTERING, kwargs={})
2024-04-29 21:14:53,655:INFO:Adding model into prep_pipe
2024-04-29 21:14:53,659:INFO:kmeans_pipeline.pkl saved in current working directory
2024-04-29 21:14:53,665:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Jsc', 'Voc', 'FF', 'Efficiency',
                                             'Sr', 'Sp', 'Temp', 'Class'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', KMeans(n_clusters=4, random_state=4339))])
2024-04-29 21:14:53,665:INFO:save_model() successfully completed......................................
2024-04-29 21:14:53,768:INFO:Initializing load_model()
2024-04-29 21:14:53,768:INFO:load_model(model_name=kmeans_pipeline, platform=None, authentication=None, verbose=True)
2024-04-29 21:15:54,160:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 21:15:54,160:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 21:15:54,160:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 21:15:54,160:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 21:15:54,390:INFO:PyCaret ClassificationExperiment
2024-04-29 21:15:54,390:INFO:Logging name: clf-default-name
2024-04-29 21:15:54,390:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-29 21:15:54,390:INFO:version 3.3.1
2024-04-29 21:15:54,390:INFO:Initializing setup()
2024-04-29 21:15:54,390:INFO:self.USI: 22a5
2024-04-29 21:15:54,390:INFO:self._variable_keys: {'pipeline', '_ml_usecase', 'X_test', 'data', 'n_jobs_param', 'target_param', 'gpu_param', 'exp_name_log', 'seed', 'logging_param', 'fold_groups_param', '_available_plots', 'USI', 'idx', 'memory', 'X_train', 'y_test', 'fix_imbalance', 'is_multiclass', 'gpu_n_jobs_param', 'fold_generator', 'log_plots_param', 'y', 'html_param', 'y_train', 'fold_shuffle_param', 'X', 'exp_id'}
2024-04-29 21:15:54,390:INFO:Checking environment
2024-04-29 21:15:54,390:INFO:python_version: 3.10.12
2024-04-29 21:15:54,390:INFO:python_build: ('main', 'Nov 20 2023 15:14:05')
2024-04-29 21:15:54,390:INFO:machine: x86_64
2024-04-29 21:15:54,392:INFO:platform: Linux-6.5.0-28-generic-x86_64-with-glibc2.35
2024-04-29 21:15:54,392:INFO:Memory: svmem(total=16608317440, available=8455831552, percent=49.1, used=6131662848, free=5056032768, active=7065862144, inactive=2486083584, buffers=176664576, cached=5243957248, shared=1647112192, slab=610041856)
2024-04-29 21:15:54,393:INFO:Physical Core: 4
2024-04-29 21:15:54,393:INFO:Logical Core: 8
2024-04-29 21:15:54,393:INFO:Checking libraries
2024-04-29 21:15:54,393:INFO:System:
2024-04-29 21:15:54,393:INFO:    python: 3.10.12 (main, Nov 20 2023, 15:14:05) [GCC 11.4.0]
2024-04-29 21:15:54,393:INFO:executable: /bin/python3
2024-04-29 21:15:54,393:INFO:   machine: Linux-6.5.0-28-generic-x86_64-with-glibc2.35
2024-04-29 21:15:54,393:INFO:PyCaret required dependencies:
2024-04-29 21:15:54,412:INFO:                 pip: 22.0.2
2024-04-29 21:15:54,412:INFO:          setuptools: 59.6.0
2024-04-29 21:15:54,412:INFO:             pycaret: 3.3.1
2024-04-29 21:15:54,413:INFO:             IPython: 8.24.0
2024-04-29 21:15:54,413:INFO:          ipywidgets: 8.1.2
2024-04-29 21:15:54,413:INFO:                tqdm: 4.66.2
2024-04-29 21:15:54,413:INFO:               numpy: 1.23.5
2024-04-29 21:15:54,413:INFO:              pandas: 1.5.2
2024-04-29 21:15:54,413:INFO:              jinja2: 3.0.3
2024-04-29 21:15:54,413:INFO:               scipy: 1.11.4
2024-04-29 21:15:54,413:INFO:              joblib: 1.3.2
2024-04-29 21:15:54,413:INFO:             sklearn: 1.4.2
2024-04-29 21:15:54,413:INFO:                pyod: 1.1.3
2024-04-29 21:15:54,413:INFO:            imblearn: 0.12.2
2024-04-29 21:15:54,413:INFO:   category_encoders: 2.6.3
2024-04-29 21:15:54,413:INFO:            lightgbm: 4.3.0
2024-04-29 21:15:54,413:INFO:               numba: 0.59.1
2024-04-29 21:15:54,413:INFO:            requests: 2.25.1
2024-04-29 21:15:54,413:INFO:          matplotlib: 3.6.2
2024-04-29 21:15:54,413:INFO:          scikitplot: 0.3.7
2024-04-29 21:15:54,414:INFO:         yellowbrick: 1.5
2024-04-29 21:15:54,414:INFO:              plotly: 5.21.0
2024-04-29 21:15:54,414:INFO:    plotly-resampler: Not installed
2024-04-29 21:15:54,414:INFO:             kaleido: 0.2.1
2024-04-29 21:15:54,414:INFO:           schemdraw: 0.15
2024-04-29 21:15:54,414:INFO:         statsmodels: 0.14.2
2024-04-29 21:15:54,414:INFO:              sktime: 0.26.0
2024-04-29 21:15:54,414:INFO:               tbats: 1.1.3
2024-04-29 21:15:54,414:INFO:            pmdarima: 2.0.4
2024-04-29 21:15:54,414:INFO:              psutil: 5.9.8
2024-04-29 21:15:54,414:INFO:          markupsafe: 2.0.1
2024-04-29 21:15:54,414:INFO:             pickle5: Not installed
2024-04-29 21:15:54,414:INFO:         cloudpickle: 3.0.0
2024-04-29 21:15:54,414:INFO:         deprecation: 2.1.0
2024-04-29 21:15:54,414:INFO:              xxhash: 3.4.1
2024-04-29 21:15:54,414:INFO:           wurlitzer: 3.0.3
2024-04-29 21:15:54,414:INFO:PyCaret optional dependencies:
2024-04-29 21:15:54,515:INFO:                shap: Not installed
2024-04-29 21:15:54,515:INFO:           interpret: Not installed
2024-04-29 21:15:54,515:INFO:                umap: Not installed
2024-04-29 21:15:54,515:INFO:     ydata_profiling: Not installed
2024-04-29 21:15:54,515:INFO:  explainerdashboard: Not installed
2024-04-29 21:15:54,515:INFO:             autoviz: Not installed
2024-04-29 21:15:54,515:INFO:           fairlearn: Not installed
2024-04-29 21:15:54,515:INFO:          deepchecks: Not installed
2024-04-29 21:15:54,515:INFO:             xgboost: Not installed
2024-04-29 21:15:54,515:INFO:            catboost: Not installed
2024-04-29 21:15:54,516:INFO:              kmodes: Not installed
2024-04-29 21:15:54,516:INFO:             mlxtend: Not installed
2024-04-29 21:15:54,516:INFO:       statsforecast: Not installed
2024-04-29 21:15:54,516:INFO:        tune_sklearn: Not installed
2024-04-29 21:15:54,516:INFO:                 ray: Not installed
2024-04-29 21:15:54,516:INFO:            hyperopt: Not installed
2024-04-29 21:15:54,516:INFO:              optuna: Not installed
2024-04-29 21:15:54,516:INFO:               skopt: Not installed
2024-04-29 21:15:54,516:INFO:              mlflow: Not installed
2024-04-29 21:15:54,516:INFO:              gradio: Not installed
2024-04-29 21:15:54,516:INFO:             fastapi: 0.88.0
2024-04-29 21:15:54,516:INFO:             uvicorn: Not installed
2024-04-29 21:15:54,516:INFO:              m2cgen: Not installed
2024-04-29 21:15:54,516:INFO:           evidently: Not installed
2024-04-29 21:15:54,516:INFO:               fugue: Not installed
2024-04-29 21:15:54,516:INFO:           streamlit: Not installed
2024-04-29 21:15:54,516:INFO:             prophet: Not installed
2024-04-29 21:15:54,516:INFO:None
2024-04-29 21:15:54,516:INFO:Set up data.
2024-04-29 21:15:54,524:INFO:Set up folding strategy.
2024-04-29 21:15:54,524:INFO:Set up train/test split.
2024-04-29 21:15:54,527:INFO:Set up index.
2024-04-29 21:15:54,527:INFO:Assigning column types.
2024-04-29 21:15:54,530:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-29 21:15:54,562:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-29 21:15:54,564:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-29 21:15:54,586:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 21:15:54,587:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 21:15:54,618:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-29 21:15:54,619:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-29 21:15:54,638:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 21:15:54,638:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 21:15:54,638:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-29 21:15:54,670:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-29 21:15:54,690:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 21:15:54,690:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 21:15:54,722:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-29 21:15:54,742:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 21:15:54,742:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 21:15:54,743:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-29 21:15:54,794:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 21:15:54,794:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 21:15:54,844:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 21:15:54,845:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 21:15:54,846:INFO:Preparing preprocessing pipeline...
2024-04-29 21:15:54,846:INFO:Set up label encoding.
2024-04-29 21:15:54,846:INFO:Set up simple imputation.
2024-04-29 21:15:54,864:INFO:Finished creating preprocessing pipeline.
2024-04-29 21:15:54,867:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Jsc', 'Voc', 'FF', 'Efficiency',
                                             'Sr', 'Sp', 'Temp'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-04-29 21:15:54,867:INFO:Creating final display dataframe.
2024-04-29 21:15:54,918:INFO:Setup _display_container:                     Description                   Value
0                    Session id                     123
1                        Target                   Class
2                   Target type              Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2, 4: 3
4           Original data shape                (182, 8)
5        Transformed data shape                (182, 8)
6   Transformed train set shape                (127, 8)
7    Transformed test set shape                 (55, 8)
8              Numeric features                       7
9                    Preprocess                    True
10              Imputation type                  simple
11           Numeric imputation                    mean
12       Categorical imputation                    mode
13               Fold Generator         StratifiedKFold
14                  Fold Number                      10
15                     CPU Jobs                      -1
16                      Use GPU                   False
17               Log Experiment                   False
18              Experiment Name        clf-default-name
19                          USI                    22a5
2024-04-29 21:15:54,977:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 21:15:54,978:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 21:15:55,032:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 21:15:55,033:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 21:15:55,034:INFO:setup() successfully completed in 0.64s...............
2024-04-29 21:15:55,034:INFO:Initializing compare_models()
2024-04-29 21:15:55,034:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7938e3bd5a50>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7938e3bd5a50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-29 21:15:55,034:INFO:Checking exceptions
2024-04-29 21:15:55,037:INFO:Preparing display monitor
2024-04-29 21:15:55,040:INFO:Initializing Logistic Regression
2024-04-29 21:15:55,040:INFO:Total runtime is 1.5338261922200521e-06 minutes
2024-04-29 21:15:55,040:INFO:SubProcess create_model() called ==================================
2024-04-29 21:15:55,040:INFO:Initializing create_model()
2024-04-29 21:15:55,040:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7938e3bd5a50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7938c849b880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 21:15:55,040:INFO:Checking exceptions
2024-04-29 21:15:55,040:INFO:Importing libraries
2024-04-29 21:15:55,040:INFO:Copying training dataset
2024-04-29 21:15:55,043:INFO:Defining folds
2024-04-29 21:15:55,043:INFO:Declaring metric variables
2024-04-29 21:15:55,043:INFO:Importing untrained model
2024-04-29 21:15:55,044:INFO:Logistic Regression Imported successfully
2024-04-29 21:15:55,044:INFO:Starting cross validation
2024-04-29 21:15:55,045:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 21:15:57,523:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 21:15:57,541:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:15:57,544:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:57,548:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:57,551:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:15:57,553:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:57,576:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 21:15:57,591:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:15:57,594:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:57,599:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:57,601:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:15:57,603:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:57,660:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 21:15:57,675:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:15:57,678:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:57,682:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:57,687:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:57,697:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 21:15:57,699:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 21:15:57,701:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 21:15:57,710:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 21:15:57,713:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:15:57,715:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:15:57,716:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:57,717:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:15:57,718:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:57,720:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:57,720:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:57,722:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:15:57,723:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:57,724:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:57,725:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:57,726:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:15:57,727:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:57,729:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:57,730:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:57,734:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:57,739:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:57,767:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 21:15:57,781:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:15:57,784:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:57,788:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:57,792:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:57,879:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 21:15:57,886:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:15:57,887:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:57,889:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:57,891:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:57,891:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 21:15:57,898:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:15:57,899:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:57,901:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:57,903:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:57,913:INFO:Calculating mean and std
2024-04-29 21:15:57,914:INFO:Creating metrics dataframe
2024-04-29 21:15:57,918:INFO:Uploading results into container
2024-04-29 21:15:57,919:INFO:Uploading model into container now
2024-04-29 21:15:57,919:INFO:_master_model_container: 1
2024-04-29 21:15:57,919:INFO:_display_container: 2
2024-04-29 21:15:57,920:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-29 21:15:57,920:INFO:create_model() successfully completed......................................
2024-04-29 21:15:58,000:INFO:SubProcess create_model() end ==================================
2024-04-29 21:15:58,001:INFO:Creating metrics dataframe
2024-04-29 21:15:58,008:INFO:Initializing K Neighbors Classifier
2024-04-29 21:15:58,008:INFO:Total runtime is 0.04947356383005778 minutes
2024-04-29 21:15:58,008:INFO:SubProcess create_model() called ==================================
2024-04-29 21:15:58,009:INFO:Initializing create_model()
2024-04-29 21:15:58,009:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7938e3bd5a50>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7938c849b880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 21:15:58,009:INFO:Checking exceptions
2024-04-29 21:15:58,009:INFO:Importing libraries
2024-04-29 21:15:58,009:INFO:Copying training dataset
2024-04-29 21:15:58,014:INFO:Defining folds
2024-04-29 21:15:58,014:INFO:Declaring metric variables
2024-04-29 21:15:58,015:INFO:Importing untrained model
2024-04-29 21:15:58,015:INFO:K Neighbors Classifier Imported successfully
2024-04-29 21:15:58,015:INFO:Starting cross validation
2024-04-29 21:15:58,016:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 21:15:58,086:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:58,087:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:58,087:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:58,088:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:58,090:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:15:58,091:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:15:58,091:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:15:58,091:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:58,091:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:15:58,093:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:58,093:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,093:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,094:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,094:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,095:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:15:58,097:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:15:58,097:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,098:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,098:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:58,098:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,098:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,099:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:58,100:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,100:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:15:58,101:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,102:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,102:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:15:58,102:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 21:15:58,103:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,103:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,103:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,105:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,105:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,107:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,107:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,107:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,110:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,110:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,112:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,112:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:15:58,115:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,115:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,145:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:58,146:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 21:15:58,147:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:58,148:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 21:15:58,148:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,149:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,150:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,152:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,153:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,154:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,161:INFO:Calculating mean and std
2024-04-29 21:15:58,162:INFO:Creating metrics dataframe
2024-04-29 21:15:58,166:INFO:Uploading results into container
2024-04-29 21:15:58,167:INFO:Uploading model into container now
2024-04-29 21:15:58,167:INFO:_master_model_container: 2
2024-04-29 21:15:58,167:INFO:_display_container: 2
2024-04-29 21:15:58,168:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-04-29 21:15:58,168:INFO:create_model() successfully completed......................................
2024-04-29 21:15:58,233:INFO:SubProcess create_model() end ==================================
2024-04-29 21:15:58,234:INFO:Creating metrics dataframe
2024-04-29 21:15:58,242:INFO:Initializing Naive Bayes
2024-04-29 21:15:58,242:INFO:Total runtime is 0.05337283213933309 minutes
2024-04-29 21:15:58,242:INFO:SubProcess create_model() called ==================================
2024-04-29 21:15:58,243:INFO:Initializing create_model()
2024-04-29 21:15:58,243:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7938e3bd5a50>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7938c849b880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 21:15:58,243:INFO:Checking exceptions
2024-04-29 21:15:58,243:INFO:Importing libraries
2024-04-29 21:15:58,243:INFO:Copying training dataset
2024-04-29 21:15:58,247:INFO:Defining folds
2024-04-29 21:15:58,247:INFO:Declaring metric variables
2024-04-29 21:15:58,248:INFO:Importing untrained model
2024-04-29 21:15:58,248:INFO:Naive Bayes Imported successfully
2024-04-29 21:15:58,249:INFO:Starting cross validation
2024-04-29 21:15:58,249:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 21:15:58,293:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:58,293:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:15:58,295:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:58,296:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:15:58,296:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,299:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,300:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:58,300:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:15:58,301:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,303:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:58,303:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,303:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:15:58,303:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:15:58,304:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:58,304:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,305:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:15:58,306:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,306:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,306:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:58,307:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:15:58,307:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:58,308:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,308:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:15:58,308:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,309:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,310:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,311:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,311:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,312:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,313:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,313:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:15:58,314:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:58,314:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 21:15:58,314:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:15:58,315:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,316:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,316:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,317:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:15:58,317:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,317:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,318:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:15:58,320:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,321:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,321:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,323:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:15:58,326:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,337:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:58,338:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 21:15:58,338:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:58,339:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 21:15:58,339:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,340:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,342:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,342:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,343:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:15:58,344:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,345:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,351:INFO:Calculating mean and std
2024-04-29 21:15:58,352:INFO:Creating metrics dataframe
2024-04-29 21:15:58,355:INFO:Uploading results into container
2024-04-29 21:15:58,356:INFO:Uploading model into container now
2024-04-29 21:15:58,356:INFO:_master_model_container: 3
2024-04-29 21:15:58,356:INFO:_display_container: 2
2024-04-29 21:15:58,356:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-04-29 21:15:58,356:INFO:create_model() successfully completed......................................
2024-04-29 21:15:58,426:INFO:SubProcess create_model() end ==================================
2024-04-29 21:15:58,426:INFO:Creating metrics dataframe
2024-04-29 21:15:58,435:INFO:Initializing Decision Tree Classifier
2024-04-29 21:15:58,435:INFO:Total runtime is 0.056588979562123616 minutes
2024-04-29 21:15:58,435:INFO:SubProcess create_model() called ==================================
2024-04-29 21:15:58,436:INFO:Initializing create_model()
2024-04-29 21:15:58,436:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7938e3bd5a50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7938c849b880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 21:15:58,436:INFO:Checking exceptions
2024-04-29 21:15:58,436:INFO:Importing libraries
2024-04-29 21:15:58,436:INFO:Copying training dataset
2024-04-29 21:15:58,441:INFO:Defining folds
2024-04-29 21:15:58,441:INFO:Declaring metric variables
2024-04-29 21:15:58,441:INFO:Importing untrained model
2024-04-29 21:15:58,442:INFO:Decision Tree Classifier Imported successfully
2024-04-29 21:15:58,442:INFO:Starting cross validation
2024-04-29 21:15:58,443:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 21:15:58,486:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:58,487:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:15:58,489:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:58,489:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,490:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:58,490:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:15:58,490:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:15:58,491:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:58,492:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:15:58,493:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:58,493:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:58,493:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,493:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:15:58,494:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:15:58,494:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,495:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,495:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,496:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:58,496:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,496:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:15:58,497:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,498:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,499:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,499:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:58,499:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,500:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 21:15:58,500:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,501:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,502:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,502:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,502:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,503:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,504:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,505:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,506:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,507:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,507:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,508:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,510:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,511:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,526:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:58,527:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 21:15:58,528:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:58,528:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,529:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 21:15:58,530:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,531:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,532:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,533:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,535:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,549:INFO:Calculating mean and std
2024-04-29 21:15:58,549:INFO:Creating metrics dataframe
2024-04-29 21:15:58,553:INFO:Uploading results into container
2024-04-29 21:15:58,553:INFO:Uploading model into container now
2024-04-29 21:15:58,554:INFO:_master_model_container: 4
2024-04-29 21:15:58,554:INFO:_display_container: 2
2024-04-29 21:15:58,554:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-04-29 21:15:58,554:INFO:create_model() successfully completed......................................
2024-04-29 21:15:58,623:INFO:SubProcess create_model() end ==================================
2024-04-29 21:15:58,623:INFO:Creating metrics dataframe
2024-04-29 21:15:58,631:INFO:Initializing SVM - Linear Kernel
2024-04-29 21:15:58,631:INFO:Total runtime is 0.05986166000366211 minutes
2024-04-29 21:15:58,632:INFO:SubProcess create_model() called ==================================
2024-04-29 21:15:58,632:INFO:Initializing create_model()
2024-04-29 21:15:58,632:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7938e3bd5a50>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7938c849b880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 21:15:58,632:INFO:Checking exceptions
2024-04-29 21:15:58,632:INFO:Importing libraries
2024-04-29 21:15:58,632:INFO:Copying training dataset
2024-04-29 21:15:58,638:INFO:Defining folds
2024-04-29 21:15:58,638:INFO:Declaring metric variables
2024-04-29 21:15:58,638:INFO:Importing untrained model
2024-04-29 21:15:58,639:INFO:SVM - Linear Kernel Imported successfully
2024-04-29 21:15:58,639:INFO:Starting cross validation
2024-04-29 21:15:58,640:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 21:15:58,708:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:15:58,711:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:15:58,711:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,712:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:15:58,713:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,714:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:15:58,716:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,716:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:15:58,717:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,717:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:15:58,718:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,718:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,719:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,720:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,720:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:15:58,721:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,721:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:15:58,722:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,723:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,724:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,724:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:15:58,725:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:15:58,725:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,726:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,726:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:15:58,727:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,728:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:15:58,729:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,729:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,731:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,737:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:15:58,739:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,743:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,743:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:15:58,744:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:15:58,745:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,746:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,747:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,750:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,772:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:15:58,773:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,774:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:15:58,775:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,776:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,778:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,778:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,779:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:15:58,780:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,789:INFO:Calculating mean and std
2024-04-29 21:15:58,790:INFO:Creating metrics dataframe
2024-04-29 21:15:58,793:INFO:Uploading results into container
2024-04-29 21:15:58,794:INFO:Uploading model into container now
2024-04-29 21:15:58,794:INFO:_master_model_container: 5
2024-04-29 21:15:58,794:INFO:_display_container: 2
2024-04-29 21:15:58,794:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-04-29 21:15:58,794:INFO:create_model() successfully completed......................................
2024-04-29 21:15:58,864:INFO:SubProcess create_model() end ==================================
2024-04-29 21:15:58,864:INFO:Creating metrics dataframe
2024-04-29 21:15:58,873:INFO:Initializing Ridge Classifier
2024-04-29 21:15:58,873:INFO:Total runtime is 0.06388686100641887 minutes
2024-04-29 21:15:58,873:INFO:SubProcess create_model() called ==================================
2024-04-29 21:15:58,873:INFO:Initializing create_model()
2024-04-29 21:15:58,874:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7938e3bd5a50>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7938c849b880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 21:15:58,874:INFO:Checking exceptions
2024-04-29 21:15:58,874:INFO:Importing libraries
2024-04-29 21:15:58,874:INFO:Copying training dataset
2024-04-29 21:15:58,879:INFO:Defining folds
2024-04-29 21:15:58,879:INFO:Declaring metric variables
2024-04-29 21:15:58,879:INFO:Importing untrained model
2024-04-29 21:15:58,880:INFO:Ridge Classifier Imported successfully
2024-04-29 21:15:58,880:INFO:Starting cross validation
2024-04-29 21:15:58,881:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 21:15:58,932:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:15:58,933:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:15:58,935:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:15:58,936:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,936:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,937:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:15:58,937:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:15:58,938:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,940:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,940:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,940:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,941:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:15:58,942:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,943:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,944:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,945:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:15:58,946:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,946:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:15:58,946:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,948:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,948:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:15:58,949:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,949:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,950:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,951:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,953:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,954:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,956:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:15:58,958:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,962:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:15:58,963:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,965:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,965:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:15:58,968:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,969:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,973:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,979:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:15:58,980:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,981:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:15:58,983:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,983:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,984:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:15:58,985:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,985:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:58,986:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:15:58,987:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,001:INFO:Calculating mean and std
2024-04-29 21:15:59,001:INFO:Creating metrics dataframe
2024-04-29 21:15:59,005:INFO:Uploading results into container
2024-04-29 21:15:59,005:INFO:Uploading model into container now
2024-04-29 21:15:59,006:INFO:_master_model_container: 6
2024-04-29 21:15:59,006:INFO:_display_container: 2
2024-04-29 21:15:59,006:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-04-29 21:15:59,006:INFO:create_model() successfully completed......................................
2024-04-29 21:15:59,068:INFO:SubProcess create_model() end ==================================
2024-04-29 21:15:59,068:INFO:Creating metrics dataframe
2024-04-29 21:15:59,075:INFO:Initializing Random Forest Classifier
2024-04-29 21:15:59,076:INFO:Total runtime is 0.0672648827234904 minutes
2024-04-29 21:15:59,076:INFO:SubProcess create_model() called ==================================
2024-04-29 21:15:59,076:INFO:Initializing create_model()
2024-04-29 21:15:59,076:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7938e3bd5a50>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7938c849b880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 21:15:59,076:INFO:Checking exceptions
2024-04-29 21:15:59,076:INFO:Importing libraries
2024-04-29 21:15:59,076:INFO:Copying training dataset
2024-04-29 21:15:59,081:INFO:Defining folds
2024-04-29 21:15:59,081:INFO:Declaring metric variables
2024-04-29 21:15:59,081:INFO:Importing untrained model
2024-04-29 21:15:59,081:INFO:Random Forest Classifier Imported successfully
2024-04-29 21:15:59,082:INFO:Starting cross validation
2024-04-29 21:15:59,083:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 21:15:59,369:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:59,370:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:15:59,372:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,377:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,377:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:59,378:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:15:59,380:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:59,380:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,380:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:15:59,381:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,381:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:59,382:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:15:59,383:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,384:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:59,384:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,384:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,385:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:15:59,387:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,388:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,389:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,389:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:15:59,389:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,390:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:59,391:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:15:59,391:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,392:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,393:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,393:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,396:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,397:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,398:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:59,399:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:59,399:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 21:15:59,400:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:15:59,401:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,401:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,402:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,406:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,406:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,409:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,410:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,585:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:59,586:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 21:15:59,587:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,589:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:15:59,590:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,590:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 21:15:59,591:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,592:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,593:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,596:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,606:INFO:Calculating mean and std
2024-04-29 21:15:59,606:INFO:Creating metrics dataframe
2024-04-29 21:15:59,609:INFO:Uploading results into container
2024-04-29 21:15:59,610:INFO:Uploading model into container now
2024-04-29 21:15:59,610:INFO:_master_model_container: 7
2024-04-29 21:15:59,610:INFO:_display_container: 2
2024-04-29 21:15:59,610:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-04-29 21:15:59,610:INFO:create_model() successfully completed......................................
2024-04-29 21:15:59,677:INFO:SubProcess create_model() end ==================================
2024-04-29 21:15:59,677:INFO:Creating metrics dataframe
2024-04-29 21:15:59,686:INFO:Initializing Quadratic Discriminant Analysis
2024-04-29 21:15:59,686:INFO:Total runtime is 0.07743686834971111 minutes
2024-04-29 21:15:59,686:INFO:SubProcess create_model() called ==================================
2024-04-29 21:15:59,686:INFO:Initializing create_model()
2024-04-29 21:15:59,687:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7938e3bd5a50>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7938c849b880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 21:15:59,687:INFO:Checking exceptions
2024-04-29 21:15:59,687:INFO:Importing libraries
2024-04-29 21:15:59,687:INFO:Copying training dataset
2024-04-29 21:15:59,691:INFO:Defining folds
2024-04-29 21:15:59,691:INFO:Declaring metric variables
2024-04-29 21:15:59,692:INFO:Importing untrained model
2024-04-29 21:15:59,692:INFO:Quadratic Discriminant Analysis Imported successfully
2024-04-29 21:15:59,692:INFO:Starting cross validation
2024-04-29 21:15:59,693:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 21:15:59,727:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-29 21:15:59,727:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-29 21:15:59,728:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-29 21:15:59,731:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-29 21:15:59,733:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-29 21:15:59,734:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-29 21:15:59,739:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,739:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,739:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 21:15:59,739:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,739:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,740:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-29 21:15:59,740:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 21:15:59,741:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,741:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,741:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 21:15:59,744:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,744:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,744:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 21:15:59,745:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,745:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,745:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,746:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 21:15:59,746:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,746:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 21:15:59,746:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,747:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,747:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,747:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,747:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 21:15:59,747:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-04-29 21:15:59,748:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 21:15:59,749:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-04-29 21:15:59,750:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,751:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-29 21:15:59,751:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-04-29 21:15:59,751:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,751:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,751:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,752:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 21:15:59,753:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,753:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,753:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,753:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,753:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 21:15:59,754:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 21:15:59,754:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,755:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,756:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-04-29 21:15:59,756:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,756:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,757:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,757:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-04-29 21:15:59,757:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 21:15:59,757:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:15:59,758:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,759:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,759:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:15:59,759:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,759:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,759:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 21:15:59,760:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,760:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-04-29 21:15:59,760:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,761:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:15:59,761:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,762:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,764:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,764:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,764:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,764:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,764:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 21:15:59,764:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,765:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,765:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 21:15:59,765:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,766:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:15:59,767:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-04-29 21:15:59,767:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,768:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:15:59,769:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,769:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,769:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:15:59,770:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,771:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,771:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,771:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 21:15:59,772:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,774:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,774:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-04-29 21:15:59,776:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:15:59,777:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,779:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,780:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-29 21:15:59,781:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,782:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:15:59,784:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,785:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-29 21:15:59,786:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,787:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,787:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 21:15:59,789:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,789:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,789:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 21:15:59,791:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-04-29 21:15:59,791:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,791:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,791:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 21:15:59,792:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,794:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,794:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-29 21:15:59,794:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-29 21:15:59,795:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,795:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-04-29 21:15:59,796:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:15:59,796:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,797:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,799:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,800:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:15:59,801:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:15:59,815:INFO:Calculating mean and std
2024-04-29 21:15:59,816:INFO:Creating metrics dataframe
2024-04-29 21:15:59,820:INFO:Uploading results into container
2024-04-29 21:15:59,820:INFO:Uploading model into container now
2024-04-29 21:15:59,820:INFO:_master_model_container: 8
2024-04-29 21:15:59,820:INFO:_display_container: 2
2024-04-29 21:15:59,821:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-04-29 21:15:59,821:INFO:create_model() successfully completed......................................
2024-04-29 21:15:59,890:INFO:SubProcess create_model() end ==================================
2024-04-29 21:15:59,890:INFO:Creating metrics dataframe
2024-04-29 21:15:59,898:INFO:Initializing Ada Boost Classifier
2024-04-29 21:15:59,899:INFO:Total runtime is 0.0809811552365621 minutes
2024-04-29 21:15:59,899:INFO:SubProcess create_model() called ==================================
2024-04-29 21:15:59,899:INFO:Initializing create_model()
2024-04-29 21:15:59,899:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7938e3bd5a50>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7938c849b880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 21:15:59,899:INFO:Checking exceptions
2024-04-29 21:15:59,899:INFO:Importing libraries
2024-04-29 21:15:59,899:INFO:Copying training dataset
2024-04-29 21:15:59,904:INFO:Defining folds
2024-04-29 21:15:59,904:INFO:Declaring metric variables
2024-04-29 21:15:59,904:INFO:Importing untrained model
2024-04-29 21:15:59,905:INFO:Ada Boost Classifier Imported successfully
2024-04-29 21:15:59,905:INFO:Starting cross validation
2024-04-29 21:15:59,906:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 21:15:59,935:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-29 21:15:59,938:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-29 21:15:59,940:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-29 21:15:59,940:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-29 21:15:59,941:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-29 21:15:59,945:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-29 21:15:59,948:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-29 21:15:59,952:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-29 21:16:00,105:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:16:00,107:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:00,110:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:16:00,111:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:00,112:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:00,115:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:16:00,115:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:00,116:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:00,116:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:16:00,117:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:16:00,117:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:00,118:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:16:00,119:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:16:00,119:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:00,120:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:00,120:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:16:00,120:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:00,121:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:00,122:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:00,122:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:00,123:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:16:00,124:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:00,124:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:00,125:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:00,126:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:00,126:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:16:00,126:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:00,127:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:00,127:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:16:00,129:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:00,129:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:16:00,129:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:00,130:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:00,130:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:00,132:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:00,134:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:00,138:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-29 21:16:00,140:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-29 21:16:00,218:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:16:00,219:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:16:00,220:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:00,221:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:00,222:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:00,222:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:00,223:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:16:00,223:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:16:00,224:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:00,225:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:00,235:INFO:Calculating mean and std
2024-04-29 21:16:00,236:INFO:Creating metrics dataframe
2024-04-29 21:16:00,239:INFO:Uploading results into container
2024-04-29 21:16:00,239:INFO:Uploading model into container now
2024-04-29 21:16:00,239:INFO:_master_model_container: 9
2024-04-29 21:16:00,239:INFO:_display_container: 2
2024-04-29 21:16:00,240:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-04-29 21:16:00,240:INFO:create_model() successfully completed......................................
2024-04-29 21:16:00,308:INFO:SubProcess create_model() end ==================================
2024-04-29 21:16:00,308:INFO:Creating metrics dataframe
2024-04-29 21:16:00,317:INFO:Initializing Gradient Boosting Classifier
2024-04-29 21:16:00,317:INFO:Total runtime is 0.08796085119247438 minutes
2024-04-29 21:16:00,318:INFO:SubProcess create_model() called ==================================
2024-04-29 21:16:00,318:INFO:Initializing create_model()
2024-04-29 21:16:00,318:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7938e3bd5a50>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7938c849b880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 21:16:00,318:INFO:Checking exceptions
2024-04-29 21:16:00,318:INFO:Importing libraries
2024-04-29 21:16:00,318:INFO:Copying training dataset
2024-04-29 21:16:00,323:INFO:Defining folds
2024-04-29 21:16:00,323:INFO:Declaring metric variables
2024-04-29 21:16:00,323:INFO:Importing untrained model
2024-04-29 21:16:00,324:INFO:Gradient Boosting Classifier Imported successfully
2024-04-29 21:16:00,324:INFO:Starting cross validation
2024-04-29 21:16:00,325:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 21:16:01,042:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:16:01,045:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,051:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,055:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,056:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:16:01,059:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,063:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,065:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:16:01,065:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:16:01,067:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,068:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,072:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:16:01,072:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,072:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:16:01,074:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,075:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,076:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,079:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,080:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:16:01,080:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,082:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,083:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,084:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,087:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,089:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:16:01,091:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,091:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,094:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,096:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,100:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:16:01,103:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,107:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,111:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,431:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:16:01,432:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,433:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:16:01,434:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,434:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,435:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,436:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,437:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,445:INFO:Calculating mean and std
2024-04-29 21:16:01,446:INFO:Creating metrics dataframe
2024-04-29 21:16:01,449:INFO:Uploading results into container
2024-04-29 21:16:01,449:INFO:Uploading model into container now
2024-04-29 21:16:01,449:INFO:_master_model_container: 10
2024-04-29 21:16:01,449:INFO:_display_container: 2
2024-04-29 21:16:01,450:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-04-29 21:16:01,450:INFO:create_model() successfully completed......................................
2024-04-29 21:16:01,517:INFO:SubProcess create_model() end ==================================
2024-04-29 21:16:01,518:INFO:Creating metrics dataframe
2024-04-29 21:16:01,526:INFO:Initializing Linear Discriminant Analysis
2024-04-29 21:16:01,526:INFO:Total runtime is 0.1081137498219808 minutes
2024-04-29 21:16:01,527:INFO:SubProcess create_model() called ==================================
2024-04-29 21:16:01,527:INFO:Initializing create_model()
2024-04-29 21:16:01,527:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7938e3bd5a50>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7938c849b880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 21:16:01,528:INFO:Checking exceptions
2024-04-29 21:16:01,528:INFO:Importing libraries
2024-04-29 21:16:01,528:INFO:Copying training dataset
2024-04-29 21:16:01,534:INFO:Defining folds
2024-04-29 21:16:01,534:INFO:Declaring metric variables
2024-04-29 21:16:01,534:INFO:Importing untrained model
2024-04-29 21:16:01,534:INFO:Linear Discriminant Analysis Imported successfully
2024-04-29 21:16:01,535:INFO:Starting cross validation
2024-04-29 21:16:01,536:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 21:16:01,584:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:16:01,586:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:16:01,587:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:16:01,587:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,589:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,589:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,590:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:16:01,591:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:16:01,591:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:16:01,592:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,592:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:16:01,593:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,593:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,594:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,594:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:16:01,594:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,595:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,595:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,597:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,598:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,598:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,599:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,599:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,600:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,601:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,603:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:16:01,603:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,603:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,604:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,605:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,605:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,610:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,611:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:16:01,613:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,632:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:16:01,634:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-29 21:16:01,634:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,636:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,638:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,640:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,642:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,643:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,650:INFO:Calculating mean and std
2024-04-29 21:16:01,651:INFO:Creating metrics dataframe
2024-04-29 21:16:01,654:INFO:Uploading results into container
2024-04-29 21:16:01,655:INFO:Uploading model into container now
2024-04-29 21:16:01,655:INFO:_master_model_container: 11
2024-04-29 21:16:01,655:INFO:_display_container: 2
2024-04-29 21:16:01,655:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-04-29 21:16:01,655:INFO:create_model() successfully completed......................................
2024-04-29 21:16:01,727:INFO:SubProcess create_model() end ==================================
2024-04-29 21:16:01,727:INFO:Creating metrics dataframe
2024-04-29 21:16:01,736:INFO:Initializing Extra Trees Classifier
2024-04-29 21:16:01,736:INFO:Total runtime is 0.11160318056742351 minutes
2024-04-29 21:16:01,736:INFO:SubProcess create_model() called ==================================
2024-04-29 21:16:01,737:INFO:Initializing create_model()
2024-04-29 21:16:01,737:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7938e3bd5a50>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7938c849b880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 21:16:01,737:INFO:Checking exceptions
2024-04-29 21:16:01,737:INFO:Importing libraries
2024-04-29 21:16:01,737:INFO:Copying training dataset
2024-04-29 21:16:01,742:INFO:Defining folds
2024-04-29 21:16:01,742:INFO:Declaring metric variables
2024-04-29 21:16:01,742:INFO:Importing untrained model
2024-04-29 21:16:01,743:INFO:Extra Trees Classifier Imported successfully
2024-04-29 21:16:01,743:INFO:Starting cross validation
2024-04-29 21:16:01,744:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 21:16:01,978:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:16:01,978:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:16:01,980:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:16:01,981:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,981:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:16:01,981:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:16:01,982:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:16:01,983:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:16:01,984:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:16:01,984:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,984:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,986:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,986:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,988:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:16:01,988:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,989:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,989:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:16:01,989:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:16:01,990:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:16:01,990:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,991:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,991:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,992:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,993:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,994:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,995:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,995:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,996:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:16:01,996:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:01,996:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:16:01,999:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:02,000:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:02,001:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:02,002:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:16:02,003:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 21:16:02,003:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:02,005:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:02,007:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:02,009:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:02,013:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:02,154:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:16:02,155:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 21:16:02,156:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:02,158:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:02,161:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:02,169:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:16:02,169:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 21:16:02,171:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:02,173:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:02,175:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:16:02,182:INFO:Calculating mean and std
2024-04-29 21:16:02,183:INFO:Creating metrics dataframe
2024-04-29 21:16:02,187:INFO:Uploading results into container
2024-04-29 21:16:02,187:INFO:Uploading model into container now
2024-04-29 21:16:02,187:INFO:_master_model_container: 12
2024-04-29 21:16:02,187:INFO:_display_container: 2
2024-04-29 21:16:02,188:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-04-29 21:16:02,188:INFO:create_model() successfully completed......................................
2024-04-29 21:16:02,259:INFO:SubProcess create_model() end ==================================
2024-04-29 21:16:02,260:INFO:Creating metrics dataframe
2024-04-29 21:16:02,268:INFO:Initializing Light Gradient Boosting Machine
2024-04-29 21:16:02,269:INFO:Total runtime is 0.12048239707946778 minutes
2024-04-29 21:16:02,269:INFO:SubProcess create_model() called ==================================
2024-04-29 21:16:02,269:INFO:Initializing create_model()
2024-04-29 21:16:02,269:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7938e3bd5a50>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7938c849b880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 21:16:02,269:INFO:Checking exceptions
2024-04-29 21:16:02,269:INFO:Importing libraries
2024-04-29 21:16:02,269:INFO:Copying training dataset
2024-04-29 21:16:02,275:INFO:Defining folds
2024-04-29 21:16:02,275:INFO:Declaring metric variables
2024-04-29 21:16:02,275:INFO:Importing untrained model
2024-04-29 21:16:02,276:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-29 21:16:02,276:INFO:Starting cross validation
2024-04-29 21:16:02,277:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 21:23:09,221:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:23:09,225:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:23:09,226:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:23:09,229:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:23:09,250:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:23:39,558:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:23:39,558:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:23:39,560:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:23:39,563:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:23:39,578:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:23:42,253:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:23:42,267:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:23:42,268:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:23:42,271:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:23:42,314:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:23:44,353:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:23:44,354:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:23:44,356:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:23:44,359:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:23:44,374:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:23:45,881:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:23:45,904:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:23:45,906:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:23:45,908:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:23:45,911:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:23:50,213:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:23:50,223:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:23:50,225:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:23:50,234:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:23:50,248:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:24:15,233:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:24:15,240:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:24:15,249:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:24:15,252:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:24:15,255:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:24:16,834:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:24:16,835:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 21:24:16,836:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:24:16,839:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:24:16,856:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:25:22,210:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:25:22,211:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 21:25:22,214:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:25:22,217:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:25:22,220:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:25:22,374:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:25:22,374:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 21:25:22,376:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:25:22,379:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:25:22,382:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:25:22,400:INFO:Calculating mean and std
2024-04-29 21:25:22,401:INFO:Creating metrics dataframe
2024-04-29 21:25:22,408:INFO:Uploading results into container
2024-04-29 21:25:22,409:INFO:Uploading model into container now
2024-04-29 21:25:22,410:INFO:_master_model_container: 13
2024-04-29 21:25:22,410:INFO:_display_container: 2
2024-04-29 21:25:22,411:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-04-29 21:25:22,411:INFO:create_model() successfully completed......................................
2024-04-29 21:25:22,504:INFO:SubProcess create_model() end ==================================
2024-04-29 21:25:22,505:INFO:Creating metrics dataframe
2024-04-29 21:25:22,515:INFO:Initializing Dummy Classifier
2024-04-29 21:25:22,515:INFO:Total runtime is 9.457924163341522 minutes
2024-04-29 21:25:22,515:INFO:SubProcess create_model() called ==================================
2024-04-29 21:25:22,516:INFO:Initializing create_model()
2024-04-29 21:25:22,516:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7938e3bd5a50>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7938c849b880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 21:25:22,516:INFO:Checking exceptions
2024-04-29 21:25:22,516:INFO:Importing libraries
2024-04-29 21:25:22,516:INFO:Copying training dataset
2024-04-29 21:25:22,523:INFO:Defining folds
2024-04-29 21:25:22,523:INFO:Declaring metric variables
2024-04-29 21:25:22,524:INFO:Importing untrained model
2024-04-29 21:25:22,524:INFO:Dummy Classifier Imported successfully
2024-04-29 21:25:22,525:INFO:Starting cross validation
2024-04-29 21:25:22,527:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 21:25:22,573:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:25:22,574:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:25:22,577:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:25:22,581:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:25:22,581:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:25:22,582:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:25:22,582:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:25:22,583:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:25:22,583:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:25:22,583:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:25:22,584:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:25:22,585:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:25:22,586:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:25:22,586:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:25:22,587:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:25:22,587:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:25:22,587:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:25:22,588:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:25:22,588:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:25:22,590:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:25:22,590:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:25:22,591:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:25:22,592:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:25:22,592:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:25:22,593:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:25:22,594:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:25:22,595:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:25:22,595:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:25:22,596:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:25:22,596:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:25:22,598:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:25:22,598:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:25:22,598:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:25:22,599:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:25:22,602:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:25:22,603:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:25:22,605:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:25:22,606:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-29 21:25:22,609:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:25:22,614:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:25:22,615:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:25:22,616:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:25:22,617:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 21:25:22,618:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:25:22,619:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:25:22,624:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:25:22,624:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 21:25:22,625:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:25:22,627:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:25:22,628:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:25:22,631:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:25:22,633:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:25:22,635:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:25:22,636:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-29 21:25:22,637:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-29 21:25:22,638:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:25:22,638:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:25:22,641:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:25:22,643:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 21:25:22,644:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:25:22,650:INFO:Calculating mean and std
2024-04-29 21:25:22,651:INFO:Creating metrics dataframe
2024-04-29 21:25:22,655:INFO:Uploading results into container
2024-04-29 21:25:22,656:INFO:Uploading model into container now
2024-04-29 21:25:22,656:INFO:_master_model_container: 14
2024-04-29 21:25:22,656:INFO:_display_container: 2
2024-04-29 21:25:22,656:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-04-29 21:25:22,656:INFO:create_model() successfully completed......................................
2024-04-29 21:25:22,731:INFO:SubProcess create_model() end ==================================
2024-04-29 21:25:22,731:INFO:Creating metrics dataframe
2024-04-29 21:25:22,744:INFO:Initializing create_model()
2024-04-29 21:25:22,744:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7938e3bd5a50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 21:25:22,744:INFO:Checking exceptions
2024-04-29 21:25:22,745:INFO:Importing libraries
2024-04-29 21:25:22,745:INFO:Copying training dataset
2024-04-29 21:25:22,749:INFO:Defining folds
2024-04-29 21:25:22,750:INFO:Declaring metric variables
2024-04-29 21:25:22,750:INFO:Importing untrained model
2024-04-29 21:25:22,750:INFO:Declaring custom model
2024-04-29 21:25:22,751:INFO:Extra Trees Classifier Imported successfully
2024-04-29 21:25:22,752:INFO:Cross validation set to False
2024-04-29 21:25:22,752:INFO:Fitting Model
2024-04-29 21:25:22,869:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-04-29 21:25:22,869:INFO:create_model() successfully completed......................................
2024-04-29 21:25:22,962:INFO:_master_model_container: 14
2024-04-29 21:25:22,962:INFO:_display_container: 2
2024-04-29 21:25:22,963:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-04-29 21:25:22,963:INFO:compare_models() successfully completed......................................
2024-04-29 21:25:22,964:INFO:Initializing evaluate_model()
2024-04-29 21:25:22,964:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7938e3bd5a50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-04-29 21:25:22,975:INFO:Initializing plot_model()
2024-04-29 21:25:22,975:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7938e3bd5a50>, system=True)
2024-04-29 21:25:22,975:INFO:Checking exceptions
2024-04-29 21:25:23,005:INFO:Preloading libraries
2024-04-29 21:25:23,023:INFO:Copying training dataset
2024-04-29 21:25:23,023:INFO:Plot type: pipeline
2024-04-29 21:25:26,109:INFO:Visual Rendered Successfully
2024-04-29 21:25:26,209:INFO:plot_model() successfully completed......................................
2024-04-29 21:25:26,211:INFO:Initializing plot_model()
2024-04-29 21:25:26,211:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7938e3bd5a50>, system=True)
2024-04-29 21:25:26,211:INFO:Checking exceptions
2024-04-29 21:25:26,243:INFO:Preloading libraries
2024-04-29 21:25:26,263:INFO:Copying training dataset
2024-04-29 21:25:26,263:INFO:Plot type: auc
2024-04-29 21:25:26,344:INFO:Fitting Model
2024-04-29 21:25:26,345:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2024-04-29 21:25:26,345:INFO:Scoring test/hold-out set
2024-04-29 21:25:55,136:INFO:Visual Rendered Successfully
2024-04-29 21:25:55,215:INFO:plot_model() successfully completed......................................
2024-04-29 21:25:55,216:INFO:Initializing plot_model()
2024-04-29 21:25:55,216:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7938e3bd5a50>, system=True)
2024-04-29 21:25:55,217:INFO:Checking exceptions
2024-04-29 21:25:55,247:INFO:Preloading libraries
2024-04-29 21:25:55,260:INFO:Copying training dataset
2024-04-29 21:25:55,260:INFO:Plot type: confusion_matrix
2024-04-29 21:25:55,328:INFO:Fitting Model
2024-04-29 21:25:55,328:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2024-04-29 21:25:55,329:INFO:Scoring test/hold-out set
2024-04-29 21:26:09,164:INFO:Visual Rendered Successfully
2024-04-29 21:26:09,244:INFO:plot_model() successfully completed......................................
2024-04-29 21:26:09,245:INFO:Initializing plot_model()
2024-04-29 21:26:09,246:INFO:plot_model(plot=class_report, fold=None, verbose=True, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7938e3bd5a50>, system=True)
2024-04-29 21:26:09,246:INFO:Checking exceptions
2024-04-29 21:26:09,282:INFO:Preloading libraries
2024-04-29 21:26:09,310:INFO:Copying training dataset
2024-04-29 21:26:09,310:INFO:Plot type: class_report
2024-04-29 21:26:09,378:INFO:Fitting Model
2024-04-29 21:26:09,378:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2024-04-29 21:26:09,378:INFO:Scoring test/hold-out set
2024-04-29 21:26:13,719:INFO:Visual Rendered Successfully
2024-04-29 21:26:13,798:INFO:plot_model() successfully completed......................................
2024-04-29 21:26:13,799:INFO:Initializing predict_model()
2024-04-29 21:26:13,799:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7938e3bd5a50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7938c81c67a0>)
2024-04-29 21:26:13,799:INFO:Checking exceptions
2024-04-29 21:26:13,799:INFO:Preloading libraries
2024-04-29 21:26:13,906:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:26:13,908:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:26:13,910:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:26:13,996:INFO:Initializing predict_model()
2024-04-29 21:26:13,996:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7938e3bd5a50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7938c81c67a0>)
2024-04-29 21:26:13,996:INFO:Checking exceptions
2024-04-29 21:26:13,997:INFO:Preloading libraries
2024-04-29 21:26:13,997:INFO:Set up data.
2024-04-29 21:26:14,006:INFO:Set up index.
2024-04-29 21:26:14,094:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:26:14,096:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:26:14,098:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:26:14,182:INFO:Initializing predict_model()
2024-04-29 21:26:14,182:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7938e3bd5a50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7938c81c67a0>)
2024-04-29 21:26:14,182:INFO:Checking exceptions
2024-04-29 21:26:14,182:INFO:Preloading libraries
2024-04-29 21:26:14,182:INFO:Set up data.
2024-04-29 21:26:14,190:INFO:Set up index.
2024-04-29 21:26:14,266:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:26:14,268:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:26:14,270:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-29 21:26:14,384:INFO:Initializing save_model()
2024-04-29 21:26:14,384:INFO:save_model(model=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), model_name=my_best_pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Jsc', 'Voc', 'FF', 'Efficiency',
                                             'Sr', 'Sp', 'Temp'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-29 21:26:14,384:INFO:Adding model into prep_pipe
2024-04-29 21:26:14,447:INFO:my_best_pipeline.pkl saved in current working directory
2024-04-29 21:26:14,452:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Jsc', 'Voc', 'FF', 'Efficiency',
                                             'Sr', 'Sp', 'Temp'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2024-04-29 21:26:14,452:INFO:save_model() successfully completed......................................
2024-04-29 21:26:14,521:INFO:Initializing load_model()
2024-04-29 21:26:14,522:INFO:load_model(model_name=my_best_pipeline, platform=None, authentication=None, verbose=True)
2024-04-30 12:33:06,954:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-30 12:33:06,955:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-30 12:33:06,955:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-30 12:33:06,955:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-30 12:33:07,259:INFO:PyCaret ClassificationExperiment
2024-04-30 12:33:07,259:INFO:Logging name: clf-default-name
2024-04-30 12:33:07,259:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-30 12:33:07,259:INFO:version 3.3.1
2024-04-30 12:33:07,259:INFO:Initializing setup()
2024-04-30 12:33:07,259:INFO:self.USI: 4b3d
2024-04-30 12:33:07,259:INFO:self._variable_keys: {'memory', 'log_plots_param', 'logging_param', 'target_param', 'data', 'exp_name_log', 'gpu_n_jobs_param', 'X_train', '_available_plots', 'exp_id', 'X', 'y', 'is_multiclass', 'X_test', 'fold_shuffle_param', 'html_param', 'fold_generator', 'USI', 'gpu_param', '_ml_usecase', 'idx', 'pipeline', 'y_test', 'y_train', 'n_jobs_param', 'fold_groups_param', 'seed', 'fix_imbalance'}
2024-04-30 12:33:07,259:INFO:Checking environment
2024-04-30 12:33:07,259:INFO:python_version: 3.10.12
2024-04-30 12:33:07,259:INFO:python_build: ('main', 'Nov 20 2023 15:14:05')
2024-04-30 12:33:07,260:INFO:machine: x86_64
2024-04-30 12:33:07,261:INFO:platform: Linux-6.5.0-28-generic-x86_64-with-glibc2.35
2024-04-30 12:33:07,261:INFO:Memory: svmem(total=16608313344, available=5745246208, percent=65.4, used=8712245248, free=174518272, active=10976550912, inactive=3612729344, buffers=303665152, cached=7417884672, shared=1802235904, slab=630595584)
2024-04-30 12:33:07,262:INFO:Physical Core: 4
2024-04-30 12:33:07,262:INFO:Logical Core: 8
2024-04-30 12:33:07,262:INFO:Checking libraries
2024-04-30 12:33:07,262:INFO:System:
2024-04-30 12:33:07,262:INFO:    python: 3.10.12 (main, Nov 20 2023, 15:14:05) [GCC 11.4.0]
2024-04-30 12:33:07,262:INFO:executable: /bin/python3
2024-04-30 12:33:07,262:INFO:   machine: Linux-6.5.0-28-generic-x86_64-with-glibc2.35
2024-04-30 12:33:07,262:INFO:PyCaret required dependencies:
2024-04-30 12:33:07,282:INFO:                 pip: 22.0.2
2024-04-30 12:33:07,283:INFO:          setuptools: 59.6.0
2024-04-30 12:33:07,283:INFO:             pycaret: 3.3.1
2024-04-30 12:33:07,283:INFO:             IPython: 8.24.0
2024-04-30 12:33:07,283:INFO:          ipywidgets: 8.1.2
2024-04-30 12:33:07,283:INFO:                tqdm: 4.66.2
2024-04-30 12:33:07,283:INFO:               numpy: 1.23.5
2024-04-30 12:33:07,283:INFO:              pandas: 1.5.2
2024-04-30 12:33:07,283:INFO:              jinja2: 3.0.3
2024-04-30 12:33:07,283:INFO:               scipy: 1.11.4
2024-04-30 12:33:07,283:INFO:              joblib: 1.3.2
2024-04-30 12:33:07,283:INFO:             sklearn: 1.4.2
2024-04-30 12:33:07,283:INFO:                pyod: 1.1.3
2024-04-30 12:33:07,283:INFO:            imblearn: 0.12.2
2024-04-30 12:33:07,283:INFO:   category_encoders: 2.6.3
2024-04-30 12:33:07,283:INFO:            lightgbm: 4.3.0
2024-04-30 12:33:07,283:INFO:               numba: 0.59.1
2024-04-30 12:33:07,283:INFO:            requests: 2.25.1
2024-04-30 12:33:07,283:INFO:          matplotlib: 3.6.2
2024-04-30 12:33:07,283:INFO:          scikitplot: 0.3.7
2024-04-30 12:33:07,283:INFO:         yellowbrick: 1.5
2024-04-30 12:33:07,283:INFO:              plotly: 5.21.0
2024-04-30 12:33:07,283:INFO:    plotly-resampler: Not installed
2024-04-30 12:33:07,283:INFO:             kaleido: 0.2.1
2024-04-30 12:33:07,283:INFO:           schemdraw: 0.15
2024-04-30 12:33:07,283:INFO:         statsmodels: 0.14.2
2024-04-30 12:33:07,283:INFO:              sktime: 0.26.0
2024-04-30 12:33:07,284:INFO:               tbats: 1.1.3
2024-04-30 12:33:07,284:INFO:            pmdarima: 2.0.4
2024-04-30 12:33:07,284:INFO:              psutil: 5.9.8
2024-04-30 12:33:07,284:INFO:          markupsafe: 2.0.1
2024-04-30 12:33:07,284:INFO:             pickle5: Not installed
2024-04-30 12:33:07,284:INFO:         cloudpickle: 3.0.0
2024-04-30 12:33:07,284:INFO:         deprecation: 2.1.0
2024-04-30 12:33:07,284:INFO:              xxhash: 3.4.1
2024-04-30 12:33:07,284:INFO:           wurlitzer: 3.0.3
2024-04-30 12:33:07,284:INFO:PyCaret optional dependencies:
2024-04-30 12:33:07,429:INFO:                shap: Not installed
2024-04-30 12:33:07,429:INFO:           interpret: Not installed
2024-04-30 12:33:07,429:INFO:                umap: Not installed
2024-04-30 12:33:07,429:INFO:     ydata_profiling: Not installed
2024-04-30 12:33:07,429:INFO:  explainerdashboard: Not installed
2024-04-30 12:33:07,429:INFO:             autoviz: Not installed
2024-04-30 12:33:07,429:INFO:           fairlearn: Not installed
2024-04-30 12:33:07,429:INFO:          deepchecks: Not installed
2024-04-30 12:33:07,429:INFO:             xgboost: Not installed
2024-04-30 12:33:07,429:INFO:            catboost: Not installed
2024-04-30 12:33:07,429:INFO:              kmodes: Not installed
2024-04-30 12:33:07,429:INFO:             mlxtend: Not installed
2024-04-30 12:33:07,429:INFO:       statsforecast: Not installed
2024-04-30 12:33:07,429:INFO:        tune_sklearn: Not installed
2024-04-30 12:33:07,429:INFO:                 ray: Not installed
2024-04-30 12:33:07,429:INFO:            hyperopt: Not installed
2024-04-30 12:33:07,429:INFO:              optuna: Not installed
2024-04-30 12:33:07,429:INFO:               skopt: Not installed
2024-04-30 12:33:07,429:INFO:              mlflow: Not installed
2024-04-30 12:33:07,429:INFO:              gradio: Not installed
2024-04-30 12:33:07,429:INFO:             fastapi: 0.88.0
2024-04-30 12:33:07,430:INFO:             uvicorn: Not installed
2024-04-30 12:33:07,430:INFO:              m2cgen: Not installed
2024-04-30 12:33:07,430:INFO:           evidently: Not installed
2024-04-30 12:33:07,430:INFO:               fugue: Not installed
2024-04-30 12:33:07,430:INFO:           streamlit: Not installed
2024-04-30 12:33:07,430:INFO:             prophet: Not installed
2024-04-30 12:33:07,430:INFO:None
2024-04-30 12:33:07,430:INFO:Set up data.
2024-04-30 12:33:07,437:INFO:Set up folding strategy.
2024-04-30 12:33:07,437:INFO:Set up train/test split.
2024-04-30 12:33:07,441:INFO:Set up index.
2024-04-30 12:33:07,441:INFO:Assigning column types.
2024-04-30 12:33:07,444:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-30 12:33:07,481:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-30 12:33:07,484:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-30 12:33:07,511:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 12:33:07,511:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 12:33:07,552:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-30 12:33:07,553:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-30 12:33:07,576:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 12:33:07,576:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 12:33:07,576:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-30 12:33:07,615:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-30 12:33:07,639:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 12:33:07,639:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 12:33:07,679:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-30 12:33:07,705:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 12:33:07,705:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 12:33:07,706:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-30 12:33:07,768:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 12:33:07,768:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 12:33:07,837:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 12:33:07,837:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 12:33:07,839:INFO:Preparing preprocessing pipeline...
2024-04-30 12:33:07,840:INFO:Set up label encoding.
2024-04-30 12:33:07,840:INFO:Set up simple imputation.
2024-04-30 12:33:07,870:INFO:Finished creating preprocessing pipeline.
2024-04-30 12:33:07,874:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Jsc', 'Voc', 'FF', 'Efficiency',
                                             'Sr', 'Sp', 'Temp'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-04-30 12:33:07,874:INFO:Creating final display dataframe.
2024-04-30 12:33:07,936:INFO:Setup _display_container:                     Description                   Value
0                    Session id                     123
1                        Target                   Class
2                   Target type              Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2, 4: 3
4           Original data shape                (182, 8)
5        Transformed data shape                (182, 8)
6   Transformed train set shape                (127, 8)
7    Transformed test set shape                 (55, 8)
8              Numeric features                       7
9                    Preprocess                    True
10              Imputation type                  simple
11           Numeric imputation                    mean
12       Categorical imputation                    mode
13               Fold Generator         StratifiedKFold
14                  Fold Number                      10
15                     CPU Jobs                      -1
16                      Use GPU                   False
17               Log Experiment                   False
18              Experiment Name        clf-default-name
19                          USI                    4b3d
2024-04-30 12:33:08,019:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 12:33:08,020:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 12:33:08,091:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 12:33:08,091:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 12:33:08,092:INFO:setup() successfully completed in 0.83s...............
2024-04-30 12:33:08,093:INFO:Initializing compare_models()
2024-04-30 12:33:08,093:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7bedb18ada50>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7bedb18ada50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-30 12:33:08,093:INFO:Checking exceptions
2024-04-30 12:33:08,096:INFO:Preparing display monitor
2024-04-30 12:33:08,099:INFO:Initializing Logistic Regression
2024-04-30 12:33:08,099:INFO:Total runtime is 1.8080075581868489e-06 minutes
2024-04-30 12:33:08,099:INFO:SubProcess create_model() called ==================================
2024-04-30 12:33:08,100:INFO:Initializing create_model()
2024-04-30 12:33:08,100:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7bedb18ada50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7bed9215fdc0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 12:33:08,100:INFO:Checking exceptions
2024-04-30 12:33:08,100:INFO:Importing libraries
2024-04-30 12:33:08,100:INFO:Copying training dataset
2024-04-30 12:33:08,103:INFO:Defining folds
2024-04-30 12:33:08,103:INFO:Declaring metric variables
2024-04-30 12:33:08,103:INFO:Importing untrained model
2024-04-30 12:33:08,104:INFO:Logistic Regression Imported successfully
2024-04-30 12:33:08,104:INFO:Starting cross validation
2024-04-30 12:33:08,105:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 12:33:11,634:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-30 12:33:11,669:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:11,682:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:11,700:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:11,702:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:11,706:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:11,834:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-30 12:33:11,854:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:11,859:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:11,864:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:11,870:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:11,970:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-30 12:33:11,972:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-30 12:33:11,990:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:11,990:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:11,993:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:11,993:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:11,996:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:11,999:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,001:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,004:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,151:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-30 12:33:12,157:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-30 12:33:12,169:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:12,173:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,174:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:12,176:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,178:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,180:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:12,181:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,183:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,187:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,227:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-30 12:33:12,238:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:12,240:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,243:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,246:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,274:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-30 12:33:12,284:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:12,287:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,290:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,292:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,331:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-30 12:33:12,342:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:12,344:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,347:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,348:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:12,348:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-30 12:33:12,350:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,359:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:12,361:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,364:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,367:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,381:INFO:Calculating mean and std
2024-04-30 12:33:12,383:INFO:Creating metrics dataframe
2024-04-30 12:33:12,391:INFO:Uploading results into container
2024-04-30 12:33:12,393:INFO:Uploading model into container now
2024-04-30 12:33:12,394:INFO:_master_model_container: 1
2024-04-30 12:33:12,394:INFO:_display_container: 2
2024-04-30 12:33:12,395:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-30 12:33:12,395:INFO:create_model() successfully completed......................................
2024-04-30 12:33:12,483:INFO:SubProcess create_model() end ==================================
2024-04-30 12:33:12,483:INFO:Creating metrics dataframe
2024-04-30 12:33:12,489:INFO:Initializing K Neighbors Classifier
2024-04-30 12:33:12,489:INFO:Total runtime is 0.07316340208053589 minutes
2024-04-30 12:33:12,489:INFO:SubProcess create_model() called ==================================
2024-04-30 12:33:12,489:INFO:Initializing create_model()
2024-04-30 12:33:12,489:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7bedb18ada50>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7bed9215fdc0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 12:33:12,489:INFO:Checking exceptions
2024-04-30 12:33:12,490:INFO:Importing libraries
2024-04-30 12:33:12,490:INFO:Copying training dataset
2024-04-30 12:33:12,494:INFO:Defining folds
2024-04-30 12:33:12,494:INFO:Declaring metric variables
2024-04-30 12:33:12,494:INFO:Importing untrained model
2024-04-30 12:33:12,494:INFO:K Neighbors Classifier Imported successfully
2024-04-30 12:33:12,495:INFO:Starting cross validation
2024-04-30 12:33:12,495:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 12:33:12,559:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:12,559:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:12,559:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:12,561:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:12,563:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:12,565:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:12,565:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:33:12,565:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:33:12,565:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:33:12,566:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:33:12,568:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:33:12,568:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,569:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:33:12,569:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,570:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,571:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,571:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,572:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,573:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:12,573:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,574:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,574:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:12,574:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,577:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,577:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:33:12,577:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,577:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,578:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,578:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-30 12:33:12,579:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,579:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,579:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:12,580:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,581:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,582:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,582:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,583:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,585:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,586:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,588:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:12,590:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,591:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,624:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:12,625:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-30 12:33:12,626:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,627:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:12,628:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-30 12:33:12,629:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,630:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,632:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,633:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,636:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,643:INFO:Calculating mean and std
2024-04-30 12:33:12,644:INFO:Creating metrics dataframe
2024-04-30 12:33:12,648:INFO:Uploading results into container
2024-04-30 12:33:12,648:INFO:Uploading model into container now
2024-04-30 12:33:12,649:INFO:_master_model_container: 2
2024-04-30 12:33:12,649:INFO:_display_container: 2
2024-04-30 12:33:12,649:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-04-30 12:33:12,649:INFO:create_model() successfully completed......................................
2024-04-30 12:33:12,711:INFO:SubProcess create_model() end ==================================
2024-04-30 12:33:12,711:INFO:Creating metrics dataframe
2024-04-30 12:33:12,717:INFO:Initializing Naive Bayes
2024-04-30 12:33:12,718:INFO:Total runtime is 0.07697444359461467 minutes
2024-04-30 12:33:12,718:INFO:SubProcess create_model() called ==================================
2024-04-30 12:33:12,718:INFO:Initializing create_model()
2024-04-30 12:33:12,718:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7bedb18ada50>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7bed9215fdc0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 12:33:12,718:INFO:Checking exceptions
2024-04-30 12:33:12,718:INFO:Importing libraries
2024-04-30 12:33:12,718:INFO:Copying training dataset
2024-04-30 12:33:12,722:INFO:Defining folds
2024-04-30 12:33:12,722:INFO:Declaring metric variables
2024-04-30 12:33:12,722:INFO:Importing untrained model
2024-04-30 12:33:12,722:INFO:Naive Bayes Imported successfully
2024-04-30 12:33:12,723:INFO:Starting cross validation
2024-04-30 12:33:12,723:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 12:33:12,763:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:12,763:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:12,764:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:33:12,764:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:33:12,766:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:12,766:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,767:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:33:12,767:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,768:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:12,768:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:33:12,769:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,770:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:12,771:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:33:12,771:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,771:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,771:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:12,772:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:33:12,773:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:12,773:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,773:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,774:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,774:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,776:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,776:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,778:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:12,778:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,778:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,779:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,779:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,780:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:12,780:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,781:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:12,783:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:12,783:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,783:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:12,783:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:33:12,784:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-30 12:33:12,785:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,786:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,787:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,791:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,792:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,793:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:12,793:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:12,795:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,796:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,805:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:12,806:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-30 12:33:12,807:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,810:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,811:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:12,811:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-30 12:33:12,812:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:12,812:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,813:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,815:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,818:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,832:INFO:Calculating mean and std
2024-04-30 12:33:12,833:INFO:Creating metrics dataframe
2024-04-30 12:33:12,839:INFO:Uploading results into container
2024-04-30 12:33:12,839:INFO:Uploading model into container now
2024-04-30 12:33:12,840:INFO:_master_model_container: 3
2024-04-30 12:33:12,840:INFO:_display_container: 2
2024-04-30 12:33:12,840:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-04-30 12:33:12,840:INFO:create_model() successfully completed......................................
2024-04-30 12:33:12,904:INFO:SubProcess create_model() end ==================================
2024-04-30 12:33:12,904:INFO:Creating metrics dataframe
2024-04-30 12:33:12,911:INFO:Initializing Decision Tree Classifier
2024-04-30 12:33:12,911:INFO:Total runtime is 0.08019470771153768 minutes
2024-04-30 12:33:12,911:INFO:SubProcess create_model() called ==================================
2024-04-30 12:33:12,911:INFO:Initializing create_model()
2024-04-30 12:33:12,911:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7bedb18ada50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7bed9215fdc0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 12:33:12,911:INFO:Checking exceptions
2024-04-30 12:33:12,911:INFO:Importing libraries
2024-04-30 12:33:12,911:INFO:Copying training dataset
2024-04-30 12:33:12,915:INFO:Defining folds
2024-04-30 12:33:12,915:INFO:Declaring metric variables
2024-04-30 12:33:12,915:INFO:Importing untrained model
2024-04-30 12:33:12,916:INFO:Decision Tree Classifier Imported successfully
2024-04-30 12:33:12,916:INFO:Starting cross validation
2024-04-30 12:33:12,917:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 12:33:12,955:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:12,955:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:12,955:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:12,955:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:33:12,955:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:33:12,956:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:33:12,958:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,958:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,958:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,958:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:12,958:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:12,959:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:33:12,959:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:33:12,960:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:12,961:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,961:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:33:12,961:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,962:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,962:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,962:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,963:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,965:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,966:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,967:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,967:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,967:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:12,968:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,968:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:33:12,970:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:12,970:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,971:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-30 12:33:12,971:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,971:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,973:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,974:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,975:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,976:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,979:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,980:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,982:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:12,997:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:12,997:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-30 12:33:12,999:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,000:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:13,001:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-30 12:33:13,002:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,003:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,004:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,007:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,011:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,022:INFO:Calculating mean and std
2024-04-30 12:33:13,023:INFO:Creating metrics dataframe
2024-04-30 12:33:13,026:INFO:Uploading results into container
2024-04-30 12:33:13,027:INFO:Uploading model into container now
2024-04-30 12:33:13,027:INFO:_master_model_container: 4
2024-04-30 12:33:13,027:INFO:_display_container: 2
2024-04-30 12:33:13,028:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-04-30 12:33:13,028:INFO:create_model() successfully completed......................................
2024-04-30 12:33:13,088:INFO:SubProcess create_model() end ==================================
2024-04-30 12:33:13,088:INFO:Creating metrics dataframe
2024-04-30 12:33:13,095:INFO:Initializing SVM - Linear Kernel
2024-04-30 12:33:13,095:INFO:Total runtime is 0.0832660476366679 minutes
2024-04-30 12:33:13,095:INFO:SubProcess create_model() called ==================================
2024-04-30 12:33:13,095:INFO:Initializing create_model()
2024-04-30 12:33:13,096:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7bedb18ada50>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7bed9215fdc0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 12:33:13,096:INFO:Checking exceptions
2024-04-30 12:33:13,096:INFO:Importing libraries
2024-04-30 12:33:13,096:INFO:Copying training dataset
2024-04-30 12:33:13,099:INFO:Defining folds
2024-04-30 12:33:13,099:INFO:Declaring metric variables
2024-04-30 12:33:13,100:INFO:Importing untrained model
2024-04-30 12:33:13,100:INFO:SVM - Linear Kernel Imported successfully
2024-04-30 12:33:13,100:INFO:Starting cross validation
2024-04-30 12:33:13,101:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 12:33:13,158:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:13,161:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,162:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:13,162:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:13,163:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:13,164:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:13,165:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,165:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,165:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,166:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,167:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,168:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:13,169:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:13,169:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,170:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,170:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,171:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,171:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:13,172:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,172:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:13,172:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:13,172:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:13,173:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,174:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,174:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,175:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,175:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,175:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:13,177:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,178:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:13,179:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,179:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:13,180:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,180:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,182:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,184:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,185:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,187:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:13,190:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,219:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:13,220:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,222:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:13,223:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,223:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,226:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,226:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,227:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:13,228:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,241:INFO:Calculating mean and std
2024-04-30 12:33:13,241:INFO:Creating metrics dataframe
2024-04-30 12:33:13,245:INFO:Uploading results into container
2024-04-30 12:33:13,246:INFO:Uploading model into container now
2024-04-30 12:33:13,246:INFO:_master_model_container: 5
2024-04-30 12:33:13,246:INFO:_display_container: 2
2024-04-30 12:33:13,247:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-04-30 12:33:13,247:INFO:create_model() successfully completed......................................
2024-04-30 12:33:13,311:INFO:SubProcess create_model() end ==================================
2024-04-30 12:33:13,312:INFO:Creating metrics dataframe
2024-04-30 12:33:13,319:INFO:Initializing Ridge Classifier
2024-04-30 12:33:13,319:INFO:Total runtime is 0.08700489203135173 minutes
2024-04-30 12:33:13,320:INFO:SubProcess create_model() called ==================================
2024-04-30 12:33:13,320:INFO:Initializing create_model()
2024-04-30 12:33:13,320:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7bedb18ada50>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7bed9215fdc0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 12:33:13,320:INFO:Checking exceptions
2024-04-30 12:33:13,320:INFO:Importing libraries
2024-04-30 12:33:13,320:INFO:Copying training dataset
2024-04-30 12:33:13,326:INFO:Defining folds
2024-04-30 12:33:13,326:INFO:Declaring metric variables
2024-04-30 12:33:13,327:INFO:Importing untrained model
2024-04-30 12:33:13,327:INFO:Ridge Classifier Imported successfully
2024-04-30 12:33:13,328:INFO:Starting cross validation
2024-04-30 12:33:13,329:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 12:33:13,380:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:13,380:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:13,381:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:13,381:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:13,381:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:13,382:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:13,382:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,383:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,383:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:13,384:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,384:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,384:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,386:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,386:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,387:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,387:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,388:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,389:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,389:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,390:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,391:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:13,391:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:13,391:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:13,392:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,392:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,392:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,393:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:13,393:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,393:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,393:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,394:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,396:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,398:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,398:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,400:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:13,402:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,419:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:13,419:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:13,421:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,421:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,423:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,423:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,424:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:13,424:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:13,425:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,426:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,432:INFO:Calculating mean and std
2024-04-30 12:33:13,432:INFO:Creating metrics dataframe
2024-04-30 12:33:13,436:INFO:Uploading results into container
2024-04-30 12:33:13,436:INFO:Uploading model into container now
2024-04-30 12:33:13,436:INFO:_master_model_container: 6
2024-04-30 12:33:13,436:INFO:_display_container: 2
2024-04-30 12:33:13,437:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-04-30 12:33:13,437:INFO:create_model() successfully completed......................................
2024-04-30 12:33:13,506:INFO:SubProcess create_model() end ==================================
2024-04-30 12:33:13,506:INFO:Creating metrics dataframe
2024-04-30 12:33:13,514:INFO:Initializing Random Forest Classifier
2024-04-30 12:33:13,514:INFO:Total runtime is 0.09025098085403442 minutes
2024-04-30 12:33:13,514:INFO:SubProcess create_model() called ==================================
2024-04-30 12:33:13,515:INFO:Initializing create_model()
2024-04-30 12:33:13,515:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7bedb18ada50>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7bed9215fdc0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 12:33:13,515:INFO:Checking exceptions
2024-04-30 12:33:13,515:INFO:Importing libraries
2024-04-30 12:33:13,515:INFO:Copying training dataset
2024-04-30 12:33:13,519:INFO:Defining folds
2024-04-30 12:33:13,519:INFO:Declaring metric variables
2024-04-30 12:33:13,520:INFO:Importing untrained model
2024-04-30 12:33:13,520:INFO:Random Forest Classifier Imported successfully
2024-04-30 12:33:13,521:INFO:Starting cross validation
2024-04-30 12:33:13,522:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 12:33:13,855:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:13,856:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:33:13,857:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:13,858:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:33:13,859:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,861:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,862:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:13,863:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:33:13,864:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:13,865:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:33:13,866:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,867:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,868:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,869:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,871:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,873:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,874:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,875:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,876:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:13,877:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:33:13,877:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,877:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:13,878:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:33:13,880:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,881:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,882:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,885:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,888:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,890:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,891:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:13,892:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:33:13,893:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:13,894:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,895:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-30 12:33:13,895:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,897:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,900:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,901:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,902:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:13,904:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:13,905:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,138:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:14,138:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-30 12:33:14,138:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:14,139:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-30 12:33:14,139:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,141:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,142:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,144:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,145:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,147:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,151:INFO:Calculating mean and std
2024-04-30 12:33:14,152:INFO:Creating metrics dataframe
2024-04-30 12:33:14,155:INFO:Uploading results into container
2024-04-30 12:33:14,156:INFO:Uploading model into container now
2024-04-30 12:33:14,156:INFO:_master_model_container: 7
2024-04-30 12:33:14,156:INFO:_display_container: 2
2024-04-30 12:33:14,157:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-04-30 12:33:14,157:INFO:create_model() successfully completed......................................
2024-04-30 12:33:14,225:INFO:SubProcess create_model() end ==================================
2024-04-30 12:33:14,225:INFO:Creating metrics dataframe
2024-04-30 12:33:14,233:INFO:Initializing Quadratic Discriminant Analysis
2024-04-30 12:33:14,233:INFO:Total runtime is 0.10223625500996908 minutes
2024-04-30 12:33:14,233:INFO:SubProcess create_model() called ==================================
2024-04-30 12:33:14,234:INFO:Initializing create_model()
2024-04-30 12:33:14,234:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7bedb18ada50>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7bed9215fdc0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 12:33:14,234:INFO:Checking exceptions
2024-04-30 12:33:14,234:INFO:Importing libraries
2024-04-30 12:33:14,234:INFO:Copying training dataset
2024-04-30 12:33:14,239:INFO:Defining folds
2024-04-30 12:33:14,239:INFO:Declaring metric variables
2024-04-30 12:33:14,239:INFO:Importing untrained model
2024-04-30 12:33:14,239:INFO:Quadratic Discriminant Analysis Imported successfully
2024-04-30 12:33:14,240:INFO:Starting cross validation
2024-04-30 12:33:14,241:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 12:33:14,275:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-30 12:33:14,275:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-30 12:33:14,276:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-30 12:33:14,277:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-30 12:33:14,281:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-30 12:33:14,282:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-30 12:33:14,285:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-30 12:33:14,286:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,286:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,287:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-30 12:33:14,287:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,287:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,288:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-30 12:33:14,290:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,290:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,290:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,291:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,291:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-30 12:33:14,291:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-30 12:33:14,291:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,291:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,291:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-30 12:33:14,292:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-30 12:33:14,292:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,292:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,292:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,292:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,293:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-30 12:33:14,293:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-30 12:33:14,293:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,293:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,294:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-30 12:33:14,295:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-04-30 12:33:14,296:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-04-30 12:33:14,296:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,297:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,297:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,297:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-30 12:33:14,297:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,298:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-30 12:33:14,298:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,298:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,298:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,298:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,298:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-30 12:33:14,298:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,298:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,299:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-30 12:33:14,299:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,299:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,300:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-04-30 12:33:14,300:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-30 12:33:14,301:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-04-30 12:33:14,301:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-04-30 12:33:14,302:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-04-30 12:33:14,302:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,303:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,303:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,303:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,303:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-30 12:33:14,304:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,304:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,304:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,304:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,305:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:14,306:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,306:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:14,306:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,307:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-30 12:33:14,307:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,308:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,308:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,308:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-30 12:33:14,308:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,309:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,309:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,309:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,310:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:14,310:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,310:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-04-30 12:33:14,311:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-04-30 12:33:14,311:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:14,311:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:14,312:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:14,313:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,313:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,313:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,314:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,314:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,315:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,318:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,318:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,320:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:14,321:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:14,323:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,324:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,328:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-30 12:33:14,332:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-30 12:33:14,334:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,334:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,334:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-30 12:33:14,336:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,337:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,337:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-30 12:33:14,338:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-04-30 12:33:14,338:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,338:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,339:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-30 12:33:14,339:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,341:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,341:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-30 12:33:14,341:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-30 12:33:14,342:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-04-30 12:33:14,342:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,343:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,343:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:14,345:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,346:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,347:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:14,348:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,356:INFO:Calculating mean and std
2024-04-30 12:33:14,357:INFO:Creating metrics dataframe
2024-04-30 12:33:14,360:INFO:Uploading results into container
2024-04-30 12:33:14,360:INFO:Uploading model into container now
2024-04-30 12:33:14,361:INFO:_master_model_container: 8
2024-04-30 12:33:14,361:INFO:_display_container: 2
2024-04-30 12:33:14,361:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-04-30 12:33:14,361:INFO:create_model() successfully completed......................................
2024-04-30 12:33:14,428:INFO:SubProcess create_model() end ==================================
2024-04-30 12:33:14,428:INFO:Creating metrics dataframe
2024-04-30 12:33:14,437:INFO:Initializing Ada Boost Classifier
2024-04-30 12:33:14,437:INFO:Total runtime is 0.10563623507817586 minutes
2024-04-30 12:33:14,438:INFO:SubProcess create_model() called ==================================
2024-04-30 12:33:14,438:INFO:Initializing create_model()
2024-04-30 12:33:14,438:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7bedb18ada50>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7bed9215fdc0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 12:33:14,438:INFO:Checking exceptions
2024-04-30 12:33:14,438:INFO:Importing libraries
2024-04-30 12:33:14,438:INFO:Copying training dataset
2024-04-30 12:33:14,443:INFO:Defining folds
2024-04-30 12:33:14,443:INFO:Declaring metric variables
2024-04-30 12:33:14,443:INFO:Importing untrained model
2024-04-30 12:33:14,444:INFO:Ada Boost Classifier Imported successfully
2024-04-30 12:33:14,444:INFO:Starting cross validation
2024-04-30 12:33:14,445:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 12:33:14,477:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-30 12:33:14,477:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-30 12:33:14,478:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-30 12:33:14,480:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-30 12:33:14,481:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-30 12:33:14,483:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-30 12:33:14,486:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-30 12:33:14,490:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-30 12:33:14,653:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:14,653:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:14,655:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,655:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,658:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:14,659:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,659:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,660:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,663:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,663:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,665:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,668:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:14,671:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,676:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:14,679:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,682:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,683:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:14,685:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,686:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-30 12:33:14,686:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-30 12:33:14,695:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:14,698:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,703:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,705:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:14,708:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,711:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:14,713:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:14,713:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,715:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,716:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,719:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,720:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,722:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:14,725:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,729:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:14,731:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,735:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,737:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,802:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:14,804:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,806:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:14,806:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,807:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:14,807:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,809:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,810:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,811:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:14,812:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:14,826:INFO:Calculating mean and std
2024-04-30 12:33:14,827:INFO:Creating metrics dataframe
2024-04-30 12:33:14,831:INFO:Uploading results into container
2024-04-30 12:33:14,832:INFO:Uploading model into container now
2024-04-30 12:33:14,832:INFO:_master_model_container: 9
2024-04-30 12:33:14,832:INFO:_display_container: 2
2024-04-30 12:33:14,832:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-04-30 12:33:14,832:INFO:create_model() successfully completed......................................
2024-04-30 12:33:14,901:INFO:SubProcess create_model() end ==================================
2024-04-30 12:33:14,901:INFO:Creating metrics dataframe
2024-04-30 12:33:14,912:INFO:Initializing Gradient Boosting Classifier
2024-04-30 12:33:14,912:INFO:Total runtime is 0.11354604959487916 minutes
2024-04-30 12:33:14,912:INFO:SubProcess create_model() called ==================================
2024-04-30 12:33:14,913:INFO:Initializing create_model()
2024-04-30 12:33:14,913:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7bedb18ada50>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7bed9215fdc0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 12:33:14,913:INFO:Checking exceptions
2024-04-30 12:33:14,913:INFO:Importing libraries
2024-04-30 12:33:14,913:INFO:Copying training dataset
2024-04-30 12:33:14,919:INFO:Defining folds
2024-04-30 12:33:14,919:INFO:Declaring metric variables
2024-04-30 12:33:14,919:INFO:Importing untrained model
2024-04-30 12:33:14,920:INFO:Gradient Boosting Classifier Imported successfully
2024-04-30 12:33:14,920:INFO:Starting cross validation
2024-04-30 12:33:14,921:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 12:33:15,802:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:15,805:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:15,810:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:15,815:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:15,820:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:15,823:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:15,831:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:15,831:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:15,834:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:15,837:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:15,839:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:15,839:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:15,841:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:15,842:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:15,844:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:15,845:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:15,847:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:15,849:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:15,852:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:15,855:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:15,872:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:15,874:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:15,874:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:15,877:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:15,878:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:15,879:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:15,881:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:15,882:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:15,882:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:15,887:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:15,887:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:15,889:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:15,892:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,269:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:16,271:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,273:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,275:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,277:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:16,279:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,281:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,283:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,289:INFO:Calculating mean and std
2024-04-30 12:33:16,290:INFO:Creating metrics dataframe
2024-04-30 12:33:16,293:INFO:Uploading results into container
2024-04-30 12:33:16,294:INFO:Uploading model into container now
2024-04-30 12:33:16,294:INFO:_master_model_container: 10
2024-04-30 12:33:16,294:INFO:_display_container: 2
2024-04-30 12:33:16,294:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-04-30 12:33:16,294:INFO:create_model() successfully completed......................................
2024-04-30 12:33:16,361:INFO:SubProcess create_model() end ==================================
2024-04-30 12:33:16,361:INFO:Creating metrics dataframe
2024-04-30 12:33:16,369:INFO:Initializing Linear Discriminant Analysis
2024-04-30 12:33:16,369:INFO:Total runtime is 0.1378258188565572 minutes
2024-04-30 12:33:16,369:INFO:SubProcess create_model() called ==================================
2024-04-30 12:33:16,369:INFO:Initializing create_model()
2024-04-30 12:33:16,369:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7bedb18ada50>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7bed9215fdc0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 12:33:16,369:INFO:Checking exceptions
2024-04-30 12:33:16,369:INFO:Importing libraries
2024-04-30 12:33:16,369:INFO:Copying training dataset
2024-04-30 12:33:16,374:INFO:Defining folds
2024-04-30 12:33:16,374:INFO:Declaring metric variables
2024-04-30 12:33:16,374:INFO:Importing untrained model
2024-04-30 12:33:16,375:INFO:Linear Discriminant Analysis Imported successfully
2024-04-30 12:33:16,375:INFO:Starting cross validation
2024-04-30 12:33:16,376:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 12:33:16,421:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:16,422:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:16,424:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:16,424:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,425:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,426:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,427:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:16,427:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:16,430:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,430:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,430:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,430:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:16,431:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:16,431:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,431:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,432:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:16,433:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,434:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,434:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,435:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,435:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,436:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,437:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,438:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:16,438:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,439:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,439:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,440:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,440:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,443:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,444:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,445:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,447:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:33:16,449:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,462:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:16,463:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,464:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-04-30 12:33:16,465:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,466:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,467:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,469:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,469:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,483:INFO:Calculating mean and std
2024-04-30 12:33:16,484:INFO:Creating metrics dataframe
2024-04-30 12:33:16,487:INFO:Uploading results into container
2024-04-30 12:33:16,488:INFO:Uploading model into container now
2024-04-30 12:33:16,488:INFO:_master_model_container: 11
2024-04-30 12:33:16,488:INFO:_display_container: 2
2024-04-30 12:33:16,489:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-04-30 12:33:16,489:INFO:create_model() successfully completed......................................
2024-04-30 12:33:16,557:INFO:SubProcess create_model() end ==================================
2024-04-30 12:33:16,557:INFO:Creating metrics dataframe
2024-04-30 12:33:16,566:INFO:Initializing Extra Trees Classifier
2024-04-30 12:33:16,566:INFO:Total runtime is 0.14111774365107219 minutes
2024-04-30 12:33:16,566:INFO:SubProcess create_model() called ==================================
2024-04-30 12:33:16,567:INFO:Initializing create_model()
2024-04-30 12:33:16,567:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7bedb18ada50>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7bed9215fdc0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 12:33:16,567:INFO:Checking exceptions
2024-04-30 12:33:16,567:INFO:Importing libraries
2024-04-30 12:33:16,567:INFO:Copying training dataset
2024-04-30 12:33:16,571:INFO:Defining folds
2024-04-30 12:33:16,572:INFO:Declaring metric variables
2024-04-30 12:33:16,572:INFO:Importing untrained model
2024-04-30 12:33:16,572:INFO:Extra Trees Classifier Imported successfully
2024-04-30 12:33:16,573:INFO:Starting cross validation
2024-04-30 12:33:16,574:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 12:33:16,813:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:16,815:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:16,815:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:33:16,816:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:33:16,817:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:16,818:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:33:16,818:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,818:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,820:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,823:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,825:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,828:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,830:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,832:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,838:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,839:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:16,839:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:16,840:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:33:16,840:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:33:16,840:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:16,841:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:33:16,842:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,842:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,843:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:16,844:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:33:16,844:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,846:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,847:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,847:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,850:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,852:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,852:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,853:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,855:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,857:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,862:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:16,863:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-30 12:33:16,865:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,870:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:16,874:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:17,033:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:17,034:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-30 12:33:17,036:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:17,039:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:17,043:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:17,051:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:33:17,051:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-30 12:33:17,053:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:17,055:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:17,057:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:33:17,072:INFO:Calculating mean and std
2024-04-30 12:33:17,073:INFO:Creating metrics dataframe
2024-04-30 12:33:17,077:INFO:Uploading results into container
2024-04-30 12:33:17,077:INFO:Uploading model into container now
2024-04-30 12:33:17,077:INFO:_master_model_container: 12
2024-04-30 12:33:17,077:INFO:_display_container: 2
2024-04-30 12:33:17,078:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-04-30 12:33:17,078:INFO:create_model() successfully completed......................................
2024-04-30 12:33:17,147:INFO:SubProcess create_model() end ==================================
2024-04-30 12:33:17,147:INFO:Creating metrics dataframe
2024-04-30 12:33:17,156:INFO:Initializing Light Gradient Boosting Machine
2024-04-30 12:33:17,156:INFO:Total runtime is 0.1509432911872864 minutes
2024-04-30 12:33:17,156:INFO:SubProcess create_model() called ==================================
2024-04-30 12:33:17,156:INFO:Initializing create_model()
2024-04-30 12:33:17,156:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7bedb18ada50>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7bed9215fdc0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 12:33:17,156:INFO:Checking exceptions
2024-04-30 12:33:17,156:INFO:Importing libraries
2024-04-30 12:33:17,157:INFO:Copying training dataset
2024-04-30 12:33:17,161:INFO:Defining folds
2024-04-30 12:33:17,161:INFO:Declaring metric variables
2024-04-30 12:33:17,161:INFO:Importing untrained model
2024-04-30 12:33:17,162:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-30 12:33:17,162:INFO:Starting cross validation
2024-04-30 12:33:17,163:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 12:42:17,671:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:42:17,671:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:42:17,673:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:42:17,675:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:42:17,704:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:42:27,359:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:42:27,359:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:42:27,361:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:42:27,364:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:42:27,420:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:42:32,487:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:42:32,487:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:42:32,489:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:42:32,491:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:42:32,556:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:42:34,123:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:42:34,124:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-30 12:42:34,125:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:42:34,162:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:42:34,165:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:42:34,222:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:42:34,222:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:42:34,223:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:42:34,226:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:42:34,229:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:42:47,382:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:42:47,383:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:42:47,390:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:42:47,396:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:42:47,408:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:42:52,514:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:42:52,521:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:42:52,523:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:42:52,525:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:42:52,535:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:42:56,414:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:42:56,414:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:42:56,416:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:42:56,424:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:42:56,426:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:44:19,156:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:44:19,173:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-30 12:44:19,175:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:44:19,177:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:44:19,180:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:44:19,203:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:44:19,203:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-30 12:44:19,205:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:44:19,208:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:44:19,210:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:44:19,224:INFO:Calculating mean and std
2024-04-30 12:44:19,224:INFO:Creating metrics dataframe
2024-04-30 12:44:19,227:INFO:Uploading results into container
2024-04-30 12:44:19,228:INFO:Uploading model into container now
2024-04-30 12:44:19,228:INFO:_master_model_container: 13
2024-04-30 12:44:19,228:INFO:_display_container: 2
2024-04-30 12:44:19,229:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-04-30 12:44:19,229:INFO:create_model() successfully completed......................................
2024-04-30 12:44:19,294:INFO:SubProcess create_model() end ==================================
2024-04-30 12:44:19,294:INFO:Creating metrics dataframe
2024-04-30 12:44:19,301:INFO:Initializing Dummy Classifier
2024-04-30 12:44:19,301:INFO:Total runtime is 11.186704126993815 minutes
2024-04-30 12:44:19,302:INFO:SubProcess create_model() called ==================================
2024-04-30 12:44:19,302:INFO:Initializing create_model()
2024-04-30 12:44:19,302:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7bedb18ada50>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7bed9215fdc0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 12:44:19,302:INFO:Checking exceptions
2024-04-30 12:44:19,302:INFO:Importing libraries
2024-04-30 12:44:19,302:INFO:Copying training dataset
2024-04-30 12:44:19,306:INFO:Defining folds
2024-04-30 12:44:19,306:INFO:Declaring metric variables
2024-04-30 12:44:19,307:INFO:Importing untrained model
2024-04-30 12:44:19,307:INFO:Dummy Classifier Imported successfully
2024-04-30 12:44:19,307:INFO:Starting cross validation
2024-04-30 12:44:19,308:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 12:44:19,342:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:44:19,343:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:44:19,346:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:44:19,346:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:44:19,347:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:44:19,347:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:44:19,348:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:44:19,348:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:44:19,349:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:44:19,349:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:44:19,350:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:44:19,350:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:44:19,351:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:44:19,351:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:44:19,351:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:44:19,352:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:44:19,352:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:44:19,352:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:44:19,353:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:44:19,355:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:44:19,355:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:44:19,356:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:44:19,356:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-04-30 12:44:19,357:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:44:19,357:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:44:19,357:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:44:19,357:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:44:19,358:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:44:19,359:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:44:19,359:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:44:19,359:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:44:19,359:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:44:19,360:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:44:19,361:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:44:19,362:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:44:19,362:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:44:19,362:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:44:19,362:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:44:19,362:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-30 12:44:19,363:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:44:19,364:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:44:19,365:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:44:19,365:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:44:19,366:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:44:19,369:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:44:19,369:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:44:19,371:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:44:19,373:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:44:19,383:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:44:19,383:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-30 12:44:19,384:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-30 12:44:19,384:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-04-30 12:44:19,384:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:44:19,385:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:44:19,387:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:44:19,388:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:44:19,388:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:44:19,389:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-30 12:44:19,389:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:44:19,390:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:44:19,398:INFO:Calculating mean and std
2024-04-30 12:44:19,399:INFO:Creating metrics dataframe
2024-04-30 12:44:19,402:INFO:Uploading results into container
2024-04-30 12:44:19,402:INFO:Uploading model into container now
2024-04-30 12:44:19,403:INFO:_master_model_container: 14
2024-04-30 12:44:19,403:INFO:_display_container: 2
2024-04-30 12:44:19,403:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-04-30 12:44:19,403:INFO:create_model() successfully completed......................................
2024-04-30 12:44:19,467:INFO:SubProcess create_model() end ==================================
2024-04-30 12:44:19,467:INFO:Creating metrics dataframe
2024-04-30 12:44:19,477:INFO:Initializing create_model()
2024-04-30 12:44:19,478:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7bedb18ada50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 12:44:19,478:INFO:Checking exceptions
2024-04-30 12:44:19,479:INFO:Importing libraries
2024-04-30 12:44:19,479:INFO:Copying training dataset
2024-04-30 12:44:19,483:INFO:Defining folds
2024-04-30 12:44:19,483:INFO:Declaring metric variables
2024-04-30 12:44:19,483:INFO:Importing untrained model
2024-04-30 12:44:19,483:INFO:Declaring custom model
2024-04-30 12:44:19,484:INFO:Extra Trees Classifier Imported successfully
2024-04-30 12:44:19,485:INFO:Cross validation set to False
2024-04-30 12:44:19,485:INFO:Fitting Model
2024-04-30 12:44:19,604:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-04-30 12:44:19,604:INFO:create_model() successfully completed......................................
2024-04-30 12:44:19,685:INFO:_master_model_container: 14
2024-04-30 12:44:19,685:INFO:_display_container: 2
2024-04-30 12:44:19,686:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-04-30 12:44:19,686:INFO:compare_models() successfully completed......................................
2024-04-30 12:44:19,687:INFO:Initializing evaluate_model()
2024-04-30 12:44:19,687:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7bedb18ada50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-04-30 12:44:19,693:INFO:Initializing plot_model()
2024-04-30 12:44:19,693:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7bedb18ada50>, system=True)
2024-04-30 12:44:19,693:INFO:Checking exceptions
2024-04-30 12:44:19,720:INFO:Preloading libraries
2024-04-30 12:44:19,733:INFO:Copying training dataset
2024-04-30 12:44:19,733:INFO:Plot type: pipeline
2024-04-30 12:48:44,197:INFO:Visual Rendered Successfully
2024-04-30 12:48:44,279:INFO:plot_model() successfully completed......................................
2024-04-30 12:48:44,282:INFO:Initializing plot_model()
2024-04-30 12:48:44,282:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7bedb18ada50>, system=True)
2024-04-30 12:48:44,282:INFO:Checking exceptions
2024-04-30 12:48:44,312:INFO:Preloading libraries
2024-04-30 12:48:44,325:INFO:Copying training dataset
2024-04-30 12:48:44,325:INFO:Plot type: auc
2024-04-30 12:48:44,414:INFO:Fitting Model
2024-04-30 12:48:44,415:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2024-04-30 12:48:44,416:INFO:Scoring test/hold-out set
2024-04-30 12:49:04,173:INFO:Visual Rendered Successfully
2024-04-30 12:49:04,256:INFO:plot_model() successfully completed......................................
2024-04-30 12:49:04,257:INFO:Initializing plot_model()
2024-04-30 12:49:04,257:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7bedb18ada50>, system=True)
2024-04-30 12:49:04,257:INFO:Checking exceptions
2024-04-30 12:49:04,286:INFO:Preloading libraries
2024-04-30 12:49:04,297:INFO:Copying training dataset
2024-04-30 12:49:04,297:INFO:Plot type: confusion_matrix
2024-04-30 12:49:04,362:INFO:Fitting Model
2024-04-30 12:49:04,362:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2024-04-30 12:49:04,362:INFO:Scoring test/hold-out set
2024-04-30 12:49:17,023:INFO:Visual Rendered Successfully
2024-04-30 12:49:17,103:INFO:plot_model() successfully completed......................................
2024-04-30 12:49:17,105:INFO:Initializing plot_model()
2024-04-30 12:49:17,105:INFO:plot_model(plot=class_report, fold=None, verbose=True, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7bedb18ada50>, system=True)
2024-04-30 12:49:17,105:INFO:Checking exceptions
2024-04-30 12:49:17,135:INFO:Preloading libraries
2024-04-30 12:49:17,146:INFO:Copying training dataset
2024-04-30 12:49:17,146:INFO:Plot type: class_report
2024-04-30 12:49:17,214:INFO:Fitting Model
2024-04-30 12:49:17,214:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2024-04-30 12:49:17,214:INFO:Scoring test/hold-out set
2024-04-30 12:49:32,802:INFO:Visual Rendered Successfully
2024-04-30 12:49:32,882:INFO:plot_model() successfully completed......................................
2024-04-30 12:49:32,884:INFO:Initializing predict_model()
2024-04-30 12:49:32,884:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7bedb18ada50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7bed9351ab00>)
2024-04-30 12:49:32,884:INFO:Checking exceptions
2024-04-30 12:49:32,884:INFO:Preloading libraries
2024-04-30 12:49:32,989:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:49:32,991:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:49:32,993:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:49:33,096:INFO:Initializing predict_model()
2024-04-30 12:49:33,096:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7bedb18ada50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7bed9351ab00>)
2024-04-30 12:49:33,096:INFO:Checking exceptions
2024-04-30 12:49:33,096:INFO:Preloading libraries
2024-04-30 12:49:33,096:INFO:Set up data.
2024-04-30 12:49:33,106:INFO:Set up index.
2024-04-30 12:49:33,192:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:49:33,194:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:49:33,196:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:49:33,298:INFO:Initializing predict_model()
2024-04-30 12:49:33,299:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7bedb18ada50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7bed9351ab00>)
2024-04-30 12:49:33,299:INFO:Checking exceptions
2024-04-30 12:49:33,299:INFO:Preloading libraries
2024-04-30 12:49:33,299:INFO:Set up data.
2024-04-30 12:49:33,306:INFO:Set up index.
2024-04-30 12:49:33,378:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:49:33,381:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:49:33,383:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 12:49:33,478:INFO:Initializing save_model()
2024-04-30 12:49:33,478:INFO:save_model(model=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), model_name=my_best_pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Jsc', 'Voc', 'FF', 'Efficiency',
                                             'Sr', 'Sp', 'Temp'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-30 12:49:33,478:INFO:Adding model into prep_pipe
2024-04-30 12:49:33,542:INFO:my_best_pipeline.pkl saved in current working directory
2024-04-30 12:49:33,548:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Jsc', 'Voc', 'FF', 'Efficiency',
                                             'Sr', 'Sp', 'Temp'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2024-04-30 12:49:33,548:INFO:save_model() successfully completed......................................
2024-04-30 12:49:33,619:INFO:Initializing load_model()
2024-04-30 12:49:33,619:INFO:load_model(model_name=my_best_pipeline, platform=None, authentication=None, verbose=True)
2024-04-30 13:03:33,452:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-30 13:03:33,452:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-30 13:03:33,452:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-30 13:03:33,452:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-30 13:03:33,590:INFO:PyCaret ClusteringExperiment
2024-04-30 13:03:33,590:INFO:Logging name: cluster-default-name
2024-04-30 13:03:33,590:INFO:ML Usecase: MLUsecase.CLUSTERING
2024-04-30 13:03:33,590:INFO:version 3.3.1
2024-04-30 13:03:33,590:INFO:Initializing setup()
2024-04-30 13:03:33,590:INFO:self.USI: cdfd
2024-04-30 13:03:33,590:INFO:self._variable_keys: {'exp_id', 'idx', 'X', 'USI', 'n_jobs_param', '_ml_usecase', 'pipeline', 'memory', 'data', 'gpu_param', 'logging_param', 'html_param', 'seed', 'gpu_n_jobs_param', 'exp_name_log', 'log_plots_param', '_available_plots'}
2024-04-30 13:03:33,590:INFO:Checking environment
2024-04-30 13:03:33,590:INFO:python_version: 3.10.12
2024-04-30 13:03:33,590:INFO:python_build: ('main', 'Nov 20 2023 15:14:05')
2024-04-30 13:03:33,591:INFO:machine: x86_64
2024-04-30 13:03:33,592:INFO:platform: Linux-6.5.0-28-generic-x86_64-with-glibc2.35
2024-04-30 13:03:33,592:INFO:Memory: svmem(total=16608313344, available=5691432960, percent=65.7, used=8537321472, free=1474936832, active=10575003648, inactive=3202015232, buffers=194306048, cached=6401748992, shared=1990651904, slab=652484608)
2024-04-30 13:03:33,593:INFO:Physical Core: 4
2024-04-30 13:03:33,593:INFO:Logical Core: 8
2024-04-30 13:03:33,593:INFO:Checking libraries
2024-04-30 13:03:33,593:INFO:System:
2024-04-30 13:03:33,593:INFO:    python: 3.10.12 (main, Nov 20 2023, 15:14:05) [GCC 11.4.0]
2024-04-30 13:03:33,593:INFO:executable: /bin/python3
2024-04-30 13:03:33,593:INFO:   machine: Linux-6.5.0-28-generic-x86_64-with-glibc2.35
2024-04-30 13:03:33,593:INFO:PyCaret required dependencies:
2024-04-30 13:03:33,607:INFO:                 pip: 22.0.2
2024-04-30 13:03:33,607:INFO:          setuptools: 59.6.0
2024-04-30 13:03:33,607:INFO:             pycaret: 3.3.1
2024-04-30 13:03:33,607:INFO:             IPython: 8.24.0
2024-04-30 13:03:33,607:INFO:          ipywidgets: 8.1.2
2024-04-30 13:03:33,607:INFO:                tqdm: 4.66.2
2024-04-30 13:03:33,607:INFO:               numpy: 1.23.5
2024-04-30 13:03:33,607:INFO:              pandas: 1.5.2
2024-04-30 13:03:33,607:INFO:              jinja2: 3.0.3
2024-04-30 13:03:33,607:INFO:               scipy: 1.11.4
2024-04-30 13:03:33,608:INFO:              joblib: 1.3.2
2024-04-30 13:03:33,608:INFO:             sklearn: 1.4.2
2024-04-30 13:03:33,608:INFO:                pyod: 1.1.3
2024-04-30 13:03:33,608:INFO:            imblearn: 0.12.2
2024-04-30 13:03:33,608:INFO:   category_encoders: 2.6.3
2024-04-30 13:03:33,608:INFO:            lightgbm: 4.3.0
2024-04-30 13:03:33,608:INFO:               numba: 0.59.1
2024-04-30 13:03:33,608:INFO:            requests: 2.25.1
2024-04-30 13:03:33,608:INFO:          matplotlib: 3.6.2
2024-04-30 13:03:33,608:INFO:          scikitplot: 0.3.7
2024-04-30 13:03:33,608:INFO:         yellowbrick: 1.5
2024-04-30 13:03:33,608:INFO:              plotly: 5.21.0
2024-04-30 13:03:33,608:INFO:    plotly-resampler: Not installed
2024-04-30 13:03:33,608:INFO:             kaleido: 0.2.1
2024-04-30 13:03:33,608:INFO:           schemdraw: 0.15
2024-04-30 13:03:33,608:INFO:         statsmodels: 0.14.2
2024-04-30 13:03:33,608:INFO:              sktime: 0.26.0
2024-04-30 13:03:33,608:INFO:               tbats: 1.1.3
2024-04-30 13:03:33,608:INFO:            pmdarima: 2.0.4
2024-04-30 13:03:33,608:INFO:              psutil: 5.9.8
2024-04-30 13:03:33,608:INFO:          markupsafe: 2.0.1
2024-04-30 13:03:33,608:INFO:             pickle5: Not installed
2024-04-30 13:03:33,608:INFO:         cloudpickle: 3.0.0
2024-04-30 13:03:33,608:INFO:         deprecation: 2.1.0
2024-04-30 13:03:33,608:INFO:              xxhash: 3.4.1
2024-04-30 13:03:33,608:INFO:           wurlitzer: 3.0.3
2024-04-30 13:03:33,608:INFO:PyCaret optional dependencies:
2024-04-30 13:03:33,713:INFO:                shap: Not installed
2024-04-30 13:03:33,713:INFO:           interpret: Not installed
2024-04-30 13:03:33,713:INFO:                umap: Not installed
2024-04-30 13:03:33,713:INFO:     ydata_profiling: Not installed
2024-04-30 13:03:33,713:INFO:  explainerdashboard: Not installed
2024-04-30 13:03:33,713:INFO:             autoviz: Not installed
2024-04-30 13:03:33,713:INFO:           fairlearn: Not installed
2024-04-30 13:03:33,713:INFO:          deepchecks: Not installed
2024-04-30 13:03:33,713:INFO:             xgboost: Not installed
2024-04-30 13:03:33,713:INFO:            catboost: Not installed
2024-04-30 13:03:33,713:INFO:              kmodes: Not installed
2024-04-30 13:03:33,713:INFO:             mlxtend: Not installed
2024-04-30 13:03:33,713:INFO:       statsforecast: Not installed
2024-04-30 13:03:33,713:INFO:        tune_sklearn: Not installed
2024-04-30 13:03:33,713:INFO:                 ray: Not installed
2024-04-30 13:03:33,713:INFO:            hyperopt: Not installed
2024-04-30 13:03:33,713:INFO:              optuna: Not installed
2024-04-30 13:03:33,713:INFO:               skopt: Not installed
2024-04-30 13:03:33,713:INFO:              mlflow: Not installed
2024-04-30 13:03:33,713:INFO:              gradio: Not installed
2024-04-30 13:03:33,713:INFO:             fastapi: 0.88.0
2024-04-30 13:03:33,713:INFO:             uvicorn: Not installed
2024-04-30 13:03:33,713:INFO:              m2cgen: Not installed
2024-04-30 13:03:33,713:INFO:           evidently: Not installed
2024-04-30 13:03:33,713:INFO:               fugue: Not installed
2024-04-30 13:03:33,713:INFO:           streamlit: Not installed
2024-04-30 13:03:33,713:INFO:             prophet: Not installed
2024-04-30 13:03:33,713:INFO:None
2024-04-30 13:03:33,714:INFO:Set up data.
2024-04-30 13:03:33,717:INFO:Set up index.
2024-04-30 13:03:33,717:INFO:Assigning column types.
2024-04-30 13:03:33,719:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2024-04-30 13:03:33,720:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2024-04-30 13:03:33,720:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 13:03:33,720:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2024-04-30 13:03:33,720:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 13:03:33,720:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2024-04-30 13:03:33,720:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 13:03:33,720:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 13:03:33,721:INFO:Preparing preprocessing pipeline...
2024-04-30 13:03:33,721:INFO:Set up simple imputation.
2024-04-30 13:03:33,721:INFO:Set up feature normalization.
2024-04-30 13:03:33,738:INFO:Finished creating preprocessing pipeline.
2024-04-30 13:03:33,742:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Jsc', 'Voc', 'FF', 'Efficiency',
                                             'Sr', 'Sp', 'Temp', 'Class'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2024-04-30 13:03:33,742:INFO:Creating final display dataframe.
2024-04-30 13:03:33,758:INFO:Setup _display_container:                Description                 Value
0               Session id                  3746
1      Original data shape              (182, 8)
2   Transformed data shape              (182, 8)
3         Numeric features                     8
4               Preprocess                  True
5          Imputation type                simple
6       Numeric imputation                  mean
7   Categorical imputation                  mode
8                Normalize                  True
9         Normalize method                zscore
10                CPU Jobs                    -1
11                 Use GPU                 False
12          Log Experiment                 False
13         Experiment Name  cluster-default-name
14                     USI                  cdfd
2024-04-30 13:03:33,761:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 13:03:33,761:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 13:03:33,762:INFO:setup() successfully completed in 0.17s...............
2024-04-30 13:03:33,762:INFO:Initializing create_model()
2024-04-30 13:03:33,762:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x77cdb86c9930>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2024-04-30 13:03:33,762:INFO:Checking exceptions
2024-04-30 13:03:33,780:INFO:Importing untrained model
2024-04-30 13:03:33,781:INFO:K-Means Clustering Imported successfully
2024-04-30 13:03:33,782:INFO:Fitting Model
2024-04-30 13:03:33,858:INFO:KMeans(n_clusters=4, random_state=3746)
2024-04-30 13:03:33,859:INFO:create_models() successfully completed......................................
2024-04-30 13:03:33,859:INFO:Uploading results into container
2024-04-30 13:03:33,864:INFO:Uploading model into container now
2024-04-30 13:03:33,877:INFO:_master_model_container: 1
2024-04-30 13:03:33,877:INFO:_display_container: 2
2024-04-30 13:03:33,878:INFO:KMeans(n_clusters=4, random_state=3746)
2024-04-30 13:03:33,878:INFO:create_model() successfully completed......................................
2024-04-30 13:03:33,976:INFO:Initializing evaluate_model()
2024-04-30 13:03:33,976:INFO:evaluate_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x77cdb86c9930>, estimator=KMeans(n_clusters=4, random_state=3746), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-04-30 13:03:33,980:INFO:Initializing plot_model()
2024-04-30 13:03:33,980:INFO:plot_model(plot=pipeline, fold=None, verbose=False, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=3746), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x77cdb86c9930>, system=True)
2024-04-30 13:03:33,980:INFO:Checking exceptions
2024-04-30 13:03:33,981:INFO:Preloading libraries
2024-04-30 13:03:33,981:INFO:Copying training dataset
2024-04-30 13:03:33,981:INFO:Plot type: pipeline
2024-04-30 13:03:59,977:INFO:Visual Rendered Successfully
2024-04-30 13:04:00,069:INFO:plot_model() successfully completed......................................
2024-04-30 13:04:00,072:INFO:Initializing plot_model()
2024-04-30 13:04:00,072:INFO:plot_model(plot=elbow, fold=None, verbose=True, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=3746), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x77cdb86c9930>, system=True)
2024-04-30 13:04:00,072:INFO:Checking exceptions
2024-04-30 13:04:00,074:INFO:Preloading libraries
2024-04-30 13:04:00,074:INFO:Copying training dataset
2024-04-30 13:04:00,074:INFO:Plot type: elbow
2024-04-30 13:04:00,135:INFO:Fitting Model
2024-04-30 13:04:13,593:INFO:Visual Rendered Successfully
2024-04-30 13:04:13,672:INFO:plot_model() successfully completed......................................
2024-04-30 13:04:13,673:INFO:Initializing plot_model()
2024-04-30 13:04:13,673:INFO:plot_model(plot=silhouette, fold=None, verbose=True, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=3746), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x77cdb86c9930>, system=True)
2024-04-30 13:04:13,673:INFO:Checking exceptions
2024-04-30 13:04:13,675:INFO:Preloading libraries
2024-04-30 13:04:13,675:INFO:Copying training dataset
2024-04-30 13:04:13,675:INFO:Plot type: silhouette
2024-04-30 13:04:13,707:INFO:Fitting Model
2024-04-30 13:04:13,708:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but KMeans was fitted with feature names
  warnings.warn(

2024-04-30 13:04:36,094:INFO:Visual Rendered Successfully
2024-04-30 13:04:36,173:INFO:plot_model() successfully completed......................................
2024-04-30 13:04:36,173:INFO:Initializing plot_model()
2024-04-30 13:04:36,174:INFO:plot_model(plot=tsne, fold=None, verbose=True, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=3746), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x77cdb86c9930>, system=True)
2024-04-30 13:04:36,174:INFO:Checking exceptions
2024-04-30 13:04:36,175:INFO:Preloading libraries
2024-04-30 13:04:36,176:INFO:Copying training dataset
2024-04-30 13:04:36,176:INFO:Plot type: tsne
2024-04-30 13:04:36,177:INFO:SubProcess assign_model() called ==================================
2024-04-30 13:04:36,177:INFO:Initializing assign_model()
2024-04-30 13:04:36,178:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x77cdb86c9930>, model=KMeans(n_clusters=4, random_state=3746), transformation=True, score=False, verbose=False)
2024-04-30 13:04:36,178:INFO:Checking exceptions
2024-04-30 13:04:36,178:INFO:Determining Trained Model
2024-04-30 13:04:36,178:INFO:Trained Model : K-Means Clustering
2024-04-30 13:04:36,178:INFO:Copying data
2024-04-30 13:04:36,199:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2024-04-30 13:04:36,200:INFO:(182, 9)
2024-04-30 13:04:36,200:INFO:assign_model() successfully completed......................................
2024-04-30 13:04:36,200:INFO:SubProcess assign_model() end ==================================
2024-04-30 13:04:36,201:INFO:Fitting TSNE()
2024-04-30 13:04:36,829:INFO:Sorting dataframe
2024-04-30 13:04:36,830:INFO:Rendering Visual
2024-04-30 13:04:42,185:INFO:Visual Rendered Successfully
2024-04-30 13:04:42,294:INFO:plot_model() successfully completed......................................
2024-04-30 13:04:42,295:INFO:Initializing assign_model()
2024-04-30 13:04:42,295:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x77cdb86c9930>, model=KMeans(n_clusters=4, random_state=3746), transformation=False, score=True, verbose=True)
2024-04-30 13:04:42,295:INFO:Checking exceptions
2024-04-30 13:04:42,295:INFO:Determining Trained Model
2024-04-30 13:04:42,295:INFO:Trained Model : K-Means Clustering
2024-04-30 13:04:42,295:INFO:Copying data
2024-04-30 13:04:42,297:INFO:(182, 9)
2024-04-30 13:04:42,297:INFO:assign_model() successfully completed......................................
2024-04-30 13:04:42,298:INFO:Initializing predict_model()
2024-04-30 13:04:42,298:INFO:predict_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x77cdb86c9930>, estimator=KMeans(n_clusters=4, random_state=3746), ml_usecase=None)
2024-04-30 13:04:42,328:INFO:Initializing save_model()
2024-04-30 13:04:42,328:INFO:save_model(model=KMeans(n_clusters=4, random_state=3746), model_name=kmeans_pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Jsc', 'Voc', 'FF', 'Efficiency',
                                             'Sr', 'Sp', 'Temp', 'Class'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.CLUSTERING, kwargs={})
2024-04-30 13:04:42,328:INFO:Adding model into prep_pipe
2024-04-30 13:04:42,334:INFO:kmeans_pipeline.pkl saved in current working directory
2024-04-30 13:04:42,340:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Jsc', 'Voc', 'FF', 'Efficiency',
                                             'Sr', 'Sp', 'Temp', 'Class'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', KMeans(n_clusters=4, random_state=3746))])
2024-04-30 13:04:42,340:INFO:save_model() successfully completed......................................
2024-04-30 13:04:42,428:INFO:Initializing load_model()
2024-04-30 13:04:42,429:INFO:load_model(model_name=kmeans_pipeline, platform=None, authentication=None, verbose=True)
2024-05-02 17:10:59,414:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-02 17:10:59,415:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-02 17:10:59,415:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-02 17:10:59,415:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-02 17:10:59,824:INFO:PyCaret ClassificationExperiment
2024-05-02 17:10:59,824:INFO:Logging name: clf-default-name
2024-05-02 17:10:59,824:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-02 17:10:59,824:INFO:version 3.3.1
2024-05-02 17:10:59,824:INFO:Initializing setup()
2024-05-02 17:10:59,824:INFO:self.USI: 8195
2024-05-02 17:10:59,824:INFO:self._variable_keys: {'y', 'log_plots_param', 'X', 'data', 'X_train', 'idx', 'y_train', 'exp_id', 'y_test', 'target_param', 'fold_generator', 'USI', 'logging_param', '_ml_usecase', 'gpu_param', 'exp_name_log', 'fold_shuffle_param', 'html_param', 'is_multiclass', 'gpu_n_jobs_param', 'X_test', 'seed', '_available_plots', 'memory', 'fix_imbalance', 'n_jobs_param', 'fold_groups_param', 'pipeline'}
2024-05-02 17:10:59,824:INFO:Checking environment
2024-05-02 17:10:59,824:INFO:python_version: 3.10.12
2024-05-02 17:10:59,825:INFO:python_build: ('main', 'Nov 20 2023 15:14:05')
2024-05-02 17:10:59,825:INFO:machine: x86_64
2024-05-02 17:10:59,827:INFO:platform: Linux-6.5.0-28-generic-x86_64-with-glibc2.35
2024-05-02 17:10:59,827:INFO:Memory: svmem(total=16608313344, available=2864222208, percent=82.8, used=9855995904, free=183828480, active=9024098304, inactive=4945289216, buffers=91672576, cached=6476816384, shared=3538935808, slab=806977536)
2024-05-02 17:10:59,828:INFO:Physical Core: 4
2024-05-02 17:10:59,828:INFO:Logical Core: 8
2024-05-02 17:10:59,828:INFO:Checking libraries
2024-05-02 17:10:59,828:INFO:System:
2024-05-02 17:10:59,828:INFO:    python: 3.10.12 (main, Nov 20 2023, 15:14:05) [GCC 11.4.0]
2024-05-02 17:10:59,828:INFO:executable: /bin/python3
2024-05-02 17:10:59,828:INFO:   machine: Linux-6.5.0-28-generic-x86_64-with-glibc2.35
2024-05-02 17:10:59,828:INFO:PyCaret required dependencies:
2024-05-02 17:10:59,853:INFO:                 pip: 22.0.2
2024-05-02 17:10:59,853:INFO:          setuptools: 59.6.0
2024-05-02 17:10:59,853:INFO:             pycaret: 3.3.1
2024-05-02 17:10:59,854:INFO:             IPython: 8.24.0
2024-05-02 17:10:59,854:INFO:          ipywidgets: 8.1.2
2024-05-02 17:10:59,854:INFO:                tqdm: 4.66.2
2024-05-02 17:10:59,854:INFO:               numpy: 1.23.5
2024-05-02 17:10:59,854:INFO:              pandas: 1.5.2
2024-05-02 17:10:59,854:INFO:              jinja2: 3.0.3
2024-05-02 17:10:59,854:INFO:               scipy: 1.11.4
2024-05-02 17:10:59,854:INFO:              joblib: 1.3.2
2024-05-02 17:10:59,854:INFO:             sklearn: 1.4.2
2024-05-02 17:10:59,854:INFO:                pyod: 1.1.3
2024-05-02 17:10:59,854:INFO:            imblearn: 0.12.2
2024-05-02 17:10:59,854:INFO:   category_encoders: 2.6.3
2024-05-02 17:10:59,854:INFO:            lightgbm: 4.3.0
2024-05-02 17:10:59,854:INFO:               numba: 0.59.1
2024-05-02 17:10:59,854:INFO:            requests: 2.25.1
2024-05-02 17:10:59,854:INFO:          matplotlib: 3.6.2
2024-05-02 17:10:59,854:INFO:          scikitplot: 0.3.7
2024-05-02 17:10:59,854:INFO:         yellowbrick: 1.5
2024-05-02 17:10:59,854:INFO:              plotly: 5.21.0
2024-05-02 17:10:59,854:INFO:    plotly-resampler: Not installed
2024-05-02 17:10:59,854:INFO:             kaleido: 0.2.1
2024-05-02 17:10:59,854:INFO:           schemdraw: 0.15
2024-05-02 17:10:59,854:INFO:         statsmodels: 0.14.2
2024-05-02 17:10:59,854:INFO:              sktime: 0.26.0
2024-05-02 17:10:59,854:INFO:               tbats: 1.1.3
2024-05-02 17:10:59,854:INFO:            pmdarima: 2.0.4
2024-05-02 17:10:59,854:INFO:              psutil: 5.9.8
2024-05-02 17:10:59,854:INFO:          markupsafe: 2.0.1
2024-05-02 17:10:59,855:INFO:             pickle5: Not installed
2024-05-02 17:10:59,855:INFO:         cloudpickle: 3.0.0
2024-05-02 17:10:59,855:INFO:         deprecation: 2.1.0
2024-05-02 17:10:59,855:INFO:              xxhash: 3.4.1
2024-05-02 17:10:59,855:INFO:           wurlitzer: 3.0.3
2024-05-02 17:10:59,855:INFO:PyCaret optional dependencies:
2024-05-02 17:11:00,046:INFO:                shap: Not installed
2024-05-02 17:11:00,046:INFO:           interpret: Not installed
2024-05-02 17:11:00,046:INFO:                umap: Not installed
2024-05-02 17:11:00,046:INFO:     ydata_profiling: Not installed
2024-05-02 17:11:00,047:INFO:  explainerdashboard: Not installed
2024-05-02 17:11:00,047:INFO:             autoviz: Not installed
2024-05-02 17:11:00,047:INFO:           fairlearn: Not installed
2024-05-02 17:11:00,047:INFO:          deepchecks: Not installed
2024-05-02 17:11:00,047:INFO:             xgboost: Not installed
2024-05-02 17:11:00,047:INFO:            catboost: Not installed
2024-05-02 17:11:00,047:INFO:              kmodes: Not installed
2024-05-02 17:11:00,047:INFO:             mlxtend: Not installed
2024-05-02 17:11:00,047:INFO:       statsforecast: Not installed
2024-05-02 17:11:00,047:INFO:        tune_sklearn: Not installed
2024-05-02 17:11:00,047:INFO:                 ray: Not installed
2024-05-02 17:11:00,047:INFO:            hyperopt: Not installed
2024-05-02 17:11:00,047:INFO:              optuna: Not installed
2024-05-02 17:11:00,047:INFO:               skopt: Not installed
2024-05-02 17:11:00,047:INFO:              mlflow: Not installed
2024-05-02 17:11:00,047:INFO:              gradio: Not installed
2024-05-02 17:11:00,048:INFO:             fastapi: 0.88.0
2024-05-02 17:11:00,048:INFO:             uvicorn: Not installed
2024-05-02 17:11:00,048:INFO:              m2cgen: Not installed
2024-05-02 17:11:00,048:INFO:           evidently: Not installed
2024-05-02 17:11:00,048:INFO:               fugue: Not installed
2024-05-02 17:11:00,048:INFO:           streamlit: Not installed
2024-05-02 17:11:00,048:INFO:             prophet: Not installed
2024-05-02 17:11:00,048:INFO:None
2024-05-02 17:11:00,048:INFO:Set up data.
2024-05-02 17:11:00,058:INFO:Set up folding strategy.
2024-05-02 17:11:00,058:INFO:Set up train/test split.
2024-05-02 17:11:00,063:INFO:Set up index.
2024-05-02 17:11:00,064:INFO:Assigning column types.
2024-05-02 17:11:00,068:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-02 17:11:00,113:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-02 17:11:00,117:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-02 17:11:00,172:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-02 17:11:00,172:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-02 17:11:00,236:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-02 17:11:00,237:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-02 17:11:00,283:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-02 17:11:00,284:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-02 17:11:00,284:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-02 17:11:00,342:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-02 17:11:00,379:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-02 17:11:00,379:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-02 17:11:00,429:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-02 17:11:00,456:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-02 17:11:00,457:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-02 17:11:00,457:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-02 17:11:00,542:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-02 17:11:00,543:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-02 17:11:00,623:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-02 17:11:00,623:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-02 17:11:00,624:INFO:Preparing preprocessing pipeline...
2024-05-02 17:11:00,626:INFO:Set up label encoding.
2024-05-02 17:11:00,626:INFO:Set up simple imputation.
2024-05-02 17:11:00,652:INFO:Finished creating preprocessing pipeline.
2024-05-02 17:11:00,657:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Jsc', 'Voc', 'FF', 'Efficiency',
                                             'Sr', 'Sp', 'Temp'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-05-02 17:11:00,657:INFO:Creating final display dataframe.
2024-05-02 17:11:00,728:INFO:Setup _display_container:                     Description                   Value
0                    Session id                     123
1                        Target                   Class
2                   Target type              Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2, 4: 3
4           Original data shape                (182, 8)
5        Transformed data shape                (182, 8)
6   Transformed train set shape                (127, 8)
7    Transformed test set shape                 (55, 8)
8              Numeric features                       7
9                    Preprocess                    True
10              Imputation type                  simple
11           Numeric imputation                    mean
12       Categorical imputation                    mode
13               Fold Generator         StratifiedKFold
14                  Fold Number                      10
15                     CPU Jobs                      -1
16                      Use GPU                   False
17               Log Experiment                   False
18              Experiment Name        clf-default-name
19                          USI                    8195
2024-05-02 17:11:00,868:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-02 17:11:00,869:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-02 17:11:00,943:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-02 17:11:00,943:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-02 17:11:00,944:INFO:setup() successfully completed in 1.12s...............
2024-05-02 17:11:00,944:INFO:Initializing compare_models()
2024-05-02 17:11:00,945:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x77aca1bd9a50>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x77aca1bd9a50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-05-02 17:11:00,945:INFO:Checking exceptions
2024-05-02 17:11:00,948:INFO:Preparing display monitor
2024-05-02 17:11:00,952:INFO:Initializing Logistic Regression
2024-05-02 17:11:00,952:INFO:Total runtime is 1.724561055501302e-06 minutes
2024-05-02 17:11:00,952:INFO:SubProcess create_model() called ==================================
2024-05-02 17:11:00,952:INFO:Initializing create_model()
2024-05-02 17:11:00,952:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x77aca1bd9a50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x77ac824afdc0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-02 17:11:00,952:INFO:Checking exceptions
2024-05-02 17:11:00,953:INFO:Importing libraries
2024-05-02 17:11:00,953:INFO:Copying training dataset
2024-05-02 17:11:00,957:INFO:Defining folds
2024-05-02 17:11:00,957:INFO:Declaring metric variables
2024-05-02 17:11:00,958:INFO:Importing untrained model
2024-05-02 17:11:00,958:INFO:Logistic Regression Imported successfully
2024-05-02 17:11:00,959:INFO:Starting cross validation
2024-05-02 17:11:00,960:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-02 17:11:05,683:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-02 17:11:05,764:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:05,778:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:05,793:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:05,800:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:06,031:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-02 17:11:06,061:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:06,065:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:06,072:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:06,085:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:06,089:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,029:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-02 17:11:07,084:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:07,100:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,123:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,141:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,145:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-02 17:11:07,172:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-02 17:11:07,173:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:07,176:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,199:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:07,205:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,214:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,215:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,222:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,229:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,306:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-02 17:11:07,334:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:07,340:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,346:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,351:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,354:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-02 17:11:07,385:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:07,391:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,400:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,403:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:07,405:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-02 17:11:07,408:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,425:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:07,429:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,436:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,441:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,497:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-02 17:11:07,520:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:07,525:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,529:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,531:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:07,533:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,571:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-02 17:11:07,586:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:07,589:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,594:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,599:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,618:INFO:Calculating mean and std
2024-05-02 17:11:07,620:INFO:Creating metrics dataframe
2024-05-02 17:11:07,629:INFO:Uploading results into container
2024-05-02 17:11:07,630:INFO:Uploading model into container now
2024-05-02 17:11:07,630:INFO:_master_model_container: 1
2024-05-02 17:11:07,630:INFO:_display_container: 2
2024-05-02 17:11:07,631:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-02 17:11:07,631:INFO:create_model() successfully completed......................................
2024-05-02 17:11:07,770:INFO:SubProcess create_model() end ==================================
2024-05-02 17:11:07,771:INFO:Creating metrics dataframe
2024-05-02 17:11:07,779:INFO:Initializing K Neighbors Classifier
2024-05-02 17:11:07,779:INFO:Total runtime is 0.1137873649597168 minutes
2024-05-02 17:11:07,779:INFO:SubProcess create_model() called ==================================
2024-05-02 17:11:07,780:INFO:Initializing create_model()
2024-05-02 17:11:07,780:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x77aca1bd9a50>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x77ac824afdc0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-02 17:11:07,780:INFO:Checking exceptions
2024-05-02 17:11:07,780:INFO:Importing libraries
2024-05-02 17:11:07,780:INFO:Copying training dataset
2024-05-02 17:11:07,786:INFO:Defining folds
2024-05-02 17:11:07,786:INFO:Declaring metric variables
2024-05-02 17:11:07,786:INFO:Importing untrained model
2024-05-02 17:11:07,787:INFO:K Neighbors Classifier Imported successfully
2024-05-02 17:11:07,787:INFO:Starting cross validation
2024-05-02 17:11:07,789:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-02 17:11:07,878:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:07,878:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:07,882:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:07,884:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:07,885:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:07,886:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:11:07,887:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:11:07,889:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:11:07,890:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:11:07,890:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,891:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:07,891:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:11:07,893:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,894:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:07,896:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:07,896:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:11:07,897:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,897:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,900:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,900:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,901:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-05-02 17:11:07,902:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,904:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:07,904:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,905:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,906:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,907:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,909:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,909:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,909:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:11:07,913:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,914:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,915:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,920:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,922:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,923:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,926:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:07,929:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,930:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,933:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,933:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,936:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,976:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:07,977:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-05-02 17:11:07,980:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:07,980:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,980:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-05-02 17:11:07,982:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,984:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,986:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,989:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:07,990:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,005:INFO:Calculating mean and std
2024-05-02 17:11:08,006:INFO:Creating metrics dataframe
2024-05-02 17:11:08,012:INFO:Uploading results into container
2024-05-02 17:11:08,013:INFO:Uploading model into container now
2024-05-02 17:11:08,013:INFO:_master_model_container: 2
2024-05-02 17:11:08,013:INFO:_display_container: 2
2024-05-02 17:11:08,014:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-05-02 17:11:08,014:INFO:create_model() successfully completed......................................
2024-05-02 17:11:08,098:INFO:SubProcess create_model() end ==================================
2024-05-02 17:11:08,098:INFO:Creating metrics dataframe
2024-05-02 17:11:08,108:INFO:Initializing Naive Bayes
2024-05-02 17:11:08,108:INFO:Total runtime is 0.11927597522735596 minutes
2024-05-02 17:11:08,109:INFO:SubProcess create_model() called ==================================
2024-05-02 17:11:08,109:INFO:Initializing create_model()
2024-05-02 17:11:08,109:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x77aca1bd9a50>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x77ac824afdc0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-02 17:11:08,109:INFO:Checking exceptions
2024-05-02 17:11:08,110:INFO:Importing libraries
2024-05-02 17:11:08,110:INFO:Copying training dataset
2024-05-02 17:11:08,115:INFO:Defining folds
2024-05-02 17:11:08,116:INFO:Declaring metric variables
2024-05-02 17:11:08,116:INFO:Importing untrained model
2024-05-02 17:11:08,116:INFO:Naive Bayes Imported successfully
2024-05-02 17:11:08,117:INFO:Starting cross validation
2024-05-02 17:11:08,118:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-02 17:11:08,186:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:08,187:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:11:08,189:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:08,191:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:11:08,191:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,193:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:08,194:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:11:08,194:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:08,195:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,195:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:11:08,197:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,197:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:08,198:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,198:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:11:08,199:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,200:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:08,200:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:11:08,201:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,202:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:08,204:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:11:08,204:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,204:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,205:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,205:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,206:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,207:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:08,207:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:08,208:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,208:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:08,210:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,210:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:08,211:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,211:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,212:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,212:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,214:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,218:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,220:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,221:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:08,222:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-05-02 17:11:08,222:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:08,226:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,228:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,234:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,238:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:08,242:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,256:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:08,257:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-05-02 17:11:08,259:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:08,260:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,260:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-05-02 17:11:08,263:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,266:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,269:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,271:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:08,273:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,275:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,288:INFO:Calculating mean and std
2024-05-02 17:11:08,289:INFO:Creating metrics dataframe
2024-05-02 17:11:08,295:INFO:Uploading results into container
2024-05-02 17:11:08,296:INFO:Uploading model into container now
2024-05-02 17:11:08,296:INFO:_master_model_container: 3
2024-05-02 17:11:08,296:INFO:_display_container: 2
2024-05-02 17:11:08,297:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-05-02 17:11:08,297:INFO:create_model() successfully completed......................................
2024-05-02 17:11:08,380:INFO:SubProcess create_model() end ==================================
2024-05-02 17:11:08,381:INFO:Creating metrics dataframe
2024-05-02 17:11:08,390:INFO:Initializing Decision Tree Classifier
2024-05-02 17:11:08,390:INFO:Total runtime is 0.12396998802820841 minutes
2024-05-02 17:11:08,390:INFO:SubProcess create_model() called ==================================
2024-05-02 17:11:08,391:INFO:Initializing create_model()
2024-05-02 17:11:08,391:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x77aca1bd9a50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x77ac824afdc0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-02 17:11:08,391:INFO:Checking exceptions
2024-05-02 17:11:08,391:INFO:Importing libraries
2024-05-02 17:11:08,391:INFO:Copying training dataset
2024-05-02 17:11:08,397:INFO:Defining folds
2024-05-02 17:11:08,398:INFO:Declaring metric variables
2024-05-02 17:11:08,398:INFO:Importing untrained model
2024-05-02 17:11:08,399:INFO:Decision Tree Classifier Imported successfully
2024-05-02 17:11:08,399:INFO:Starting cross validation
2024-05-02 17:11:08,400:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-02 17:11:08,466:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:08,469:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:08,470:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:11:08,467:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:11:08,474:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,481:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:08,482:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,483:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:11:08,487:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,488:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:08,488:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,489:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:11:08,490:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,493:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,501:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,503:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:08,505:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-05-02 17:11:08,507:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,507:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:08,508:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:11:08,509:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,510:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,511:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:08,511:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,512:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,512:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:11:08,517:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,519:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,524:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,526:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,538:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,543:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,544:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:08,545:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-05-02 17:11:08,545:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:08,547:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:11:08,547:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,549:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,549:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,553:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,554:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,561:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,568:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,569:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,575:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,585:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:08,586:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-05-02 17:11:08,589:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,595:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,599:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,615:INFO:Calculating mean and std
2024-05-02 17:11:08,616:INFO:Creating metrics dataframe
2024-05-02 17:11:08,623:INFO:Uploading results into container
2024-05-02 17:11:08,624:INFO:Uploading model into container now
2024-05-02 17:11:08,624:INFO:_master_model_container: 4
2024-05-02 17:11:08,624:INFO:_display_container: 2
2024-05-02 17:11:08,625:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-05-02 17:11:08,625:INFO:create_model() successfully completed......................................
2024-05-02 17:11:08,736:INFO:SubProcess create_model() end ==================================
2024-05-02 17:11:08,736:INFO:Creating metrics dataframe
2024-05-02 17:11:08,746:INFO:Initializing SVM - Linear Kernel
2024-05-02 17:11:08,746:INFO:Total runtime is 0.12989842891693115 minutes
2024-05-02 17:11:08,746:INFO:SubProcess create_model() called ==================================
2024-05-02 17:11:08,746:INFO:Initializing create_model()
2024-05-02 17:11:08,746:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x77aca1bd9a50>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x77ac824afdc0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-02 17:11:08,746:INFO:Checking exceptions
2024-05-02 17:11:08,746:INFO:Importing libraries
2024-05-02 17:11:08,747:INFO:Copying training dataset
2024-05-02 17:11:08,752:INFO:Defining folds
2024-05-02 17:11:08,752:INFO:Declaring metric variables
2024-05-02 17:11:08,752:INFO:Importing untrained model
2024-05-02 17:11:08,753:INFO:SVM - Linear Kernel Imported successfully
2024-05-02 17:11:08,753:INFO:Starting cross validation
2024-05-02 17:11:08,755:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-02 17:11:08,845:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:08,848:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,849:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:08,851:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:08,852:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:08,852:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,853:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:08,854:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,854:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:08,855:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,856:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,856:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,857:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:08,857:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,858:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:08,858:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,860:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,861:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:08,861:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:08,863:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,863:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,864:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,864:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,866:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,866:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:08,866:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,867:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,867:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:08,867:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:08,870:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:08,870:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,872:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,875:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,876:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,877:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,880:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:08,880:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,884:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,889:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,936:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:08,939:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,945:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:08,947:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,948:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,953:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,954:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,955:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:08,959:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:08,974:INFO:Calculating mean and std
2024-05-02 17:11:08,975:INFO:Creating metrics dataframe
2024-05-02 17:11:08,984:INFO:Uploading results into container
2024-05-02 17:11:08,985:INFO:Uploading model into container now
2024-05-02 17:11:08,986:INFO:_master_model_container: 5
2024-05-02 17:11:08,986:INFO:_display_container: 2
2024-05-02 17:11:08,987:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-05-02 17:11:08,987:INFO:create_model() successfully completed......................................
2024-05-02 17:11:09,077:INFO:SubProcess create_model() end ==================================
2024-05-02 17:11:09,077:INFO:Creating metrics dataframe
2024-05-02 17:11:09,089:INFO:Initializing Ridge Classifier
2024-05-02 17:11:09,089:INFO:Total runtime is 0.1356150507926941 minutes
2024-05-02 17:11:09,089:INFO:SubProcess create_model() called ==================================
2024-05-02 17:11:09,089:INFO:Initializing create_model()
2024-05-02 17:11:09,089:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x77aca1bd9a50>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x77ac824afdc0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-02 17:11:09,089:INFO:Checking exceptions
2024-05-02 17:11:09,089:INFO:Importing libraries
2024-05-02 17:11:09,090:INFO:Copying training dataset
2024-05-02 17:11:09,095:INFO:Defining folds
2024-05-02 17:11:09,095:INFO:Declaring metric variables
2024-05-02 17:11:09,095:INFO:Importing untrained model
2024-05-02 17:11:09,096:INFO:Ridge Classifier Imported successfully
2024-05-02 17:11:09,096:INFO:Starting cross validation
2024-05-02 17:11:09,098:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-02 17:11:09,179:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:09,179:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:09,179:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:09,182:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:09,183:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:09,183:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:09,183:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:09,186:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:09,189:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:09,190:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:09,190:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:09,190:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:09,191:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:09,191:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:09,192:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:09,192:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:09,194:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:09,196:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:09,198:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:09,200:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:09,200:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:09,200:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:09,203:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:09,204:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:09,206:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:09,208:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:09,209:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:09,212:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:09,213:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:09,216:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:09,216:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:09,217:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:09,222:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:09,223:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:09,225:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:09,229:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:09,258:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:09,258:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:09,260:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:09,260:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:09,264:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:09,264:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:09,266:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:09,267:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:09,269:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:09,270:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:09,286:INFO:Calculating mean and std
2024-05-02 17:11:09,288:INFO:Creating metrics dataframe
2024-05-02 17:11:09,297:INFO:Uploading results into container
2024-05-02 17:11:09,298:INFO:Uploading model into container now
2024-05-02 17:11:09,298:INFO:_master_model_container: 6
2024-05-02 17:11:09,298:INFO:_display_container: 2
2024-05-02 17:11:09,299:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-05-02 17:11:09,299:INFO:create_model() successfully completed......................................
2024-05-02 17:11:09,397:INFO:SubProcess create_model() end ==================================
2024-05-02 17:11:09,397:INFO:Creating metrics dataframe
2024-05-02 17:11:09,407:INFO:Initializing Random Forest Classifier
2024-05-02 17:11:09,407:INFO:Total runtime is 0.14091723759969074 minutes
2024-05-02 17:11:09,407:INFO:SubProcess create_model() called ==================================
2024-05-02 17:11:09,408:INFO:Initializing create_model()
2024-05-02 17:11:09,408:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x77aca1bd9a50>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x77ac824afdc0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-02 17:11:09,408:INFO:Checking exceptions
2024-05-02 17:11:09,408:INFO:Importing libraries
2024-05-02 17:11:09,408:INFO:Copying training dataset
2024-05-02 17:11:09,415:INFO:Defining folds
2024-05-02 17:11:09,415:INFO:Declaring metric variables
2024-05-02 17:11:09,416:INFO:Importing untrained model
2024-05-02 17:11:09,416:INFO:Random Forest Classifier Imported successfully
2024-05-02 17:11:09,417:INFO:Starting cross validation
2024-05-02 17:11:09,418:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-02 17:11:10,028:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:10,029:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:11:10,030:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:10,031:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:11:10,033:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,035:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,046:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,046:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,053:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,055:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,068:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:10,071:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:11:10,073:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:10,076:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:11:10,082:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,084:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,090:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,093:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:10,093:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,094:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-05-02 17:11:10,098:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,099:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,099:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:10,101:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:11:10,102:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,104:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,108:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,111:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,117:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,118:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,145:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:10,146:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:11:10,150:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,155:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,159:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,165:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:10,166:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:11:10,168:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,173:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,174:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:10,177:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,466:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:10,467:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-05-02 17:11:10,470:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,476:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,479:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:10,480:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-05-02 17:11:10,481:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,482:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,486:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,490:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,498:INFO:Calculating mean and std
2024-05-02 17:11:10,499:INFO:Creating metrics dataframe
2024-05-02 17:11:10,505:INFO:Uploading results into container
2024-05-02 17:11:10,506:INFO:Uploading model into container now
2024-05-02 17:11:10,506:INFO:_master_model_container: 7
2024-05-02 17:11:10,507:INFO:_display_container: 2
2024-05-02 17:11:10,508:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-05-02 17:11:10,508:INFO:create_model() successfully completed......................................
2024-05-02 17:11:10,595:INFO:SubProcess create_model() end ==================================
2024-05-02 17:11:10,595:INFO:Creating metrics dataframe
2024-05-02 17:11:10,604:INFO:Initializing Quadratic Discriminant Analysis
2024-05-02 17:11:10,605:INFO:Total runtime is 0.16087994575500486 minutes
2024-05-02 17:11:10,605:INFO:SubProcess create_model() called ==================================
2024-05-02 17:11:10,605:INFO:Initializing create_model()
2024-05-02 17:11:10,606:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x77aca1bd9a50>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x77ac824afdc0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-02 17:11:10,606:INFO:Checking exceptions
2024-05-02 17:11:10,606:INFO:Importing libraries
2024-05-02 17:11:10,606:INFO:Copying training dataset
2024-05-02 17:11:10,616:INFO:Defining folds
2024-05-02 17:11:10,616:INFO:Declaring metric variables
2024-05-02 17:11:10,616:INFO:Importing untrained model
2024-05-02 17:11:10,617:INFO:Quadratic Discriminant Analysis Imported successfully
2024-05-02 17:11:10,617:INFO:Starting cross validation
2024-05-02 17:11:10,619:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-02 17:11:10,663:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-02 17:11:10,663:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-02 17:11:10,663:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-02 17:11:10,667:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-02 17:11:10,667:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-02 17:11:10,668:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-02 17:11:10,670:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-02 17:11:10,673:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-02 17:11:10,682:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,682:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,682:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,682:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,682:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,683:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,683:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-02 17:11:10,683:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-02 17:11:10,683:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-02 17:11:10,683:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,684:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,684:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,684:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,684:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-02 17:11:10,684:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-02 17:11:10,686:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,686:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,687:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-02 17:11:10,689:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,689:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,689:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,689:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,689:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-02 17:11:10,689:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-02 17:11:10,690:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,690:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,691:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,691:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-02 17:11:10,691:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,691:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-02 17:11:10,692:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,692:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,692:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,692:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,692:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-02 17:11:10,693:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-02 17:11:10,693:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-05-02 17:11:10,693:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,694:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,694:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-02 17:11:10,695:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-05-02 17:11:10,696:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-05-02 17:11:10,697:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-05-02 17:11:10,697:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-05-02 17:11:10,697:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,699:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,700:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,700:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,700:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,701:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-02 17:11:10,701:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,701:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,701:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,702:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,702:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,702:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,703:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-02 17:11:10,704:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-02 17:11:10,708:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,710:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,711:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,711:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:10,711:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,713:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,713:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:10,714:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:10,714:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-05-02 17:11:10,715:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:10,716:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,716:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-05-02 17:11:10,717:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,718:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,719:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-05-02 17:11:10,720:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,720:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,720:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,722:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,723:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:10,726:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,730:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:10,731:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,732:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,737:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,737:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,742:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:10,746:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,747:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:10,750:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,752:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-02 17:11:10,753:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-02 17:11:10,764:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,764:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,765:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-02 17:11:10,766:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,766:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,766:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-02 17:11:10,769:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,770:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,770:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-02 17:11:10,771:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,771:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-02 17:11:10,772:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-02 17:11:10,773:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-05-02 17:11:10,774:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-05-02 17:11:10,776:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,776:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,779:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,780:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,781:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:10,781:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:10,783:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,784:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:10,793:INFO:Calculating mean and std
2024-05-02 17:11:10,794:INFO:Creating metrics dataframe
2024-05-02 17:11:10,799:INFO:Uploading results into container
2024-05-02 17:11:10,801:INFO:Uploading model into container now
2024-05-02 17:11:10,801:INFO:_master_model_container: 8
2024-05-02 17:11:10,802:INFO:_display_container: 2
2024-05-02 17:11:10,802:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-05-02 17:11:10,802:INFO:create_model() successfully completed......................................
2024-05-02 17:11:10,890:INFO:SubProcess create_model() end ==================================
2024-05-02 17:11:10,890:INFO:Creating metrics dataframe
2024-05-02 17:11:10,901:INFO:Initializing Ada Boost Classifier
2024-05-02 17:11:10,901:INFO:Total runtime is 0.1658189813296 minutes
2024-05-02 17:11:10,901:INFO:SubProcess create_model() called ==================================
2024-05-02 17:11:10,902:INFO:Initializing create_model()
2024-05-02 17:11:10,902:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x77aca1bd9a50>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x77ac824afdc0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-02 17:11:10,902:INFO:Checking exceptions
2024-05-02 17:11:10,902:INFO:Importing libraries
2024-05-02 17:11:10,902:INFO:Copying training dataset
2024-05-02 17:11:10,909:INFO:Defining folds
2024-05-02 17:11:10,909:INFO:Declaring metric variables
2024-05-02 17:11:10,910:INFO:Importing untrained model
2024-05-02 17:11:10,910:INFO:Ada Boost Classifier Imported successfully
2024-05-02 17:11:10,911:INFO:Starting cross validation
2024-05-02 17:11:10,912:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-02 17:11:10,957:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-02 17:11:10,958:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-02 17:11:10,959:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-02 17:11:10,960:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-02 17:11:10,962:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-02 17:11:10,969:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-02 17:11:10,969:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-02 17:11:10,969:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-02 17:11:11,223:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:11,227:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:11,232:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:11,233:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:11,236:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:11,240:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:11,243:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:11,246:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:11,249:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:11,250:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:11,252:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:11,256:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:11,257:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:11,264:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:11,266:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:11,267:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:11,272:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:11,278:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-02 17:11:11,281:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:11,284:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:11,284:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:11,286:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-02 17:11:11,287:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:11,291:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:11,294:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:11,296:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:11,298:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:11,299:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:11,301:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:11,302:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:11,309:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:11,311:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:11,315:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:11,376:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:11,379:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:11,385:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:11,387:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:11,389:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:11,474:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:11,476:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:11,479:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:11,481:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:11,482:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:11,483:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:11,485:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:11,485:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:11,487:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:11,489:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:11,503:INFO:Calculating mean and std
2024-05-02 17:11:11,505:INFO:Creating metrics dataframe
2024-05-02 17:11:11,510:INFO:Uploading results into container
2024-05-02 17:11:11,510:INFO:Uploading model into container now
2024-05-02 17:11:11,511:INFO:_master_model_container: 9
2024-05-02 17:11:11,511:INFO:_display_container: 2
2024-05-02 17:11:11,511:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-05-02 17:11:11,511:INFO:create_model() successfully completed......................................
2024-05-02 17:11:11,596:INFO:SubProcess create_model() end ==================================
2024-05-02 17:11:11,596:INFO:Creating metrics dataframe
2024-05-02 17:11:11,606:INFO:Initializing Gradient Boosting Classifier
2024-05-02 17:11:11,606:INFO:Total runtime is 0.1775767087936401 minutes
2024-05-02 17:11:11,607:INFO:SubProcess create_model() called ==================================
2024-05-02 17:11:11,607:INFO:Initializing create_model()
2024-05-02 17:11:11,607:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x77aca1bd9a50>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x77ac824afdc0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-02 17:11:11,607:INFO:Checking exceptions
2024-05-02 17:11:11,607:INFO:Importing libraries
2024-05-02 17:11:11,608:INFO:Copying training dataset
2024-05-02 17:11:11,613:INFO:Defining folds
2024-05-02 17:11:11,614:INFO:Declaring metric variables
2024-05-02 17:11:11,614:INFO:Importing untrained model
2024-05-02 17:11:11,614:INFO:Gradient Boosting Classifier Imported successfully
2024-05-02 17:11:11,615:INFO:Starting cross validation
2024-05-02 17:11:11,616:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-02 17:11:12,865:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:12,869:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:12,875:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:12,882:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:13,009:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:13,012:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:13,019:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:13,025:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:13,202:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:13,206:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:13,213:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:13,221:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:13,254:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:13,258:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:13,271:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:13,278:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:13,328:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:13,331:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:13,337:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:13,346:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:13,411:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:13,415:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:13,419:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:13,424:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:13,424:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:13,430:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:13,432:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:13,433:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:13,437:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:13,493:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:13,496:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:13,500:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:13,505:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:13,793:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:13,795:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:13,798:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:13,802:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:13,902:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:13,904:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:13,908:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:13,911:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:13,922:INFO:Calculating mean and std
2024-05-02 17:11:13,924:INFO:Creating metrics dataframe
2024-05-02 17:11:13,927:INFO:Uploading results into container
2024-05-02 17:11:13,928:INFO:Uploading model into container now
2024-05-02 17:11:13,929:INFO:_master_model_container: 10
2024-05-02 17:11:13,929:INFO:_display_container: 2
2024-05-02 17:11:13,929:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-02 17:11:13,929:INFO:create_model() successfully completed......................................
2024-05-02 17:11:14,011:INFO:SubProcess create_model() end ==================================
2024-05-02 17:11:14,012:INFO:Creating metrics dataframe
2024-05-02 17:11:14,023:INFO:Initializing Linear Discriminant Analysis
2024-05-02 17:11:14,023:INFO:Total runtime is 0.21786212921142573 minutes
2024-05-02 17:11:14,024:INFO:SubProcess create_model() called ==================================
2024-05-02 17:11:14,024:INFO:Initializing create_model()
2024-05-02 17:11:14,024:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x77aca1bd9a50>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x77ac824afdc0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-02 17:11:14,025:INFO:Checking exceptions
2024-05-02 17:11:14,025:INFO:Importing libraries
2024-05-02 17:11:14,025:INFO:Copying training dataset
2024-05-02 17:11:14,031:INFO:Defining folds
2024-05-02 17:11:14,031:INFO:Declaring metric variables
2024-05-02 17:11:14,031:INFO:Importing untrained model
2024-05-02 17:11:14,031:INFO:Linear Discriminant Analysis Imported successfully
2024-05-02 17:11:14,032:INFO:Starting cross validation
2024-05-02 17:11:14,033:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-02 17:11:14,101:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:14,104:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:14,104:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:14,105:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,108:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,109:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:14,109:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:14,109:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:14,111:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,112:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,113:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,114:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,114:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,117:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,119:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:14,120:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,121:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,122:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,122:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,123:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,124:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,127:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,127:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:14,128:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,128:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,129:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,129:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,131:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,134:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:14,134:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,137:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,145:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,148:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:11:14,152:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,171:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:14,172:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-02 17:11:14,174:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,175:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,179:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,180:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,183:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,184:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,193:INFO:Calculating mean and std
2024-05-02 17:11:14,194:INFO:Creating metrics dataframe
2024-05-02 17:11:14,199:INFO:Uploading results into container
2024-05-02 17:11:14,199:INFO:Uploading model into container now
2024-05-02 17:11:14,200:INFO:_master_model_container: 11
2024-05-02 17:11:14,200:INFO:_display_container: 2
2024-05-02 17:11:14,201:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-05-02 17:11:14,201:INFO:create_model() successfully completed......................................
2024-05-02 17:11:14,292:INFO:SubProcess create_model() end ==================================
2024-05-02 17:11:14,292:INFO:Creating metrics dataframe
2024-05-02 17:11:14,301:INFO:Initializing Extra Trees Classifier
2024-05-02 17:11:14,301:INFO:Total runtime is 0.22248843113581335 minutes
2024-05-02 17:11:14,301:INFO:SubProcess create_model() called ==================================
2024-05-02 17:11:14,302:INFO:Initializing create_model()
2024-05-02 17:11:14,302:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x77aca1bd9a50>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x77ac824afdc0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-02 17:11:14,302:INFO:Checking exceptions
2024-05-02 17:11:14,302:INFO:Importing libraries
2024-05-02 17:11:14,302:INFO:Copying training dataset
2024-05-02 17:11:14,308:INFO:Defining folds
2024-05-02 17:11:14,308:INFO:Declaring metric variables
2024-05-02 17:11:14,308:INFO:Importing untrained model
2024-05-02 17:11:14,309:INFO:Extra Trees Classifier Imported successfully
2024-05-02 17:11:14,309:INFO:Starting cross validation
2024-05-02 17:11:14,310:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-02 17:11:14,757:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:14,758:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:11:14,764:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,766:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:14,768:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:11:14,774:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,779:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:14,780:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:11:14,780:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,784:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,785:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,788:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,797:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,799:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,806:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,838:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:14,840:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:11:14,850:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,851:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:14,853:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:11:14,858:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,864:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,867:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,868:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:14,869:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:11:14,871:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,873:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,879:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,881:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,889:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,894:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:14,896:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-05-02 17:11:14,897:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:14,898:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:11:14,900:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,901:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,906:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,907:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,911:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:14,915:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:15,186:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:15,189:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-05-02 17:11:15,190:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:11:15,191:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-05-02 17:11:15,196:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:15,197:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:15,210:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:15,210:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:15,222:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:15,223:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:11:15,242:INFO:Calculating mean and std
2024-05-02 17:11:15,244:INFO:Creating metrics dataframe
2024-05-02 17:11:15,253:INFO:Uploading results into container
2024-05-02 17:11:15,255:INFO:Uploading model into container now
2024-05-02 17:11:15,256:INFO:_master_model_container: 12
2024-05-02 17:11:15,256:INFO:_display_container: 2
2024-05-02 17:11:15,257:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-05-02 17:11:15,257:INFO:create_model() successfully completed......................................
2024-05-02 17:11:15,360:INFO:SubProcess create_model() end ==================================
2024-05-02 17:11:15,360:INFO:Creating metrics dataframe
2024-05-02 17:11:15,370:INFO:Initializing Light Gradient Boosting Machine
2024-05-02 17:11:15,370:INFO:Total runtime is 0.24030084609985347 minutes
2024-05-02 17:11:15,370:INFO:SubProcess create_model() called ==================================
2024-05-02 17:11:15,370:INFO:Initializing create_model()
2024-05-02 17:11:15,370:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x77aca1bd9a50>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x77ac824afdc0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-02 17:11:15,371:INFO:Checking exceptions
2024-05-02 17:11:15,371:INFO:Importing libraries
2024-05-02 17:11:15,371:INFO:Copying training dataset
2024-05-02 17:11:15,376:INFO:Defining folds
2024-05-02 17:11:15,376:INFO:Declaring metric variables
2024-05-02 17:11:15,377:INFO:Importing untrained model
2024-05-02 17:11:15,377:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-02 17:11:15,378:INFO:Starting cross validation
2024-05-02 17:11:15,379:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-02 17:24:44,957:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:24:44,958:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:24:44,972:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:24:45,094:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:24:45,139:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:25:08,300:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:25:08,301:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:25:08,303:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:25:08,307:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:25:08,330:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:25:18,111:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:25:18,112:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:25:18,114:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:25:18,117:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:25:18,200:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:25:22,256:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:25:22,256:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:25:22,279:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:25:22,282:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:25:22,341:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:25:22,776:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:25:22,777:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:25:22,843:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:25:22,919:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:25:22,923:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:25:25,929:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:25:25,929:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:25:25,932:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:25:26,015:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:25:26,064:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:25:32,716:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:25:32,717:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:25:32,760:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:25:32,791:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:25:32,811:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:25:32,972:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:25:32,983:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-05-02 17:25:32,985:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:25:32,989:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:25:32,997:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:29:10,369:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:29:10,370:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-05-02 17:29:10,372:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:29:10,374:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:29:10,377:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:29:10,396:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:29:10,396:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-05-02 17:29:10,397:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:29:10,400:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:29:10,403:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:29:10,416:INFO:Calculating mean and std
2024-05-02 17:29:10,417:INFO:Creating metrics dataframe
2024-05-02 17:29:10,421:INFO:Uploading results into container
2024-05-02 17:29:10,421:INFO:Uploading model into container now
2024-05-02 17:29:10,421:INFO:_master_model_container: 13
2024-05-02 17:29:10,421:INFO:_display_container: 2
2024-05-02 17:29:10,422:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-05-02 17:29:10,422:INFO:create_model() successfully completed......................................
2024-05-02 17:29:10,494:INFO:SubProcess create_model() end ==================================
2024-05-02 17:29:10,494:INFO:Creating metrics dataframe
2024-05-02 17:29:10,502:INFO:Initializing Dummy Classifier
2024-05-02 17:29:10,502:INFO:Total runtime is 18.15917156537374 minutes
2024-05-02 17:29:10,502:INFO:SubProcess create_model() called ==================================
2024-05-02 17:29:10,503:INFO:Initializing create_model()
2024-05-02 17:29:10,503:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x77aca1bd9a50>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x77ac824afdc0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-02 17:29:10,503:INFO:Checking exceptions
2024-05-02 17:29:10,503:INFO:Importing libraries
2024-05-02 17:29:10,503:INFO:Copying training dataset
2024-05-02 17:29:10,507:INFO:Defining folds
2024-05-02 17:29:10,507:INFO:Declaring metric variables
2024-05-02 17:29:10,507:INFO:Importing untrained model
2024-05-02 17:29:10,508:INFO:Dummy Classifier Imported successfully
2024-05-02 17:29:10,508:INFO:Starting cross validation
2024-05-02 17:29:10,509:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-02 17:29:10,542:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:29:10,544:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:29:10,545:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:29:10,546:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:29:10,547:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:29:10,548:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:29:10,548:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:29:10,550:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:29:10,551:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:29:10,551:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:29:10,551:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:29:10,551:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:29:10,552:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:29:10,553:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:29:10,554:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:29:10,554:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:29:10,556:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:29:10,557:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:29:10,557:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:29:10,557:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:29:10,557:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:29:10,557:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:29:10,558:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:29:10,559:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:29:10,560:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:29:10,561:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:29:10,561:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:29:10,561:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-05-02 17:29:10,562:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:29:10,562:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:29:10,562:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:29:10,563:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:29:10,564:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:29:10,564:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:29:10,564:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:29:10,566:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:29:10,567:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:29:10,567:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:29:10,568:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:29:10,568:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 13)

  warnings.warn(

2024-05-02 17:29:10,569:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:29:10,569:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:29:10,571:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:29:10,573:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:29:10,575:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:29:10,576:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:29:10,577:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:29:10,579:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:29:10,586:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:29:10,587:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-05-02 17:29:10,588:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:29:10,588:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-05-02 17:29:10,589:WARNING:/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 188, in _score
    return super()._score(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "/home/seyma/.local/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/internal/preprocess/transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "/home/seyma/.local/lib/python3.10/site-packages/pycaret/utils/generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 349, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/seyma/.local/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 12)

  warnings.warn(

2024-05-02 17:29:10,590:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:29:10,591:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:29:10,592:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:29:10,593:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:29:10,593:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:29:10,594:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-02 17:29:10,595:WARNING:/home/seyma/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-02 17:29:10,608:INFO:Calculating mean and std
2024-05-02 17:29:10,609:INFO:Creating metrics dataframe
2024-05-02 17:29:10,612:INFO:Uploading results into container
2024-05-02 17:29:10,613:INFO:Uploading model into container now
2024-05-02 17:29:10,613:INFO:_master_model_container: 14
2024-05-02 17:29:10,613:INFO:_display_container: 2
2024-05-02 17:29:10,613:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-05-02 17:29:10,613:INFO:create_model() successfully completed......................................
2024-05-02 17:29:10,680:INFO:SubProcess create_model() end ==================================
2024-05-02 17:29:10,680:INFO:Creating metrics dataframe
2024-05-02 17:29:10,690:INFO:Initializing create_model()
2024-05-02 17:29:10,691:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x77aca1bd9a50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-02 17:29:10,691:INFO:Checking exceptions
2024-05-02 17:29:10,692:INFO:Importing libraries
2024-05-02 17:29:10,692:INFO:Copying training dataset
2024-05-02 17:29:10,696:INFO:Defining folds
2024-05-02 17:29:10,696:INFO:Declaring metric variables
2024-05-02 17:29:10,696:INFO:Importing untrained model
2024-05-02 17:29:10,696:INFO:Declaring custom model
2024-05-02 17:29:10,697:INFO:Extra Trees Classifier Imported successfully
2024-05-02 17:29:10,698:INFO:Cross validation set to False
2024-05-02 17:29:10,698:INFO:Fitting Model
2024-05-02 17:29:10,813:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-05-02 17:29:10,813:INFO:create_model() successfully completed......................................
2024-05-02 17:29:10,893:INFO:_master_model_container: 14
2024-05-02 17:29:10,893:INFO:_display_container: 2
2024-05-02 17:29:10,894:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-05-02 17:29:10,894:INFO:compare_models() successfully completed......................................
2024-05-02 17:29:10,895:INFO:Initializing evaluate_model()
2024-05-02 17:29:10,895:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x77aca1bd9a50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-05-02 17:29:10,901:INFO:Initializing plot_model()
2024-05-02 17:29:10,901:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x77aca1bd9a50>, system=True)
2024-05-02 17:29:10,901:INFO:Checking exceptions
2024-05-02 17:29:10,917:INFO:Preloading libraries
2024-05-02 17:29:10,928:INFO:Copying training dataset
2024-05-02 17:29:10,928:INFO:Plot type: pipeline
2024-05-03 00:16:12,549:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-03 00:16:12,549:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-03 00:16:12,549:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-03 00:16:12,549:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-03 00:16:13,124:INFO:PyCaret ClassificationExperiment
2024-05-03 00:16:13,124:INFO:Logging name: clf-default-name
2024-05-03 00:16:13,124:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-03 00:16:13,124:INFO:version 3.3.2
2024-05-03 00:16:13,124:INFO:Initializing setup()
2024-05-03 00:16:13,124:INFO:self.USI: 3fac
2024-05-03 00:16:13,124:INFO:self._variable_keys: {'X_train', 'idx', 'y_test', '_ml_usecase', 'target_param', 'y', 'memory', 'pipeline', 'USI', 'fold_groups_param', 'seed', 'gpu_n_jobs_param', 'X_test', '_available_plots', 'data', 'exp_id', 'fold_generator', 'html_param', 'fix_imbalance', 'fold_shuffle_param', 'exp_name_log', 'gpu_param', 'is_multiclass', 'n_jobs_param', 'y_train', 'X', 'logging_param', 'log_plots_param'}
2024-05-03 00:16:13,124:INFO:Checking environment
2024-05-03 00:16:13,124:INFO:python_version: 3.10.11
2024-05-03 00:16:13,124:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-05-03 00:16:13,124:INFO:machine: AMD64
2024-05-03 00:16:13,141:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-03 00:16:13,143:INFO:Memory: svmem(total=8302092288, available=811503616, percent=90.2, used=7490588672, free=811503616)
2024-05-03 00:16:13,144:INFO:Physical Core: 12
2024-05-03 00:16:13,144:INFO:Logical Core: 16
2024-05-03 00:16:13,144:INFO:Checking libraries
2024-05-03 00:16:13,144:INFO:System:
2024-05-03 00:16:13,144:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-05-03 00:16:13,144:INFO:executable: C:\Users\seyzu\AppData\Local\Programs\Python\Python310\python.exe
2024-05-03 00:16:13,144:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-03 00:16:13,144:INFO:PyCaret required dependencies:
2024-05-03 00:16:13,577:INFO:                 pip: 24.0
2024-05-03 00:16:13,577:INFO:          setuptools: 65.5.0
2024-05-03 00:16:13,577:INFO:             pycaret: 3.3.2
2024-05-03 00:16:13,577:INFO:             IPython: 8.24.0
2024-05-03 00:16:13,577:INFO:          ipywidgets: 8.1.2
2024-05-03 00:16:13,577:INFO:                tqdm: 4.66.2
2024-05-03 00:16:13,577:INFO:               numpy: 1.26.4
2024-05-03 00:16:13,577:INFO:              pandas: 2.1.4
2024-05-03 00:16:13,577:INFO:              jinja2: 3.1.3
2024-05-03 00:16:13,577:INFO:               scipy: 1.11.4
2024-05-03 00:16:13,577:INFO:              joblib: 1.3.2
2024-05-03 00:16:13,577:INFO:             sklearn: 1.4.2
2024-05-03 00:16:13,577:INFO:                pyod: 1.1.3
2024-05-03 00:16:13,577:INFO:            imblearn: 0.12.2
2024-05-03 00:16:13,577:INFO:   category_encoders: 2.6.3
2024-05-03 00:16:13,577:INFO:            lightgbm: 4.3.0
2024-05-03 00:16:13,577:INFO:               numba: 0.59.1
2024-05-03 00:16:13,577:INFO:            requests: 2.31.0
2024-05-03 00:16:13,577:INFO:          matplotlib: 3.7.5
2024-05-03 00:16:13,577:INFO:          scikitplot: 0.3.7
2024-05-03 00:16:13,577:INFO:         yellowbrick: 1.5
2024-05-03 00:16:13,577:INFO:              plotly: 5.21.0
2024-05-03 00:16:13,577:INFO:    plotly-resampler: Not installed
2024-05-03 00:16:13,577:INFO:             kaleido: 0.2.1
2024-05-03 00:16:13,577:INFO:           schemdraw: 0.15
2024-05-03 00:16:13,577:INFO:         statsmodels: 0.14.2
2024-05-03 00:16:13,577:INFO:              sktime: 0.26.0
2024-05-03 00:16:13,577:INFO:               tbats: 1.1.3
2024-05-03 00:16:13,577:INFO:            pmdarima: 2.0.4
2024-05-03 00:16:13,577:INFO:              psutil: 5.9.8
2024-05-03 00:16:13,577:INFO:          markupsafe: 2.1.5
2024-05-03 00:16:13,577:INFO:             pickle5: Not installed
2024-05-03 00:16:13,577:INFO:         cloudpickle: 3.0.0
2024-05-03 00:16:13,577:INFO:         deprecation: 2.1.0
2024-05-03 00:16:13,577:INFO:              xxhash: 3.4.1
2024-05-03 00:16:13,577:INFO:           wurlitzer: Not installed
2024-05-03 00:16:13,577:INFO:PyCaret optional dependencies:
2024-05-03 00:16:14,708:INFO:                shap: 0.44.1
2024-05-03 00:16:14,708:INFO:           interpret: 0.6.1
2024-05-03 00:16:14,708:INFO:                umap: 0.5.6
2024-05-03 00:16:14,708:INFO:     ydata_profiling: 4.7.0
2024-05-03 00:16:14,708:INFO:  explainerdashboard: 0.4.7
2024-05-03 00:16:14,708:INFO:             autoviz: Not installed
2024-05-03 00:16:14,708:INFO:           fairlearn: 0.7.0
2024-05-03 00:16:14,708:INFO:          deepchecks: Not installed
2024-05-03 00:16:14,708:INFO:             xgboost: 2.0.3
2024-05-03 00:16:14,708:INFO:            catboost: 1.2.5
2024-05-03 00:16:14,708:INFO:              kmodes: 0.12.2
2024-05-03 00:16:14,708:INFO:             mlxtend: 0.23.1
2024-05-03 00:16:14,708:INFO:       statsforecast: 1.5.0
2024-05-03 00:16:14,708:INFO:        tune_sklearn: Not installed
2024-05-03 00:16:14,708:INFO:                 ray: Not installed
2024-05-03 00:16:14,708:INFO:            hyperopt: 0.2.7
2024-05-03 00:16:14,708:INFO:              optuna: 3.6.1
2024-05-03 00:16:14,708:INFO:               skopt: 0.10.1
2024-05-03 00:16:14,708:INFO:              mlflow: 2.12.1
2024-05-03 00:16:14,708:INFO:              gradio: 4.28.3
2024-05-03 00:16:14,708:INFO:             fastapi: 0.110.3
2024-05-03 00:16:14,708:INFO:             uvicorn: 0.29.0
2024-05-03 00:16:14,708:INFO:              m2cgen: 0.10.0
2024-05-03 00:16:14,708:INFO:           evidently: 0.4.19
2024-05-03 00:16:14,708:INFO:               fugue: 0.8.7
2024-05-03 00:16:14,708:INFO:           streamlit: Not installed
2024-05-03 00:16:14,708:INFO:             prophet: Not installed
2024-05-03 00:16:14,708:INFO:None
2024-05-03 00:16:14,708:INFO:Set up data.
2024-05-03 00:16:14,787:INFO:Set up folding strategy.
2024-05-03 00:16:14,787:INFO:Set up train/test split.
2024-05-03 00:16:14,794:INFO:Set up index.
2024-05-03 00:16:14,794:INFO:Assigning column types.
2024-05-03 00:16:14,794:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-03 00:16:14,818:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-03 00:16:14,826:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-03 00:16:14,843:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:16:14,850:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:16:15,072:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-03 00:16:15,072:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-03 00:16:15,088:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:16:15,088:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:16:15,088:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-03 00:16:15,115:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-03 00:16:15,128:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:16:15,136:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:16:15,160:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-03 00:16:15,168:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:16:15,168:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:16:15,168:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-03 00:16:15,209:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:16:15,209:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:16:15,250:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:16:15,250:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:16:15,322:INFO:Preparing preprocessing pipeline...
2024-05-03 00:16:15,330:INFO:Set up label encoding.
2024-05-03 00:16:15,330:INFO:Set up simple imputation.
2024-05-03 00:16:15,370:INFO:Finished creating preprocessing pipeline.
2024-05-03 00:16:15,370:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\seyzu\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Jsc', 'Voc', 'FF', 'Efficiency',
                                             'Sr', 'Sp', 'Temp'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-05-03 00:16:15,370:INFO:Creating final display dataframe.
2024-05-03 00:16:15,410:INFO:Setup _display_container:                     Description                   Value
0                    Session id                     123
1                        Target                   Class
2                   Target type              Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2, 4: 3
4           Original data shape                (182, 8)
5        Transformed data shape                (182, 8)
6   Transformed train set shape                (127, 8)
7    Transformed test set shape                 (55, 8)
8              Numeric features                       7
9                    Preprocess                    True
10              Imputation type                  simple
11           Numeric imputation                    mean
12       Categorical imputation                    mode
13               Fold Generator         StratifiedKFold
14                  Fold Number                      10
15                     CPU Jobs                      -1
16                      Use GPU                   False
17               Log Experiment                   False
18              Experiment Name        clf-default-name
19                          USI                    3fac
2024-05-03 00:16:15,467:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:16:15,468:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:16:15,500:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:16:15,509:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:16:15,509:INFO:setup() successfully completed in 2.38s...............
2024-05-03 00:16:15,509:INFO:Initializing compare_models()
2024-05-03 00:16:15,509:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EB89CF3280>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001EB89CF3280>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-05-03 00:16:15,509:INFO:Checking exceptions
2024-05-03 00:16:15,565:INFO:Preparing display monitor
2024-05-03 00:16:15,571:INFO:Initializing Logistic Regression
2024-05-03 00:16:15,571:INFO:Total runtime is 0.0 minutes
2024-05-03 00:16:15,571:INFO:SubProcess create_model() called ==================================
2024-05-03 00:16:15,571:INFO:Initializing create_model()
2024-05-03 00:16:15,571:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EB89CF3280>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EBB1707D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:16:15,571:INFO:Checking exceptions
2024-05-03 00:16:15,571:INFO:Importing libraries
2024-05-03 00:16:15,571:INFO:Copying training dataset
2024-05-03 00:16:15,571:INFO:Defining folds
2024-05-03 00:16:15,571:INFO:Declaring metric variables
2024-05-03 00:16:15,571:INFO:Importing untrained model
2024-05-03 00:16:15,571:INFO:Logistic Regression Imported successfully
2024-05-03 00:16:15,571:INFO:Starting cross validation
2024-05-03 00:16:15,579:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:16:21,105:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-03 00:16:21,121:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:21,130:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,130:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,130:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,138:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-03 00:16:21,146:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-03 00:16:21,146:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:21,154:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,154:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:21,154:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,154:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,154:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:21,154:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,154:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,154:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:21,162:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,162:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-03 00:16:21,170:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:21,170:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-03 00:16:21,170:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,179:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,179:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,179:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-03 00:16:21,179:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:21,187:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,187:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-03 00:16:21,187:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,187:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,195:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:21,195:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:21,195:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,195:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,203:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,203:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,203:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,203:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:21,203:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,219:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-03 00:16:21,219:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-03 00:16:21,228:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-03 00:16:21,236:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:21,236:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:21,236:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,236:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,236:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,236:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:21,244:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:21,244:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,244:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,244:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,244:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,244:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,252:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,268:INFO:Calculating mean and std
2024-05-03 00:16:21,268:INFO:Creating metrics dataframe
2024-05-03 00:16:21,268:INFO:Uploading results into container
2024-05-03 00:16:21,268:INFO:Uploading model into container now
2024-05-03 00:16:21,268:INFO:_master_model_container: 1
2024-05-03 00:16:21,268:INFO:_display_container: 2
2024-05-03 00:16:21,268:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-03 00:16:21,268:INFO:create_model() successfully completed......................................
2024-05-03 00:16:21,488:INFO:SubProcess create_model() end ==================================
2024-05-03 00:16:21,488:INFO:Creating metrics dataframe
2024-05-03 00:16:21,499:INFO:Initializing K Neighbors Classifier
2024-05-03 00:16:21,499:INFO:Total runtime is 0.09880135456720988 minutes
2024-05-03 00:16:21,499:INFO:SubProcess create_model() called ==================================
2024-05-03 00:16:21,499:INFO:Initializing create_model()
2024-05-03 00:16:21,499:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EB89CF3280>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EBB1707D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:16:21,499:INFO:Checking exceptions
2024-05-03 00:16:21,499:INFO:Importing libraries
2024-05-03 00:16:21,499:INFO:Copying training dataset
2024-05-03 00:16:21,499:INFO:Defining folds
2024-05-03 00:16:21,499:INFO:Declaring metric variables
2024-05-03 00:16:21,499:INFO:Importing untrained model
2024-05-03 00:16:21,499:INFO:K Neighbors Classifier Imported successfully
2024-05-03 00:16:21,499:INFO:Starting cross validation
2024-05-03 00:16:21,499:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:16:21,746:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,746:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,746:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,746:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,746:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,746:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,746:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,746:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:21,746:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,746:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,754:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:21,754:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,311:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,311:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,311:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,320:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,320:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,320:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,323:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,323:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,323:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,323:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,328:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,328:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,336:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,336:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,344:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,360:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,368:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,368:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:28,368:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,401:INFO:Calculating mean and std
2024-05-03 00:16:28,401:INFO:Creating metrics dataframe
2024-05-03 00:16:28,409:INFO:Uploading results into container
2024-05-03 00:16:28,409:INFO:Uploading model into container now
2024-05-03 00:16:28,409:INFO:_master_model_container: 2
2024-05-03 00:16:28,409:INFO:_display_container: 2
2024-05-03 00:16:28,409:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-05-03 00:16:28,409:INFO:create_model() successfully completed......................................
2024-05-03 00:16:28,529:INFO:SubProcess create_model() end ==================================
2024-05-03 00:16:28,529:INFO:Creating metrics dataframe
2024-05-03 00:16:28,537:INFO:Initializing Naive Bayes
2024-05-03 00:16:28,537:INFO:Total runtime is 0.21609652837117513 minutes
2024-05-03 00:16:28,537:INFO:SubProcess create_model() called ==================================
2024-05-03 00:16:28,537:INFO:Initializing create_model()
2024-05-03 00:16:28,537:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EB89CF3280>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EBB1707D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:16:28,537:INFO:Checking exceptions
2024-05-03 00:16:28,537:INFO:Importing libraries
2024-05-03 00:16:28,537:INFO:Copying training dataset
2024-05-03 00:16:28,537:INFO:Defining folds
2024-05-03 00:16:28,537:INFO:Declaring metric variables
2024-05-03 00:16:28,537:INFO:Importing untrained model
2024-05-03 00:16:28,537:INFO:Naive Bayes Imported successfully
2024-05-03 00:16:28,537:INFO:Starting cross validation
2024-05-03 00:16:28,537:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:16:28,577:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,577:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,577:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,577:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,577:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,585:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,593:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,602:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,602:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:28,602:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,602:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,602:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,602:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:28,602:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,610:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,610:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,610:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,617:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:28,617:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,617:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:28,617:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,617:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,626:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,626:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,626:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:28,626:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,626:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,638:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,638:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:28,638:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,642:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,642:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,642:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,642:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,642:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,642:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:28,642:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,674:INFO:Calculating mean and std
2024-05-03 00:16:28,674:INFO:Creating metrics dataframe
2024-05-03 00:16:28,674:INFO:Uploading results into container
2024-05-03 00:16:28,674:INFO:Uploading model into container now
2024-05-03 00:16:28,674:INFO:_master_model_container: 3
2024-05-03 00:16:28,674:INFO:_display_container: 2
2024-05-03 00:16:28,674:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-05-03 00:16:28,674:INFO:create_model() successfully completed......................................
2024-05-03 00:16:28,780:INFO:SubProcess create_model() end ==================================
2024-05-03 00:16:28,780:INFO:Creating metrics dataframe
2024-05-03 00:16:28,780:INFO:Initializing Decision Tree Classifier
2024-05-03 00:16:28,780:INFO:Total runtime is 0.22014680703481038 minutes
2024-05-03 00:16:28,780:INFO:SubProcess create_model() called ==================================
2024-05-03 00:16:28,780:INFO:Initializing create_model()
2024-05-03 00:16:28,780:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EB89CF3280>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EBB1707D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:16:28,780:INFO:Checking exceptions
2024-05-03 00:16:28,780:INFO:Importing libraries
2024-05-03 00:16:28,780:INFO:Copying training dataset
2024-05-03 00:16:28,780:INFO:Defining folds
2024-05-03 00:16:28,780:INFO:Declaring metric variables
2024-05-03 00:16:28,780:INFO:Importing untrained model
2024-05-03 00:16:28,780:INFO:Decision Tree Classifier Imported successfully
2024-05-03 00:16:28,788:INFO:Starting cross validation
2024-05-03 00:16:28,788:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:16:28,878:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,878:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,878:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,878:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,878:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,878:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,878:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,886:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,886:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,886:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,894:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,894:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,894:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,894:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,894:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,894:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,902:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,902:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,902:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,902:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,902:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,910:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,910:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,910:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,910:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,910:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,910:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:28,931:INFO:Calculating mean and std
2024-05-03 00:16:28,931:INFO:Creating metrics dataframe
2024-05-03 00:16:28,931:INFO:Uploading results into container
2024-05-03 00:16:28,931:INFO:Uploading model into container now
2024-05-03 00:16:28,931:INFO:_master_model_container: 4
2024-05-03 00:16:28,931:INFO:_display_container: 2
2024-05-03 00:16:28,931:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-05-03 00:16:28,931:INFO:create_model() successfully completed......................................
2024-05-03 00:16:29,023:INFO:SubProcess create_model() end ==================================
2024-05-03 00:16:29,023:INFO:Creating metrics dataframe
2024-05-03 00:16:29,030:INFO:Initializing SVM - Linear Kernel
2024-05-03 00:16:29,030:INFO:Total runtime is 0.22431088685989378 minutes
2024-05-03 00:16:29,030:INFO:SubProcess create_model() called ==================================
2024-05-03 00:16:29,030:INFO:Initializing create_model()
2024-05-03 00:16:29,030:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EB89CF3280>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EBB1707D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:16:29,030:INFO:Checking exceptions
2024-05-03 00:16:29,030:INFO:Importing libraries
2024-05-03 00:16:29,030:INFO:Copying training dataset
2024-05-03 00:16:29,030:INFO:Defining folds
2024-05-03 00:16:29,030:INFO:Declaring metric variables
2024-05-03 00:16:29,030:INFO:Importing untrained model
2024-05-03 00:16:29,030:INFO:SVM - Linear Kernel Imported successfully
2024-05-03 00:16:29,030:INFO:Starting cross validation
2024-05-03 00:16:29,030:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:16:29,151:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:29,151:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:29,151:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,151:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:29,151:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,151:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,151:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,151:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:29,159:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,159:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,159:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,159:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:29,159:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,159:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:29,159:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,159:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,159:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,159:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:29,159:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:29,167:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,167:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,167:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,167:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:29,167:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,167:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:29,167:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,176:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,176:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,176:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:29,176:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:29,176:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,176:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,176:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:29,176:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,183:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,183:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,183:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:29,183:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:29,183:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,183:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:29,183:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:29,183:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,183:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,183:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,183:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,183:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,183:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:29,183:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,200:INFO:Calculating mean and std
2024-05-03 00:16:29,201:INFO:Creating metrics dataframe
2024-05-03 00:16:29,201:INFO:Uploading results into container
2024-05-03 00:16:29,201:INFO:Uploading model into container now
2024-05-03 00:16:29,201:INFO:_master_model_container: 5
2024-05-03 00:16:29,201:INFO:_display_container: 2
2024-05-03 00:16:29,201:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-05-03 00:16:29,201:INFO:create_model() successfully completed......................................
2024-05-03 00:16:29,289:INFO:SubProcess create_model() end ==================================
2024-05-03 00:16:29,289:INFO:Creating metrics dataframe
2024-05-03 00:16:29,297:INFO:Initializing Ridge Classifier
2024-05-03 00:16:29,297:INFO:Total runtime is 0.22877213160196938 minutes
2024-05-03 00:16:29,297:INFO:SubProcess create_model() called ==================================
2024-05-03 00:16:29,297:INFO:Initializing create_model()
2024-05-03 00:16:29,297:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EB89CF3280>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EBB1707D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:16:29,297:INFO:Checking exceptions
2024-05-03 00:16:29,297:INFO:Importing libraries
2024-05-03 00:16:29,297:INFO:Copying training dataset
2024-05-03 00:16:29,297:INFO:Defining folds
2024-05-03 00:16:29,297:INFO:Declaring metric variables
2024-05-03 00:16:29,297:INFO:Importing untrained model
2024-05-03 00:16:29,297:INFO:Ridge Classifier Imported successfully
2024-05-03 00:16:29,297:INFO:Starting cross validation
2024-05-03 00:16:29,297:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:16:29,337:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:29,345:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:29,345:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,345:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,345:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:29,345:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,345:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,345:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:29,345:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,345:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:29,345:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,345:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,345:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,345:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,345:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:29,345:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,345:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,353:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:29,353:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,361:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:29,361:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,361:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:29,361:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:29,361:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,361:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,361:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,361:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:29,361:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:29,361:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,361:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,361:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,361:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,361:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:29,361:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,369:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:29,369:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,369:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,369:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,369:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,369:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,369:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:29,369:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,369:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,377:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,377:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:29,377:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,394:INFO:Calculating mean and std
2024-05-03 00:16:29,394:INFO:Creating metrics dataframe
2024-05-03 00:16:29,394:INFO:Uploading results into container
2024-05-03 00:16:29,394:INFO:Uploading model into container now
2024-05-03 00:16:29,394:INFO:_master_model_container: 6
2024-05-03 00:16:29,394:INFO:_display_container: 2
2024-05-03 00:16:29,394:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-05-03 00:16:29,394:INFO:create_model() successfully completed......................................
2024-05-03 00:16:29,500:INFO:SubProcess create_model() end ==================================
2024-05-03 00:16:29,500:INFO:Creating metrics dataframe
2024-05-03 00:16:29,500:INFO:Initializing Random Forest Classifier
2024-05-03 00:16:29,500:INFO:Total runtime is 0.23215707937876381 minutes
2024-05-03 00:16:29,500:INFO:SubProcess create_model() called ==================================
2024-05-03 00:16:29,500:INFO:Initializing create_model()
2024-05-03 00:16:29,500:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EB89CF3280>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EBB1707D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:16:29,500:INFO:Checking exceptions
2024-05-03 00:16:29,500:INFO:Importing libraries
2024-05-03 00:16:29,500:INFO:Copying training dataset
2024-05-03 00:16:29,509:INFO:Defining folds
2024-05-03 00:16:29,509:INFO:Declaring metric variables
2024-05-03 00:16:29,509:INFO:Importing untrained model
2024-05-03 00:16:29,509:INFO:Random Forest Classifier Imported successfully
2024-05-03 00:16:29,509:INFO:Starting cross validation
2024-05-03 00:16:29,509:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:16:29,947:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,947:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,947:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,947:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,955:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,955:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,955:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,955:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,963:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:29,963:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,963:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,963:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,963:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,963:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,971:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,979:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,987:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,995:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,995:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:29,995:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,004:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,009:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,165:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,174:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,174:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,174:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,174:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,174:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,174:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,182:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,182:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,198:INFO:Calculating mean and std
2024-05-03 00:16:30,198:INFO:Creating metrics dataframe
2024-05-03 00:16:30,198:INFO:Uploading results into container
2024-05-03 00:16:30,198:INFO:Uploading model into container now
2024-05-03 00:16:30,198:INFO:_master_model_container: 7
2024-05-03 00:16:30,198:INFO:_display_container: 2
2024-05-03 00:16:30,198:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-05-03 00:16:30,198:INFO:create_model() successfully completed......................................
2024-05-03 00:16:30,329:INFO:SubProcess create_model() end ==================================
2024-05-03 00:16:30,329:INFO:Creating metrics dataframe
2024-05-03 00:16:30,329:INFO:Initializing Quadratic Discriminant Analysis
2024-05-03 00:16:30,329:INFO:Total runtime is 0.2459691007932027 minutes
2024-05-03 00:16:30,329:INFO:SubProcess create_model() called ==================================
2024-05-03 00:16:30,329:INFO:Initializing create_model()
2024-05-03 00:16:30,329:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EB89CF3280>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EBB1707D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:16:30,329:INFO:Checking exceptions
2024-05-03 00:16:30,329:INFO:Importing libraries
2024-05-03 00:16:30,329:INFO:Copying training dataset
2024-05-03 00:16:30,337:INFO:Defining folds
2024-05-03 00:16:30,337:INFO:Declaring metric variables
2024-05-03 00:16:30,337:INFO:Importing untrained model
2024-05-03 00:16:30,337:INFO:Quadratic Discriminant Analysis Imported successfully
2024-05-03 00:16:30,337:INFO:Starting cross validation
2024-05-03 00:16:30,337:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:16:30,378:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-03 00:16:30,386:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-03 00:16:30,386:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:16:30,386:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:16:30,386:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:16:30,386:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-03 00:16:30,394:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:16:30,394:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:16:30,394:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:16:30,395:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-03 00:16:30,395:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-03 00:16:30,395:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-03 00:16:30,395:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-05-03 00:16:30,395:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:16:30,395:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,395:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:16:30,395:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:16:30,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:16:30,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:16:30,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:16:30,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:16:30,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:16:30,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:16:30,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

edicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:30,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:16:30,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:16:30,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:16:30,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:16:30,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:16:30,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-05-03 00:16:30,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-05-03 00:16:30,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:16:30,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:16:30,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:16:30,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:16:30,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:16:30,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:16:30,410:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:16:30,410:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-05-03 00:16:30,411:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:16:30,411:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,411:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,411:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:16:30,411:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:16:30,411:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-03 00:16:30,411:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:16:30,411:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:30,411:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:30,411:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,411:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,411:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,411:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:16:30,411:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:16:30,411:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:16:30,411:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-05-03 00:16:30,418:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,418:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:16:30,418:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:16:30,418:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,418:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:16:30,418:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-03 00:16:30,418:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-03 00:16:30,418:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-05-03 00:16:30,418:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:30,418:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-03 00:16:30,418:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:16:30,418:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:16:30,418:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:16:30,418:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,424:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,424:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,424:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-05-03 00:16:30,424:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:30,426:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:16:30,426:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,426:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:16:30,426:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:16:30,426:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:16:30,426:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:16:30,426:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:16:30,426:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,426:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:16:30,426:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:16:30,426:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:16:30,426:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:16:30,426:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:16:30,426:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:16:30,426:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,426:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:16:30,426:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:16:30,426:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:16:30,426:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:30,426:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:16:30,426:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:30,426:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:16:30,426:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:16:30,426:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-05-03 00:16:30,426:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-05-03 00:16:30,426:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,426:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,434:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-05-03 00:16:30,434:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,434:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,434:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,434:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,434:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,434:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:30,434:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

odifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:30,434:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:30,434:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,434:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,434:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,458:INFO:Calculating mean and std
2024-05-03 00:16:30,458:INFO:Creating metrics dataframe
2024-05-03 00:16:30,458:INFO:Uploading results into container
2024-05-03 00:16:30,458:INFO:Uploading model into container now
2024-05-03 00:16:30,458:INFO:_master_model_container: 8
2024-05-03 00:16:30,458:INFO:_display_container: 2
2024-05-03 00:16:30,458:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-05-03 00:16:30,458:INFO:create_model() successfully completed......................................
2024-05-03 00:16:30,572:INFO:SubProcess create_model() end ==================================
2024-05-03 00:16:30,572:INFO:Creating metrics dataframe
2024-05-03 00:16:30,572:INFO:Initializing Ada Boost Classifier
2024-05-03 00:16:30,572:INFO:Total runtime is 0.2500223636627197 minutes
2024-05-03 00:16:30,572:INFO:SubProcess create_model() called ==================================
2024-05-03 00:16:30,572:INFO:Initializing create_model()
2024-05-03 00:16:30,572:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EB89CF3280>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EBB1707D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:16:30,572:INFO:Checking exceptions
2024-05-03 00:16:30,572:INFO:Importing libraries
2024-05-03 00:16:30,572:INFO:Copying training dataset
2024-05-03 00:16:30,572:INFO:Defining folds
2024-05-03 00:16:30,572:INFO:Declaring metric variables
2024-05-03 00:16:30,572:INFO:Importing untrained model
2024-05-03 00:16:30,580:INFO:Ada Boost Classifier Imported successfully
2024-05-03 00:16:30,580:INFO:Starting cross validation
2024-05-03 00:16:30,580:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:16:30,597:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-03 00:16:30,597:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-03 00:16:30,605:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-03 00:16:30,605:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-03 00:16:30,630:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-03 00:16:30,630:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-03 00:16:30,654:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-03 00:16:30,662:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-03 00:16:30,678:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-03 00:16:30,686:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-03 00:16:30,734:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:30,734:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,743:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,743:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:30,743:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,751:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:30,751:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,760:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,762:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:30,763:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,775:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:30,783:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,783:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,783:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,792:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:30,792:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,792:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:30,792:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:30,792:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,792:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,800:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,800:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,800:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,800:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,800:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:30,800:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,800:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,800:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:30,808:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,808:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,808:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:30,808:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,816:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:30,816:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,824:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,824:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:30,824:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,824:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:30,824:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,832:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,832:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:30,832:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,851:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:30,852:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,855:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,857:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:30,865:INFO:Calculating mean and std
2024-05-03 00:16:30,865:INFO:Creating metrics dataframe
2024-05-03 00:16:30,867:INFO:Uploading results into container
2024-05-03 00:16:30,868:INFO:Uploading model into container now
2024-05-03 00:16:30,868:INFO:_master_model_container: 9
2024-05-03 00:16:30,868:INFO:_display_container: 2
2024-05-03 00:16:30,869:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-05-03 00:16:30,869:INFO:create_model() successfully completed......................................
2024-05-03 00:16:30,977:INFO:SubProcess create_model() end ==================================
2024-05-03 00:16:30,977:INFO:Creating metrics dataframe
2024-05-03 00:16:30,977:INFO:Initializing Gradient Boosting Classifier
2024-05-03 00:16:30,977:INFO:Total runtime is 0.25676166613896684 minutes
2024-05-03 00:16:30,977:INFO:SubProcess create_model() called ==================================
2024-05-03 00:16:30,977:INFO:Initializing create_model()
2024-05-03 00:16:30,977:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EB89CF3280>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EBB1707D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:16:30,977:INFO:Checking exceptions
2024-05-03 00:16:30,977:INFO:Importing libraries
2024-05-03 00:16:30,977:INFO:Copying training dataset
2024-05-03 00:16:30,977:INFO:Defining folds
2024-05-03 00:16:30,977:INFO:Declaring metric variables
2024-05-03 00:16:30,977:INFO:Importing untrained model
2024-05-03 00:16:30,977:INFO:Gradient Boosting Classifier Imported successfully
2024-05-03 00:16:30,977:INFO:Starting cross validation
2024-05-03 00:16:30,986:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:16:31,650:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:31,650:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:31,658:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:31,658:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:31,845:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:31,845:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:31,845:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:31,853:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:31,877:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:31,877:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:31,877:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:31,877:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:31,885:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:31,885:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:31,885:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:31,885:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:31,885:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:31,885:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:31,893:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:31,893:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:31,893:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:31,893:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:31,893:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:31,893:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:31,901:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:31,901:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:31,901:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:31,901:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:31,901:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:31,901:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:31,901:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:31,901:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:31,909:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:31,909:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:31,909:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:31,918:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:31,918:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:31,926:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:31,926:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:31,950:INFO:Calculating mean and std
2024-05-03 00:16:31,951:INFO:Creating metrics dataframe
2024-05-03 00:16:31,953:INFO:Uploading results into container
2024-05-03 00:16:31,954:INFO:Uploading model into container now
2024-05-03 00:16:31,956:INFO:_master_model_container: 10
2024-05-03 00:16:31,956:INFO:_display_container: 2
2024-05-03 00:16:31,957:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-03 00:16:31,957:INFO:create_model() successfully completed......................................
2024-05-03 00:16:32,094:INFO:SubProcess create_model() end ==================================
2024-05-03 00:16:32,094:INFO:Creating metrics dataframe
2024-05-03 00:16:32,094:INFO:Initializing Linear Discriminant Analysis
2024-05-03 00:16:32,094:INFO:Total runtime is 0.275380273660024 minutes
2024-05-03 00:16:32,094:INFO:SubProcess create_model() called ==================================
2024-05-03 00:16:32,094:INFO:Initializing create_model()
2024-05-03 00:16:32,094:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EB89CF3280>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EBB1707D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:16:32,094:INFO:Checking exceptions
2024-05-03 00:16:32,094:INFO:Importing libraries
2024-05-03 00:16:32,094:INFO:Copying training dataset
2024-05-03 00:16:32,102:INFO:Defining folds
2024-05-03 00:16:32,102:INFO:Declaring metric variables
2024-05-03 00:16:32,102:INFO:Importing untrained model
2024-05-03 00:16:32,102:INFO:Linear Discriminant Analysis Imported successfully
2024-05-03 00:16:32,102:INFO:Starting cross validation
2024-05-03 00:16:32,102:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:16:32,142:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:32,151:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,151:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:32,153:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,153:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:32,153:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,153:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,153:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,153:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,153:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:32,153:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,153:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:32,159:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,159:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:32,159:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,159:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,159:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,159:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:32,159:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,159:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,159:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,168:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:32,168:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,168:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,168:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,168:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:32,168:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,168:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:32,168:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,168:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,168:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,175:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,175:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:16:32,175:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:32,175:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,175:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,175:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,175:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,175:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,175:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,175:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,200:INFO:Calculating mean and std
2024-05-03 00:16:32,200:INFO:Creating metrics dataframe
2024-05-03 00:16:32,200:INFO:Uploading results into container
2024-05-03 00:16:32,200:INFO:Uploading model into container now
2024-05-03 00:16:32,200:INFO:_master_model_container: 11
2024-05-03 00:16:32,200:INFO:_display_container: 2
2024-05-03 00:16:32,200:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-05-03 00:16:32,200:INFO:create_model() successfully completed......................................
2024-05-03 00:16:32,297:INFO:SubProcess create_model() end ==================================
2024-05-03 00:16:32,297:INFO:Creating metrics dataframe
2024-05-03 00:16:32,297:INFO:Initializing Extra Trees Classifier
2024-05-03 00:16:32,305:INFO:Total runtime is 0.27890206178029375 minutes
2024-05-03 00:16:32,305:INFO:SubProcess create_model() called ==================================
2024-05-03 00:16:32,305:INFO:Initializing create_model()
2024-05-03 00:16:32,305:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EB89CF3280>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EBB1707D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:16:32,305:INFO:Checking exceptions
2024-05-03 00:16:32,305:INFO:Importing libraries
2024-05-03 00:16:32,305:INFO:Copying training dataset
2024-05-03 00:16:32,305:INFO:Defining folds
2024-05-03 00:16:32,305:INFO:Declaring metric variables
2024-05-03 00:16:32,305:INFO:Importing untrained model
2024-05-03 00:16:32,305:INFO:Extra Trees Classifier Imported successfully
2024-05-03 00:16:32,305:INFO:Starting cross validation
2024-05-03 00:16:32,305:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:16:32,643:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,643:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,643:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,643:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,651:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,651:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,651:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,651:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,651:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,651:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,660:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,660:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,676:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,684:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,684:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,692:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,692:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,700:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,700:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,700:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,700:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,767:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,768:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,770:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,771:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,774:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,776:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,782:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,785:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,789:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:32,798:INFO:Calculating mean and std
2024-05-03 00:16:32,798:INFO:Creating metrics dataframe
2024-05-03 00:16:32,798:INFO:Uploading results into container
2024-05-03 00:16:32,798:INFO:Uploading model into container now
2024-05-03 00:16:32,798:INFO:_master_model_container: 12
2024-05-03 00:16:32,798:INFO:_display_container: 2
2024-05-03 00:16:32,798:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-05-03 00:16:32,798:INFO:create_model() successfully completed......................................
2024-05-03 00:16:32,904:INFO:SubProcess create_model() end ==================================
2024-05-03 00:16:32,904:INFO:Creating metrics dataframe
2024-05-03 00:16:32,912:INFO:Initializing Extreme Gradient Boosting
2024-05-03 00:16:32,912:INFO:Total runtime is 0.28901842832565305 minutes
2024-05-03 00:16:32,912:INFO:SubProcess create_model() called ==================================
2024-05-03 00:16:32,912:INFO:Initializing create_model()
2024-05-03 00:16:32,912:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EB89CF3280>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EBB1707D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:16:32,912:INFO:Checking exceptions
2024-05-03 00:16:32,912:INFO:Importing libraries
2024-05-03 00:16:32,912:INFO:Copying training dataset
2024-05-03 00:16:32,912:INFO:Defining folds
2024-05-03 00:16:32,912:INFO:Declaring metric variables
2024-05-03 00:16:32,912:INFO:Importing untrained model
2024-05-03 00:16:32,912:INFO:Extreme Gradient Boosting Imported successfully
2024-05-03 00:16:32,912:INFO:Starting cross validation
2024-05-03 00:16:32,920:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:16:33,178:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:33,178:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:33,178:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:33,186:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:33,186:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:33,186:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:33,186:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:33,186:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:33,195:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:33,195:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:33,195:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:33,195:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:33,203:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:33,203:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:33,203:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:33,203:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:33,203:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:33,203:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:33,203:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:33,203:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:33,203:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:33,203:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:33,211:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:33,211:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:33,211:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:33,211:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:33,219:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:33,228:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:33,228:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:33,243:INFO:Calculating mean and std
2024-05-03 00:16:33,243:INFO:Creating metrics dataframe
2024-05-03 00:16:33,243:INFO:Uploading results into container
2024-05-03 00:16:33,243:INFO:Uploading model into container now
2024-05-03 00:16:33,243:INFO:_master_model_container: 13
2024-05-03 00:16:33,243:INFO:_display_container: 2
2024-05-03 00:16:33,243:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-05-03 00:16:33,243:INFO:create_model() successfully completed......................................
2024-05-03 00:16:33,361:INFO:SubProcess create_model() end ==================================
2024-05-03 00:16:33,361:INFO:Creating metrics dataframe
2024-05-03 00:16:33,363:INFO:Initializing Light Gradient Boosting Machine
2024-05-03 00:16:33,363:INFO:Total runtime is 0.2965380867322286 minutes
2024-05-03 00:16:33,363:INFO:SubProcess create_model() called ==================================
2024-05-03 00:16:33,363:INFO:Initializing create_model()
2024-05-03 00:16:33,363:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EB89CF3280>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EBB1707D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:16:33,364:INFO:Checking exceptions
2024-05-03 00:16:33,364:INFO:Importing libraries
2024-05-03 00:16:33,364:INFO:Copying training dataset
2024-05-03 00:16:33,367:INFO:Defining folds
2024-05-03 00:16:33,367:INFO:Declaring metric variables
2024-05-03 00:16:33,367:INFO:Importing untrained model
2024-05-03 00:16:33,368:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-03 00:16:33,368:INFO:Starting cross validation
2024-05-03 00:16:33,368:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:16:35,972:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:35,973:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:35,978:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:36,067:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:36,067:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:36,074:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:36,113:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:36,117:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:36,120:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:36,122:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:36,122:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:36,122:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:36,122:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:36,130:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:36,134:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:36,144:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:36,147:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:36,150:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:36,180:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:36,185:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:36,189:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:36,213:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:36,217:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:36,221:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:36,250:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:36,255:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:36,258:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:36,265:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:36,269:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:36,272:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:36,286:INFO:Calculating mean and std
2024-05-03 00:16:36,286:INFO:Creating metrics dataframe
2024-05-03 00:16:36,286:INFO:Uploading results into container
2024-05-03 00:16:36,286:INFO:Uploading model into container now
2024-05-03 00:16:36,286:INFO:_master_model_container: 14
2024-05-03 00:16:36,286:INFO:_display_container: 2
2024-05-03 00:16:36,286:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-05-03 00:16:36,286:INFO:create_model() successfully completed......................................
2024-05-03 00:16:36,423:INFO:SubProcess create_model() end ==================================
2024-05-03 00:16:36,423:INFO:Creating metrics dataframe
2024-05-03 00:16:36,423:INFO:Initializing CatBoost Classifier
2024-05-03 00:16:36,423:INFO:Total runtime is 0.3475296099980672 minutes
2024-05-03 00:16:36,423:INFO:SubProcess create_model() called ==================================
2024-05-03 00:16:36,423:INFO:Initializing create_model()
2024-05-03 00:16:36,423:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EB89CF3280>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EBB1707D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:16:36,423:INFO:Checking exceptions
2024-05-03 00:16:36,423:INFO:Importing libraries
2024-05-03 00:16:36,423:INFO:Copying training dataset
2024-05-03 00:16:36,431:INFO:Defining folds
2024-05-03 00:16:36,431:INFO:Declaring metric variables
2024-05-03 00:16:36,431:INFO:Importing untrained model
2024-05-03 00:16:36,431:INFO:CatBoost Classifier Imported successfully
2024-05-03 00:16:36,431:INFO:Starting cross validation
2024-05-03 00:16:36,431:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:16:40,978:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:40,978:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:40,978:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:40,986:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
9 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\catboost\core.py", line 5220, in fit
    self._fit(X, y, cat_features, text_features, embedding_features, None, sample_weight, None, None, None, None, baseline, use_best_model,
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\catboost\core.py", line 2400, in _fit
    self._train(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\catboost\core.py", line 1780, in _train
    self._object._train(train_pool, test_pool, params, allow_clear_pool, init_model._object if init_model else None)
  File "_catboost.pyx", line 4833, in _catboost._CatBoost._train
  File "_catboost.pyx", line 4882, in _catboost._CatBoost._train
_catboost.CatBoostError: C:/Go_Agent/pipelines/BuildMaster/catboost.git/catboost/libs/train_lib/dir_helper.cpp:20: Can't create train working dir: catboost_info

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2024-05-03 00:16:40,994:INFO:Calculating mean and std
2024-05-03 00:16:40,994:INFO:Creating metrics dataframe
2024-05-03 00:16:40,996:INFO:Uploading results into container
2024-05-03 00:16:40,996:INFO:Uploading model into container now
2024-05-03 00:16:40,996:INFO:_master_model_container: 15
2024-05-03 00:16:40,996:INFO:_display_container: 2
2024-05-03 00:16:40,996:INFO:<catboost.core.CatBoostClassifier object at 0x000001EBB11154B0>
2024-05-03 00:16:40,996:INFO:create_model() successfully completed......................................
2024-05-03 00:16:41,099:WARNING:create_model() for <catboost.core.CatBoostClassifier object at 0x000001EBB11154B0> raised an exception or returned all 0.0, trying without fit_kwargs:
2024-05-03 00:16:41,184:WARNING:Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

2024-05-03 00:16:41,184:INFO:Initializing create_model()
2024-05-03 00:16:41,184:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EB89CF3280>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EBB1707D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:16:41,184:INFO:Checking exceptions
2024-05-03 00:16:41,184:INFO:Importing libraries
2024-05-03 00:16:41,184:INFO:Copying training dataset
2024-05-03 00:16:41,208:INFO:Defining folds
2024-05-03 00:16:41,208:INFO:Declaring metric variables
2024-05-03 00:16:41,208:INFO:Importing untrained model
2024-05-03 00:16:41,209:INFO:CatBoost Classifier Imported successfully
2024-05-03 00:16:41,209:INFO:Starting cross validation
2024-05-03 00:16:41,209:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:16:49,501:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:49,501:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:49,510:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:49,510:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:49,518:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:49,518:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:49,518:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:49,518:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:49,526:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:49,608:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:49,616:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:49,624:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,426:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,426:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,435:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,435:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,435:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,435:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,435:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,443:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,445:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,451:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,451:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,451:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,459:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,459:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,459:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,459:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,467:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,475:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,483:INFO:Calculating mean and std
2024-05-03 00:16:50,483:INFO:Creating metrics dataframe
2024-05-03 00:16:50,483:INFO:Uploading results into container
2024-05-03 00:16:50,483:INFO:Uploading model into container now
2024-05-03 00:16:50,483:INFO:_master_model_container: 16
2024-05-03 00:16:50,483:INFO:_display_container: 2
2024-05-03 00:16:50,483:INFO:<catboost.core.CatBoostClassifier object at 0x000001EBB11143D0>
2024-05-03 00:16:50,483:INFO:create_model() successfully completed......................................
2024-05-03 00:16:50,646:INFO:SubProcess create_model() end ==================================
2024-05-03 00:16:50,646:INFO:Creating metrics dataframe
2024-05-03 00:16:50,646:INFO:Initializing Dummy Classifier
2024-05-03 00:16:50,646:INFO:Total runtime is 0.5845807790756226 minutes
2024-05-03 00:16:50,646:INFO:SubProcess create_model() called ==================================
2024-05-03 00:16:50,646:INFO:Initializing create_model()
2024-05-03 00:16:50,646:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EB89CF3280>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EBB1707D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:16:50,646:INFO:Checking exceptions
2024-05-03 00:16:50,646:INFO:Importing libraries
2024-05-03 00:16:50,646:INFO:Copying training dataset
2024-05-03 00:16:50,654:INFO:Defining folds
2024-05-03 00:16:50,654:INFO:Declaring metric variables
2024-05-03 00:16:50,654:INFO:Importing untrained model
2024-05-03 00:16:50,654:INFO:Dummy Classifier Imported successfully
2024-05-03 00:16:50,654:INFO:Starting cross validation
2024-05-03 00:16:50,654:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:16:50,694:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,694:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,694:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,694:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

odifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:50,694:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:50,694:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,694:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,694:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,694:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,694:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,694:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,694:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:50,694:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:50,708:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,708:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,732:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,740:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,740:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,740:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:50,740:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:50,740:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,740:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,740:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,748:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,749:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,750:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:50,750:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,750:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,750:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,750:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:50,757:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,757:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,757:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:50,757:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,757:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,765:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,765:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:16:50,765:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:16:50,789:INFO:Calculating mean and std
2024-05-03 00:16:50,789:INFO:Creating metrics dataframe
2024-05-03 00:16:50,789:INFO:Uploading results into container
2024-05-03 00:16:50,789:INFO:Uploading model into container now
2024-05-03 00:16:50,789:INFO:_master_model_container: 17
2024-05-03 00:16:50,789:INFO:_display_container: 2
2024-05-03 00:16:50,789:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-05-03 00:16:50,789:INFO:create_model() successfully completed......................................
2024-05-03 00:16:50,910:INFO:SubProcess create_model() end ==================================
2024-05-03 00:16:50,910:INFO:Creating metrics dataframe
2024-05-03 00:16:50,910:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-05-03 00:16:50,910:INFO:Initializing create_model()
2024-05-03 00:16:50,910:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EB89CF3280>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:16:50,910:INFO:Checking exceptions
2024-05-03 00:16:50,910:INFO:Importing libraries
2024-05-03 00:16:50,910:INFO:Copying training dataset
2024-05-03 00:16:50,910:INFO:Defining folds
2024-05-03 00:16:50,910:INFO:Declaring metric variables
2024-05-03 00:16:50,910:INFO:Importing untrained model
2024-05-03 00:16:50,910:INFO:Declaring custom model
2024-05-03 00:16:50,910:INFO:Extra Trees Classifier Imported successfully
2024-05-03 00:16:50,910:INFO:Cross validation set to False
2024-05-03 00:16:50,910:INFO:Fitting Model
2024-05-03 00:16:51,103:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-05-03 00:16:51,103:INFO:create_model() successfully completed......................................
2024-05-03 00:16:51,213:INFO:_master_model_container: 17
2024-05-03 00:16:51,213:INFO:_display_container: 2
2024-05-03 00:16:51,213:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-05-03 00:16:51,213:INFO:compare_models() successfully completed......................................
2024-05-03 00:16:51,213:INFO:Initializing evaluate_model()
2024-05-03 00:16:51,213:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EB89CF3280>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-05-03 00:16:51,510:INFO:Initializing plot_model()
2024-05-03 00:16:51,510:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EB89CF3280>, system=True)
2024-05-03 00:16:51,510:INFO:Checking exceptions
2024-05-03 00:16:51,529:INFO:Preloading libraries
2024-05-03 00:16:51,536:INFO:Copying training dataset
2024-05-03 00:16:51,536:INFO:Plot type: pipeline
2024-05-03 00:17:00,353:INFO:Visual Rendered Successfully
2024-05-03 00:17:00,466:INFO:plot_model() successfully completed......................................
2024-05-03 00:17:00,474:INFO:Initializing plot_model()
2024-05-03 00:17:00,474:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EB89CF3280>, system=True)
2024-05-03 00:17:00,474:INFO:Checking exceptions
2024-05-03 00:17:00,499:INFO:Preloading libraries
2024-05-03 00:17:00,507:INFO:Copying training dataset
2024-05-03 00:17:00,507:INFO:Plot type: auc
2024-05-03 00:17:00,620:INFO:Fitting Model
2024-05-03 00:17:00,620:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2024-05-03 00:17:00,620:INFO:Scoring test/hold-out set
2024-05-03 00:18:41,422:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-03 00:18:41,422:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-03 00:18:41,422:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-03 00:18:41,422:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-03 00:18:42,768:INFO:PyCaret ClassificationExperiment
2024-05-03 00:18:42,768:INFO:Logging name: clf-default-name
2024-05-03 00:18:42,768:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-03 00:18:42,768:INFO:version 3.3.2
2024-05-03 00:18:42,768:INFO:Initializing setup()
2024-05-03 00:18:42,768:INFO:self.USI: 069a
2024-05-03 00:18:42,768:INFO:self._variable_keys: {'n_jobs_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'y', 'is_multiclass', 'data', 'USI', 'y_test', 'seed', '_available_plots', 'y_train', 'fold_generator', 'X_train', 'exp_name_log', 'X_test', 'log_plots_param', 'memory', 'X', 'exp_id', 'fix_imbalance', 'logging_param', 'html_param', 'gpu_param', 'idx', 'fold_groups_param', 'target_param', 'pipeline', '_ml_usecase'}
2024-05-03 00:18:42,768:INFO:Checking environment
2024-05-03 00:18:42,768:INFO:python_version: 3.10.11
2024-05-03 00:18:42,768:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-05-03 00:18:42,768:INFO:machine: AMD64
2024-05-03 00:18:42,784:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-03 00:18:42,792:INFO:Memory: svmem(total=8302092288, available=2716975104, percent=67.3, used=5585117184, free=2716975104)
2024-05-03 00:18:42,792:INFO:Physical Core: 12
2024-05-03 00:18:42,792:INFO:Logical Core: 16
2024-05-03 00:18:42,792:INFO:Checking libraries
2024-05-03 00:18:42,792:INFO:System:
2024-05-03 00:18:42,792:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-05-03 00:18:42,792:INFO:executable: C:\Users\seyzu\AppData\Local\Programs\Python\Python310\python.exe
2024-05-03 00:18:42,792:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-03 00:18:42,792:INFO:PyCaret required dependencies:
2024-05-03 00:18:43,562:INFO:                 pip: 24.0
2024-05-03 00:18:43,562:INFO:          setuptools: 65.5.0
2024-05-03 00:18:43,562:INFO:             pycaret: 3.3.2
2024-05-03 00:18:43,562:INFO:             IPython: 8.24.0
2024-05-03 00:18:43,562:INFO:          ipywidgets: 8.1.2
2024-05-03 00:18:43,562:INFO:                tqdm: 4.66.2
2024-05-03 00:18:43,562:INFO:               numpy: 1.26.4
2024-05-03 00:18:43,562:INFO:              pandas: 2.1.4
2024-05-03 00:18:43,562:INFO:              jinja2: 3.1.3
2024-05-03 00:18:43,562:INFO:               scipy: 1.11.4
2024-05-03 00:18:43,562:INFO:              joblib: 1.3.2
2024-05-03 00:18:43,562:INFO:             sklearn: 1.4.2
2024-05-03 00:18:43,562:INFO:                pyod: 1.1.3
2024-05-03 00:18:43,562:INFO:            imblearn: 0.12.2
2024-05-03 00:18:43,562:INFO:   category_encoders: 2.6.3
2024-05-03 00:18:43,562:INFO:            lightgbm: 4.3.0
2024-05-03 00:18:43,562:INFO:               numba: 0.59.1
2024-05-03 00:18:43,562:INFO:            requests: 2.31.0
2024-05-03 00:18:43,562:INFO:          matplotlib: 3.7.5
2024-05-03 00:18:43,562:INFO:          scikitplot: 0.3.7
2024-05-03 00:18:43,562:INFO:         yellowbrick: 1.5
2024-05-03 00:18:43,562:INFO:              plotly: 5.21.0
2024-05-03 00:18:43,562:INFO:    plotly-resampler: Not installed
2024-05-03 00:18:43,562:INFO:             kaleido: 0.2.1
2024-05-03 00:18:43,562:INFO:           schemdraw: 0.15
2024-05-03 00:18:43,562:INFO:         statsmodels: 0.14.2
2024-05-03 00:18:43,562:INFO:              sktime: 0.26.0
2024-05-03 00:18:43,562:INFO:               tbats: 1.1.3
2024-05-03 00:18:43,562:INFO:            pmdarima: 2.0.4
2024-05-03 00:18:43,562:INFO:              psutil: 5.9.8
2024-05-03 00:18:43,562:INFO:          markupsafe: 2.1.5
2024-05-03 00:18:43,562:INFO:             pickle5: Not installed
2024-05-03 00:18:43,562:INFO:         cloudpickle: 3.0.0
2024-05-03 00:18:43,562:INFO:         deprecation: 2.1.0
2024-05-03 00:18:43,562:INFO:              xxhash: 3.4.1
2024-05-03 00:18:43,562:INFO:           wurlitzer: Not installed
2024-05-03 00:18:43,562:INFO:PyCaret optional dependencies:
2024-05-03 00:18:45,204:INFO:                shap: 0.44.1
2024-05-03 00:18:45,204:INFO:           interpret: 0.6.1
2024-05-03 00:18:45,204:INFO:                umap: 0.5.6
2024-05-03 00:18:45,204:INFO:     ydata_profiling: 4.7.0
2024-05-03 00:18:45,204:INFO:  explainerdashboard: 0.4.7
2024-05-03 00:18:45,204:INFO:             autoviz: Not installed
2024-05-03 00:18:45,204:INFO:           fairlearn: 0.7.0
2024-05-03 00:18:45,204:INFO:          deepchecks: Not installed
2024-05-03 00:18:45,204:INFO:             xgboost: 2.0.3
2024-05-03 00:18:45,204:INFO:            catboost: 1.2.5
2024-05-03 00:18:45,204:INFO:              kmodes: 0.12.2
2024-05-03 00:18:45,204:INFO:             mlxtend: 0.23.1
2024-05-03 00:18:45,204:INFO:       statsforecast: 1.5.0
2024-05-03 00:18:45,204:INFO:        tune_sklearn: Not installed
2024-05-03 00:18:45,204:INFO:                 ray: Not installed
2024-05-03 00:18:45,204:INFO:            hyperopt: 0.2.7
2024-05-03 00:18:45,204:INFO:              optuna: 3.6.1
2024-05-03 00:18:45,204:INFO:               skopt: 0.10.1
2024-05-03 00:18:45,204:INFO:              mlflow: 2.12.1
2024-05-03 00:18:45,204:INFO:              gradio: 4.28.3
2024-05-03 00:18:45,204:INFO:             fastapi: 0.110.3
2024-05-03 00:18:45,204:INFO:             uvicorn: 0.29.0
2024-05-03 00:18:45,204:INFO:              m2cgen: 0.10.0
2024-05-03 00:18:45,204:INFO:           evidently: 0.4.19
2024-05-03 00:18:45,204:INFO:               fugue: 0.8.7
2024-05-03 00:18:45,204:INFO:           streamlit: Not installed
2024-05-03 00:18:45,204:INFO:             prophet: Not installed
2024-05-03 00:18:45,204:INFO:None
2024-05-03 00:18:45,204:INFO:Set up data.
2024-05-03 00:18:45,204:INFO:Set up folding strategy.
2024-05-03 00:18:45,204:INFO:Set up train/test split.
2024-05-03 00:18:45,204:INFO:Set up index.
2024-05-03 00:18:45,204:INFO:Assigning column types.
2024-05-03 00:18:45,212:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-03 00:18:45,228:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-03 00:18:45,237:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-03 00:18:45,253:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:18:45,253:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:18:45,301:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-03 00:18:45,301:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-03 00:18:45,310:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:18:45,317:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:18:45,317:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-03 00:18:45,334:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-03 00:18:45,350:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:18:45,350:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:18:45,375:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-03 00:18:45,391:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:18:45,391:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:18:45,391:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-03 00:18:45,431:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:18:45,431:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:18:45,488:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:18:45,488:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:18:45,488:INFO:Preparing preprocessing pipeline...
2024-05-03 00:18:45,488:INFO:Set up label encoding.
2024-05-03 00:18:45,488:INFO:Set up simple imputation.
2024-05-03 00:18:45,504:INFO:Finished creating preprocessing pipeline.
2024-05-03 00:18:45,573:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\seyzu\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Jsc', 'Voc', 'FF', 'Efficiency',
                                             'Sr', 'Sp', 'Temp'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-05-03 00:18:45,573:INFO:Creating final display dataframe.
2024-05-03 00:18:45,622:INFO:Setup _display_container:                     Description                   Value
0                    Session id                     123
1                        Target                   Class
2                   Target type              Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2, 4: 3
4           Original data shape                (182, 8)
5        Transformed data shape                (182, 8)
6   Transformed train set shape                (127, 8)
7    Transformed test set shape                 (55, 8)
8              Numeric features                       7
9                    Preprocess                    True
10              Imputation type                  simple
11           Numeric imputation                    mean
12       Categorical imputation                    mode
13               Fold Generator         StratifiedKFold
14                  Fold Number                      10
15                     CPU Jobs                      -1
16                      Use GPU                   False
17               Log Experiment                   False
18              Experiment Name        clf-default-name
19                          USI                    069a
2024-05-03 00:18:45,672:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:18:45,675:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:18:45,712:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:18:45,712:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:18:45,712:INFO:setup() successfully completed in 2.94s...............
2024-05-03 00:18:45,712:INFO:Initializing compare_models()
2024-05-03 00:18:45,712:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FCE41B3280>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001FCE41B3280>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-05-03 00:18:45,712:INFO:Checking exceptions
2024-05-03 00:18:45,712:INFO:Preparing display monitor
2024-05-03 00:18:45,720:INFO:Initializing Logistic Regression
2024-05-03 00:18:45,720:INFO:Total runtime is 0.0 minutes
2024-05-03 00:18:45,720:INFO:SubProcess create_model() called ==================================
2024-05-03 00:18:45,720:INFO:Initializing create_model()
2024-05-03 00:18:45,720:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FCE41B3280>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FC8B39AF20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:18:45,720:INFO:Checking exceptions
2024-05-03 00:18:45,720:INFO:Importing libraries
2024-05-03 00:18:45,720:INFO:Copying training dataset
2024-05-03 00:18:45,720:INFO:Defining folds
2024-05-03 00:18:45,720:INFO:Declaring metric variables
2024-05-03 00:18:45,720:INFO:Importing untrained model
2024-05-03 00:18:45,720:INFO:Logistic Regression Imported successfully
2024-05-03 00:18:45,720:INFO:Starting cross validation
2024-05-03 00:18:45,720:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:18:50,564:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-03 00:18:50,564:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-03 00:18:50,564:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-03 00:18:50,564:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-03 00:18:50,588:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-03 00:18:50,588:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:50,588:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:50,588:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:50,596:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:50,596:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:50,596:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:50,596:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:50,596:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:50,604:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:50,604:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:50,604:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:50,604:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:50,604:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:50,604:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:50,612:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:50,612:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:50,612:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:50,620:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:50,620:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:50,628:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:50,637:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:50,661:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-03 00:18:50,685:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:50,693:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:50,701:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:50,711:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:50,750:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-03 00:18:50,757:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:50,765:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:50,765:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:50,773:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:50,781:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-03 00:18:50,797:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:50,806:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:50,806:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:50,806:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:50,814:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:50,838:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-03 00:18:50,846:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-03 00:18:50,857:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:50,862:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:50,862:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:50,862:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:50,862:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:50,862:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:50,862:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:50,870:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:50,870:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:50,887:INFO:Calculating mean and std
2024-05-03 00:18:50,889:INFO:Creating metrics dataframe
2024-05-03 00:18:50,894:INFO:Uploading results into container
2024-05-03 00:18:50,894:INFO:Uploading model into container now
2024-05-03 00:18:50,895:INFO:_master_model_container: 1
2024-05-03 00:18:50,895:INFO:_display_container: 2
2024-05-03 00:18:50,895:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-03 00:18:50,895:INFO:create_model() successfully completed......................................
2024-05-03 00:18:51,063:INFO:SubProcess create_model() end ==================================
2024-05-03 00:18:51,071:INFO:Creating metrics dataframe
2024-05-03 00:18:51,071:INFO:Initializing K Neighbors Classifier
2024-05-03 00:18:51,071:INFO:Total runtime is 0.08918482462565104 minutes
2024-05-03 00:18:51,071:INFO:SubProcess create_model() called ==================================
2024-05-03 00:18:51,071:INFO:Initializing create_model()
2024-05-03 00:18:51,071:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FCE41B3280>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FC8B39AF20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:18:51,071:INFO:Checking exceptions
2024-05-03 00:18:51,071:INFO:Importing libraries
2024-05-03 00:18:51,071:INFO:Copying training dataset
2024-05-03 00:18:51,079:INFO:Defining folds
2024-05-03 00:18:51,079:INFO:Declaring metric variables
2024-05-03 00:18:51,079:INFO:Importing untrained model
2024-05-03 00:18:51,079:INFO:K Neighbors Classifier Imported successfully
2024-05-03 00:18:51,079:INFO:Starting cross validation
2024-05-03 00:18:51,079:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:18:51,290:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:51,298:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:51,298:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:51,298:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:51,306:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:51,306:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:51,306:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:51,314:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:51,314:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:51,314:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:51,314:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:51,314:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:51,322:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,161:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,161:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,168:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,169:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,169:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,169:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,297:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,297:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,297:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,305:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,305:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:56,305:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,305:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,329:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,337:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,337:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,393:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,393:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,401:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,418:INFO:Calculating mean and std
2024-05-03 00:18:56,418:INFO:Creating metrics dataframe
2024-05-03 00:18:56,418:INFO:Uploading results into container
2024-05-03 00:18:56,418:INFO:Uploading model into container now
2024-05-03 00:18:56,418:INFO:_master_model_container: 2
2024-05-03 00:18:56,418:INFO:_display_container: 2
2024-05-03 00:18:56,418:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-05-03 00:18:56,418:INFO:create_model() successfully completed......................................
2024-05-03 00:18:56,586:INFO:SubProcess create_model() end ==================================
2024-05-03 00:18:56,586:INFO:Creating metrics dataframe
2024-05-03 00:18:56,586:INFO:Initializing Naive Bayes
2024-05-03 00:18:56,586:INFO:Total runtime is 0.18111146688461305 minutes
2024-05-03 00:18:56,586:INFO:SubProcess create_model() called ==================================
2024-05-03 00:18:56,586:INFO:Initializing create_model()
2024-05-03 00:18:56,586:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FCE41B3280>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FC8B39AF20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:18:56,586:INFO:Checking exceptions
2024-05-03 00:18:56,586:INFO:Importing libraries
2024-05-03 00:18:56,586:INFO:Copying training dataset
2024-05-03 00:18:56,594:INFO:Defining folds
2024-05-03 00:18:56,594:INFO:Declaring metric variables
2024-05-03 00:18:56,594:INFO:Importing untrained model
2024-05-03 00:18:56,594:INFO:Naive Bayes Imported successfully
2024-05-03 00:18:56,594:INFO:Starting cross validation
2024-05-03 00:18:56,594:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:18:56,626:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,626:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,626:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,626:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,626:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,634:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,635:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:56,635:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,635:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,635:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,659:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,661:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,661:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:56,661:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,661:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,661:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,661:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,667:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:56,667:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,668:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,668:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:56,669:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,670:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,671:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,672:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:56,675:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,691:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,691:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,691:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,691:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:56,691:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,691:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:56,691:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,691:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,699:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,700:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,701:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,714:INFO:Calculating mean and std
2024-05-03 00:18:56,715:INFO:Creating metrics dataframe
2024-05-03 00:18:56,716:INFO:Uploading results into container
2024-05-03 00:18:56,716:INFO:Uploading model into container now
2024-05-03 00:18:56,716:INFO:_master_model_container: 3
2024-05-03 00:18:56,716:INFO:_display_container: 2
2024-05-03 00:18:56,716:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-05-03 00:18:56,716:INFO:create_model() successfully completed......................................
2024-05-03 00:18:56,822:INFO:SubProcess create_model() end ==================================
2024-05-03 00:18:56,822:INFO:Creating metrics dataframe
2024-05-03 00:18:56,822:INFO:Initializing Decision Tree Classifier
2024-05-03 00:18:56,822:INFO:Total runtime is 0.1850292444229126 minutes
2024-05-03 00:18:56,822:INFO:SubProcess create_model() called ==================================
2024-05-03 00:18:56,822:INFO:Initializing create_model()
2024-05-03 00:18:56,822:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FCE41B3280>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FC8B39AF20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:18:56,822:INFO:Checking exceptions
2024-05-03 00:18:56,822:INFO:Importing libraries
2024-05-03 00:18:56,822:INFO:Copying training dataset
2024-05-03 00:18:56,822:INFO:Defining folds
2024-05-03 00:18:56,822:INFO:Declaring metric variables
2024-05-03 00:18:56,822:INFO:Importing untrained model
2024-05-03 00:18:56,822:INFO:Decision Tree Classifier Imported successfully
2024-05-03 00:18:56,822:INFO:Starting cross validation
2024-05-03 00:18:56,830:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:18:56,854:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,854:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,854:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,854:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,854:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,854:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,854:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,854:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,854:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,878:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,878:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,878:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,878:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,878:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,886:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,886:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,886:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,892:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,894:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,894:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,894:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,902:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,910:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,911:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,913:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,915:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,915:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,919:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,919:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,919:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:56,935:INFO:Calculating mean and std
2024-05-03 00:18:56,935:INFO:Creating metrics dataframe
2024-05-03 00:18:56,935:INFO:Uploading results into container
2024-05-03 00:18:56,935:INFO:Uploading model into container now
2024-05-03 00:18:56,935:INFO:_master_model_container: 4
2024-05-03 00:18:56,935:INFO:_display_container: 2
2024-05-03 00:18:56,935:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-05-03 00:18:56,935:INFO:create_model() successfully completed......................................
2024-05-03 00:18:57,032:INFO:SubProcess create_model() end ==================================
2024-05-03 00:18:57,032:INFO:Creating metrics dataframe
2024-05-03 00:18:57,032:INFO:Initializing SVM - Linear Kernel
2024-05-03 00:18:57,032:INFO:Total runtime is 0.18853036562601727 minutes
2024-05-03 00:18:57,032:INFO:SubProcess create_model() called ==================================
2024-05-03 00:18:57,032:INFO:Initializing create_model()
2024-05-03 00:18:57,032:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FCE41B3280>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FC8B39AF20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:18:57,032:INFO:Checking exceptions
2024-05-03 00:18:57,032:INFO:Importing libraries
2024-05-03 00:18:57,032:INFO:Copying training dataset
2024-05-03 00:18:57,032:INFO:Defining folds
2024-05-03 00:18:57,032:INFO:Declaring metric variables
2024-05-03 00:18:57,032:INFO:Importing untrained model
2024-05-03 00:18:57,032:INFO:SVM - Linear Kernel Imported successfully
2024-05-03 00:18:57,032:INFO:Starting cross validation
2024-05-03 00:18:57,032:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:18:57,129:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:57,129:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:57,129:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:57,129:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,129:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,129:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,129:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,129:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,129:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:57,129:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,129:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:57,129:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:57,129:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:57,129:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,137:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,137:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,137:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,137:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:57,137:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,142:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,142:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,142:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:57,142:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:57,145:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,145:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,145:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:57,145:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,145:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:57,145:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,145:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:57,145:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,145:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:57,145:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,145:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,153:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,153:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:57,153:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,153:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,153:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:57,153:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,153:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,153:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:57,153:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,161:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,163:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:57,163:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,163:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,163:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,178:INFO:Calculating mean and std
2024-05-03 00:18:57,178:INFO:Creating metrics dataframe
2024-05-03 00:18:57,178:INFO:Uploading results into container
2024-05-03 00:18:57,178:INFO:Uploading model into container now
2024-05-03 00:18:57,178:INFO:_master_model_container: 5
2024-05-03 00:18:57,178:INFO:_display_container: 2
2024-05-03 00:18:57,178:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-05-03 00:18:57,178:INFO:create_model() successfully completed......................................
2024-05-03 00:18:57,283:INFO:SubProcess create_model() end ==================================
2024-05-03 00:18:57,283:INFO:Creating metrics dataframe
2024-05-03 00:18:57,283:INFO:Initializing Ridge Classifier
2024-05-03 00:18:57,283:INFO:Total runtime is 0.19272275368372602 minutes
2024-05-03 00:18:57,283:INFO:SubProcess create_model() called ==================================
2024-05-03 00:18:57,283:INFO:Initializing create_model()
2024-05-03 00:18:57,283:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FCE41B3280>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FC8B39AF20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:18:57,283:INFO:Checking exceptions
2024-05-03 00:18:57,283:INFO:Importing libraries
2024-05-03 00:18:57,283:INFO:Copying training dataset
2024-05-03 00:18:57,283:INFO:Defining folds
2024-05-03 00:18:57,283:INFO:Declaring metric variables
2024-05-03 00:18:57,283:INFO:Importing untrained model
2024-05-03 00:18:57,283:INFO:Ridge Classifier Imported successfully
2024-05-03 00:18:57,283:INFO:Starting cross validation
2024-05-03 00:18:57,283:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:18:57,384:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:57,384:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:57,384:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:57,384:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,384:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,384:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,384:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,384:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,384:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,384:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:57,384:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,384:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:57,384:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,390:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,390:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:57,390:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,390:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,390:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:57,390:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,390:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,390:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,390:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:57,399:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,399:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:57,399:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:57,399:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,399:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,399:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,399:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,399:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:57,399:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,399:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:57,399:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,399:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,407:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,407:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:57,407:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,407:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:57,407:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,407:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,407:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:57,415:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:57,415:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,415:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,415:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,415:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,431:INFO:Calculating mean and std
2024-05-03 00:18:57,432:INFO:Creating metrics dataframe
2024-05-03 00:18:57,432:INFO:Uploading results into container
2024-05-03 00:18:57,432:INFO:Uploading model into container now
2024-05-03 00:18:57,432:INFO:_master_model_container: 6
2024-05-03 00:18:57,432:INFO:_display_container: 2
2024-05-03 00:18:57,432:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-05-03 00:18:57,432:INFO:create_model() successfully completed......................................
2024-05-03 00:18:57,529:INFO:SubProcess create_model() end ==================================
2024-05-03 00:18:57,529:INFO:Creating metrics dataframe
2024-05-03 00:18:57,529:INFO:Initializing Random Forest Classifier
2024-05-03 00:18:57,529:INFO:Total runtime is 0.19682122866312665 minutes
2024-05-03 00:18:57,529:INFO:SubProcess create_model() called ==================================
2024-05-03 00:18:57,529:INFO:Initializing create_model()
2024-05-03 00:18:57,529:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FCE41B3280>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FC8B39AF20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:18:57,529:INFO:Checking exceptions
2024-05-03 00:18:57,529:INFO:Importing libraries
2024-05-03 00:18:57,529:INFO:Copying training dataset
2024-05-03 00:18:57,529:INFO:Defining folds
2024-05-03 00:18:57,529:INFO:Declaring metric variables
2024-05-03 00:18:57,529:INFO:Importing untrained model
2024-05-03 00:18:57,529:INFO:Random Forest Classifier Imported successfully
2024-05-03 00:18:57,529:INFO:Starting cross validation
2024-05-03 00:18:57,529:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:18:57,933:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,933:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,941:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,949:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,949:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,958:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,964:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,966:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,966:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,966:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,966:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,974:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,974:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,974:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,982:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,990:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,990:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,998:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:57,998:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,006:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:58,006:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,110:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,110:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,110:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,110:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,118:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,118:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,127:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,127:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,135:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,151:INFO:Calculating mean and std
2024-05-03 00:18:58,151:INFO:Creating metrics dataframe
2024-05-03 00:18:58,151:INFO:Uploading results into container
2024-05-03 00:18:58,151:INFO:Uploading model into container now
2024-05-03 00:18:58,151:INFO:_master_model_container: 7
2024-05-03 00:18:58,151:INFO:_display_container: 2
2024-05-03 00:18:58,151:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-05-03 00:18:58,151:INFO:create_model() successfully completed......................................
2024-05-03 00:18:58,281:INFO:SubProcess create_model() end ==================================
2024-05-03 00:18:58,281:INFO:Creating metrics dataframe
2024-05-03 00:18:58,281:INFO:Initializing Quadratic Discriminant Analysis
2024-05-03 00:18:58,281:INFO:Total runtime is 0.20934620698293052 minutes
2024-05-03 00:18:58,281:INFO:SubProcess create_model() called ==================================
2024-05-03 00:18:58,281:INFO:Initializing create_model()
2024-05-03 00:18:58,281:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FCE41B3280>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FC8B39AF20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:18:58,281:INFO:Checking exceptions
2024-05-03 00:18:58,281:INFO:Importing libraries
2024-05-03 00:18:58,281:INFO:Copying training dataset
2024-05-03 00:18:58,289:INFO:Defining folds
2024-05-03 00:18:58,289:INFO:Declaring metric variables
2024-05-03 00:18:58,289:INFO:Importing untrained model
2024-05-03 00:18:58,289:INFO:Quadratic Discriminant Analysis Imported successfully
2024-05-03 00:18:58,289:INFO:Starting cross validation
2024-05-03 00:18:58,289:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:18:58,313:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-03 00:18:58,321:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,321:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,321:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:18:58,321:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,321:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,321:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:18:58,321:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-03 00:18:58,321:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-05-03 00:18:58,321:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,329:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,329:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,329:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,329:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:18:58,329:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:58,329:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,329:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,329:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,329:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:18:58,329:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-05-03 00:18:58,329:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,337:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,337:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-03 00:18:58,337:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:58,337:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,345:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,345:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,345:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:18:58,345:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,345:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,345:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:18:58,345:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-05-03 00:18:58,345:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,353:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,353:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:58,353:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-03 00:18:58,353:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,353:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-03 00:18:58,353:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,353:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,353:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:18:58,361:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,361:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,361:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:18:58,361:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,361:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,361:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:18:58,361:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-05-03 00:18:58,365:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,365:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,365:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,365:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:18:58,365:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,365:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-05-03 00:18:58,365:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:58,369:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,369:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,369:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,369:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:58,369:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-03 00:18:58,369:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,377:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,377:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,377:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:18:58,379:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,379:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,379:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:18:58,379:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-05-03 00:18:58,379:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,385:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,385:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:58,385:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-03 00:18:58,385:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,385:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-03 00:18:58,385:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,385:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,385:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:18:58,385:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-03 00:18:58,393:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,393:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,393:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:18:58,393:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-05-03 00:18:58,393:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,393:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,393:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:18:58,393:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,393:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,393:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:18:58,393:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,393:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-03 00:18:58,393:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,393:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,393:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:18:58,393:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,393:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,393:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:18:58,393:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,401:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-05-03 00:18:58,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:58,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-05-03 00:18:58,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:18:58,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-05-03 00:18:58,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-05-03 00:18:58,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:58,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-05-03 00:18:58,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,402:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,410:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:58,412:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,412:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,413:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:58,414:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,426:INFO:Calculating mean and std
2024-05-03 00:18:58,427:INFO:Creating metrics dataframe
2024-05-03 00:18:58,430:INFO:Uploading results into container
2024-05-03 00:18:58,430:INFO:Uploading model into container now
2024-05-03 00:18:58,430:INFO:_master_model_container: 8
2024-05-03 00:18:58,431:INFO:_display_container: 2
2024-05-03 00:18:58,431:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-05-03 00:18:58,431:INFO:create_model() successfully completed......................................
2024-05-03 00:18:58,532:INFO:SubProcess create_model() end ==================================
2024-05-03 00:18:58,532:INFO:Creating metrics dataframe
2024-05-03 00:18:58,532:INFO:Initializing Ada Boost Classifier
2024-05-03 00:18:58,532:INFO:Total runtime is 0.2135321656862895 minutes
2024-05-03 00:18:58,532:INFO:SubProcess create_model() called ==================================
2024-05-03 00:18:58,532:INFO:Initializing create_model()
2024-05-03 00:18:58,532:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FCE41B3280>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FC8B39AF20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:18:58,532:INFO:Checking exceptions
2024-05-03 00:18:58,532:INFO:Importing libraries
2024-05-03 00:18:58,532:INFO:Copying training dataset
2024-05-03 00:18:58,540:INFO:Defining folds
2024-05-03 00:18:58,540:INFO:Declaring metric variables
2024-05-03 00:18:58,540:INFO:Importing untrained model
2024-05-03 00:18:58,540:INFO:Ada Boost Classifier Imported successfully
2024-05-03 00:18:58,540:INFO:Starting cross validation
2024-05-03 00:18:58,540:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:18:58,556:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-03 00:18:58,556:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-03 00:18:58,556:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-03 00:18:58,565:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-03 00:18:58,589:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-03 00:18:58,605:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-03 00:18:58,605:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-03 00:18:58,614:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-03 00:18:58,622:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-03 00:18:58,638:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-03 00:18:58,701:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:58,701:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,708:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,710:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:58,726:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,726:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:58,734:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,734:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,734:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:58,743:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,743:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:58,743:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:58,743:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,743:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,750:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,750:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,750:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:58,750:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,750:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,750:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,758:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,758:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,775:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:58,783:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,783:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:58,783:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

ead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:58,783:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,783:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,783:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,791:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,791:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:58,791:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,791:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,791:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:58,791:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,799:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:58,799:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,809:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,809:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:58,809:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,809:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:58,815:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,815:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,815:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:58,815:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:58,839:INFO:Calculating mean and std
2024-05-03 00:18:58,839:INFO:Creating metrics dataframe
2024-05-03 00:18:58,839:INFO:Uploading results into container
2024-05-03 00:18:58,839:INFO:Uploading model into container now
2024-05-03 00:18:58,839:INFO:_master_model_container: 9
2024-05-03 00:18:58,839:INFO:_display_container: 2
2024-05-03 00:18:58,839:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-05-03 00:18:58,839:INFO:create_model() successfully completed......................................
2024-05-03 00:18:58,943:INFO:SubProcess create_model() end ==================================
2024-05-03 00:18:58,943:INFO:Creating metrics dataframe
2024-05-03 00:18:58,952:INFO:Initializing Gradient Boosting Classifier
2024-05-03 00:18:58,952:INFO:Total runtime is 0.2205313841501872 minutes
2024-05-03 00:18:58,952:INFO:SubProcess create_model() called ==================================
2024-05-03 00:18:58,952:INFO:Initializing create_model()
2024-05-03 00:18:58,952:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FCE41B3280>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FC8B39AF20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:18:58,952:INFO:Checking exceptions
2024-05-03 00:18:58,952:INFO:Importing libraries
2024-05-03 00:18:58,952:INFO:Copying training dataset
2024-05-03 00:18:58,952:INFO:Defining folds
2024-05-03 00:18:58,952:INFO:Declaring metric variables
2024-05-03 00:18:58,952:INFO:Importing untrained model
2024-05-03 00:18:58,952:INFO:Gradient Boosting Classifier Imported successfully
2024-05-03 00:18:58,952:INFO:Starting cross validation
2024-05-03 00:18:58,952:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:18:59,666:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:59,672:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:59,680:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:59,680:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:59,753:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:59,753:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:59,753:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:59,761:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:59,761:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:59,761:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:59,761:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:59,761:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:59,766:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:59,770:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:59,770:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:59,778:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:59,867:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:59,867:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:59,874:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:59,874:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:59,898:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:59,898:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:59,906:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:59,906:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:59,922:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:59,930:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:59,930:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:59,930:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:59,930:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:59,930:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:59,930:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:59,938:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:59,938:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:59,938:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:59,938:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:59,938:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:18:59,946:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:59,963:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:18:59,963:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:59,967:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:59,971:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:18:59,979:INFO:Calculating mean and std
2024-05-03 00:18:59,979:INFO:Creating metrics dataframe
2024-05-03 00:18:59,979:INFO:Uploading results into container
2024-05-03 00:18:59,979:INFO:Uploading model into container now
2024-05-03 00:18:59,979:INFO:_master_model_container: 10
2024-05-03 00:18:59,979:INFO:_display_container: 2
2024-05-03 00:18:59,979:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-03 00:18:59,979:INFO:create_model() successfully completed......................................
2024-05-03 00:19:00,101:INFO:SubProcess create_model() end ==================================
2024-05-03 00:19:00,101:INFO:Creating metrics dataframe
2024-05-03 00:19:00,101:INFO:Initializing Linear Discriminant Analysis
2024-05-03 00:19:00,101:INFO:Total runtime is 0.23967999219894412 minutes
2024-05-03 00:19:00,101:INFO:SubProcess create_model() called ==================================
2024-05-03 00:19:00,101:INFO:Initializing create_model()
2024-05-03 00:19:00,101:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FCE41B3280>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FC8B39AF20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:19:00,101:INFO:Checking exceptions
2024-05-03 00:19:00,101:INFO:Importing libraries
2024-05-03 00:19:00,101:INFO:Copying training dataset
2024-05-03 00:19:00,101:INFO:Defining folds
2024-05-03 00:19:00,109:INFO:Declaring metric variables
2024-05-03 00:19:00,109:INFO:Importing untrained model
2024-05-03 00:19:00,109:INFO:Linear Discriminant Analysis Imported successfully
2024-05-03 00:19:00,109:INFO:Starting cross validation
2024-05-03 00:19:00,109:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:19:00,167:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:19:00,167:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:19:00,167:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,167:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,173:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,173:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,173:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:19:00,173:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:19:00,173:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,173:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,173:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,173:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,173:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,181:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:19:00,181:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,181:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,181:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,181:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:19:00,181:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:19:00,189:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,189:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,189:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,189:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,189:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:19:00,189:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,189:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,189:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,189:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,198:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,200:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:19:00,200:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,200:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,206:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,207:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:19:00,207:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,207:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:19:00,207:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,212:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,214:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,214:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,214:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:19:00,214:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,222:INFO:Calculating mean and std
2024-05-03 00:19:00,222:INFO:Creating metrics dataframe
2024-05-03 00:19:00,222:INFO:Uploading results into container
2024-05-03 00:19:00,222:INFO:Uploading model into container now
2024-05-03 00:19:00,222:INFO:_master_model_container: 11
2024-05-03 00:19:00,222:INFO:_display_container: 2
2024-05-03 00:19:00,222:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-05-03 00:19:00,222:INFO:create_model() successfully completed......................................
2024-05-03 00:19:00,327:INFO:SubProcess create_model() end ==================================
2024-05-03 00:19:00,327:INFO:Creating metrics dataframe
2024-05-03 00:19:00,327:INFO:Initializing Extra Trees Classifier
2024-05-03 00:19:00,327:INFO:Total runtime is 0.24346047242482505 minutes
2024-05-03 00:19:00,327:INFO:SubProcess create_model() called ==================================
2024-05-03 00:19:00,327:INFO:Initializing create_model()
2024-05-03 00:19:00,327:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FCE41B3280>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FC8B39AF20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:19:00,327:INFO:Checking exceptions
2024-05-03 00:19:00,327:INFO:Importing libraries
2024-05-03 00:19:00,327:INFO:Copying training dataset
2024-05-03 00:19:00,336:INFO:Defining folds
2024-05-03 00:19:00,336:INFO:Declaring metric variables
2024-05-03 00:19:00,336:INFO:Importing untrained model
2024-05-03 00:19:00,336:INFO:Extra Trees Classifier Imported successfully
2024-05-03 00:19:00,336:INFO:Starting cross validation
2024-05-03 00:19:00,336:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:19:00,668:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,668:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,668:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,668:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,675:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,675:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,675:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,675:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,683:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,691:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,691:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,703:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,704:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,706:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,707:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,707:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,715:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,723:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,768:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,772:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,772:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,804:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,804:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,804:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,804:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,804:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,804:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,813:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,813:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,813:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:00,829:INFO:Calculating mean and std
2024-05-03 00:19:00,829:INFO:Creating metrics dataframe
2024-05-03 00:19:00,829:INFO:Uploading results into container
2024-05-03 00:19:00,829:INFO:Uploading model into container now
2024-05-03 00:19:00,829:INFO:_master_model_container: 12
2024-05-03 00:19:00,829:INFO:_display_container: 2
2024-05-03 00:19:00,829:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-05-03 00:19:00,829:INFO:create_model() successfully completed......................................
2024-05-03 00:19:00,968:INFO:SubProcess create_model() end ==================================
2024-05-03 00:19:00,968:INFO:Creating metrics dataframe
2024-05-03 00:19:00,974:INFO:Initializing Extreme Gradient Boosting
2024-05-03 00:19:00,974:INFO:Total runtime is 0.25423550605773926 minutes
2024-05-03 00:19:00,974:INFO:SubProcess create_model() called ==================================
2024-05-03 00:19:00,974:INFO:Initializing create_model()
2024-05-03 00:19:00,974:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FCE41B3280>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FC8B39AF20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:19:00,974:INFO:Checking exceptions
2024-05-03 00:19:00,974:INFO:Importing libraries
2024-05-03 00:19:00,974:INFO:Copying training dataset
2024-05-03 00:19:00,974:INFO:Defining folds
2024-05-03 00:19:00,974:INFO:Declaring metric variables
2024-05-03 00:19:00,974:INFO:Importing untrained model
2024-05-03 00:19:00,974:INFO:Extreme Gradient Boosting Imported successfully
2024-05-03 00:19:00,974:INFO:Starting cross validation
2024-05-03 00:19:00,982:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:19:01,215:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:01,215:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:01,215:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:19:01,215:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:01,228:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:01,232:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:01,232:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:01,240:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:01,248:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:01,248:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:01,248:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:01,248:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:01,248:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:01,256:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:01,256:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:01,256:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:01,256:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:01,264:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:01,264:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:01,264:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:01,264:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:01,264:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:01,268:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:01,268:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:01,272:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:01,272:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:01,272:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:01,272:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:01,272:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:01,272:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:01,280:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:01,297:INFO:Calculating mean and std
2024-05-03 00:19:01,297:INFO:Creating metrics dataframe
2024-05-03 00:19:01,297:INFO:Uploading results into container
2024-05-03 00:19:01,297:INFO:Uploading model into container now
2024-05-03 00:19:01,297:INFO:_master_model_container: 13
2024-05-03 00:19:01,297:INFO:_display_container: 2
2024-05-03 00:19:01,297:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-05-03 00:19:01,297:INFO:create_model() successfully completed......................................
2024-05-03 00:19:01,419:INFO:SubProcess create_model() end ==================================
2024-05-03 00:19:01,419:INFO:Creating metrics dataframe
2024-05-03 00:19:01,428:INFO:Initializing Light Gradient Boosting Machine
2024-05-03 00:19:01,428:INFO:Total runtime is 0.261797026793162 minutes
2024-05-03 00:19:01,428:INFO:SubProcess create_model() called ==================================
2024-05-03 00:19:01,428:INFO:Initializing create_model()
2024-05-03 00:19:01,428:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FCE41B3280>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FC8B39AF20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:19:01,428:INFO:Checking exceptions
2024-05-03 00:19:01,428:INFO:Importing libraries
2024-05-03 00:19:01,428:INFO:Copying training dataset
2024-05-03 00:19:01,428:INFO:Defining folds
2024-05-03 00:19:01,428:INFO:Declaring metric variables
2024-05-03 00:19:01,428:INFO:Importing untrained model
2024-05-03 00:19:01,428:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-03 00:19:01,428:INFO:Starting cross validation
2024-05-03 00:19:01,428:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:19:03,831:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:03,835:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:03,840:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:03,965:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:03,972:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:03,977:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:03,991:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:03,996:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:04,002:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:04,377:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:04,384:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:04,385:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:04,451:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:04,460:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:04,468:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:04,475:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:04,476:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:04,484:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:04,492:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:04,499:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:04,502:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:04,531:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:04,534:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:04,534:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:04,534:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:04,542:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:04,542:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:04,553:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:04,553:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:04,561:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:04,578:INFO:Calculating mean and std
2024-05-03 00:19:04,579:INFO:Creating metrics dataframe
2024-05-03 00:19:04,582:INFO:Uploading results into container
2024-05-03 00:19:04,583:INFO:Uploading model into container now
2024-05-03 00:19:04,583:INFO:_master_model_container: 14
2024-05-03 00:19:04,583:INFO:_display_container: 2
2024-05-03 00:19:04,584:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-05-03 00:19:04,584:INFO:create_model() successfully completed......................................
2024-05-03 00:19:04,732:INFO:SubProcess create_model() end ==================================
2024-05-03 00:19:04,732:INFO:Creating metrics dataframe
2024-05-03 00:19:04,732:INFO:Initializing CatBoost Classifier
2024-05-03 00:19:04,732:INFO:Total runtime is 0.31686882575352987 minutes
2024-05-03 00:19:04,732:INFO:SubProcess create_model() called ==================================
2024-05-03 00:19:04,739:INFO:Initializing create_model()
2024-05-03 00:19:04,740:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FCE41B3280>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FC8B39AF20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:19:04,740:INFO:Checking exceptions
2024-05-03 00:19:04,740:INFO:Importing libraries
2024-05-03 00:19:04,740:INFO:Copying training dataset
2024-05-03 00:19:04,740:INFO:Defining folds
2024-05-03 00:19:04,740:INFO:Declaring metric variables
2024-05-03 00:19:04,740:INFO:Importing untrained model
2024-05-03 00:19:04,740:INFO:CatBoost Classifier Imported successfully
2024-05-03 00:19:04,740:INFO:Starting cross validation
2024-05-03 00:19:04,740:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:19:14,934:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:14,934:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:14,934:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:14,934:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:14,934:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:14,942:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:14,942:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:14,942:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:14,942:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:14,942:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:14,942:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:14,942:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:14,942:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:14,942:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:14,942:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:14,942:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:14,958:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:14,958:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:14,966:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:14,966:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:14,982:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:14,991:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:14,999:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:15,015:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:15,015:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:15,023:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:15,040:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:15,045:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:15,048:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:15,072:INFO:Calculating mean and std
2024-05-03 00:19:15,072:INFO:Creating metrics dataframe
2024-05-03 00:19:15,072:INFO:Uploading results into container
2024-05-03 00:19:15,072:INFO:Uploading model into container now
2024-05-03 00:19:15,072:INFO:_master_model_container: 15
2024-05-03 00:19:15,072:INFO:_display_container: 2
2024-05-03 00:19:15,072:INFO:<catboost.core.CatBoostClassifier object at 0x000001FC8BA70370>
2024-05-03 00:19:15,072:INFO:create_model() successfully completed......................................
2024-05-03 00:19:15,217:INFO:SubProcess create_model() end ==================================
2024-05-03 00:19:15,217:INFO:Creating metrics dataframe
2024-05-03 00:19:15,217:INFO:Initializing Dummy Classifier
2024-05-03 00:19:15,217:INFO:Total runtime is 0.49162890513738 minutes
2024-05-03 00:19:15,217:INFO:SubProcess create_model() called ==================================
2024-05-03 00:19:15,217:INFO:Initializing create_model()
2024-05-03 00:19:15,225:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FCE41B3280>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FC8B39AF20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:19:15,226:INFO:Checking exceptions
2024-05-03 00:19:15,226:INFO:Importing libraries
2024-05-03 00:19:15,226:INFO:Copying training dataset
2024-05-03 00:19:15,226:INFO:Defining folds
2024-05-03 00:19:15,226:INFO:Declaring metric variables
2024-05-03 00:19:15,226:INFO:Importing untrained model
2024-05-03 00:19:15,226:INFO:Dummy Classifier Imported successfully
2024-05-03 00:19:15,226:INFO:Starting cross validation
2024-05-03 00:19:15,226:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:19:15,266:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:15,266:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:15,274:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:15,274:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:19:15,274:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:15,274:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:15,274:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:15,274:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:15,274:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:15,274:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:19:15,274:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:19:15,282:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:15,282:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:15,283:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:15,283:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:19:15,306:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:15,311:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:15,315:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:19:15,315:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:15,315:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:15,315:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:15,315:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:15,315:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:15,315:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:15,323:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:15,323:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:19:15,323:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:19:15,323:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:15,323:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:15,323:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:15,323:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:19:15,323:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:15,331:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:15,331:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:15,331:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:15,331:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:19:15,339:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:15,339:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:15,339:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:19:15,339:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:15,355:INFO:Calculating mean and std
2024-05-03 00:19:15,355:INFO:Creating metrics dataframe
2024-05-03 00:19:15,355:INFO:Uploading results into container
2024-05-03 00:19:15,355:INFO:Uploading model into container now
2024-05-03 00:19:15,355:INFO:_master_model_container: 16
2024-05-03 00:19:15,355:INFO:_display_container: 2
2024-05-03 00:19:15,355:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-05-03 00:19:15,355:INFO:create_model() successfully completed......................................
2024-05-03 00:19:15,485:INFO:SubProcess create_model() end ==================================
2024-05-03 00:19:15,485:INFO:Creating metrics dataframe
2024-05-03 00:19:15,485:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-05-03 00:19:15,493:INFO:Initializing create_model()
2024-05-03 00:19:15,493:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FCE41B3280>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:19:15,493:INFO:Checking exceptions
2024-05-03 00:19:15,493:INFO:Importing libraries
2024-05-03 00:19:15,493:INFO:Copying training dataset
2024-05-03 00:19:15,493:INFO:Defining folds
2024-05-03 00:19:15,493:INFO:Declaring metric variables
2024-05-03 00:19:15,493:INFO:Importing untrained model
2024-05-03 00:19:15,493:INFO:Declaring custom model
2024-05-03 00:19:15,493:INFO:Extra Trees Classifier Imported successfully
2024-05-03 00:19:15,493:INFO:Cross validation set to False
2024-05-03 00:19:15,501:INFO:Fitting Model
2024-05-03 00:19:15,679:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-05-03 00:19:15,679:INFO:create_model() successfully completed......................................
2024-05-03 00:19:15,805:INFO:_master_model_container: 16
2024-05-03 00:19:15,808:INFO:_display_container: 2
2024-05-03 00:19:15,809:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-05-03 00:19:15,809:INFO:compare_models() successfully completed......................................
2024-05-03 00:19:15,811:INFO:Initializing evaluate_model()
2024-05-03 00:19:15,811:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FCE41B3280>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-05-03 00:19:16,067:INFO:Initializing plot_model()
2024-05-03 00:19:16,067:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FCE41B3280>, system=True)
2024-05-03 00:19:16,067:INFO:Checking exceptions
2024-05-03 00:19:16,102:INFO:Preloading libraries
2024-05-03 00:19:16,112:INFO:Copying training dataset
2024-05-03 00:19:16,112:INFO:Plot type: pipeline
2024-05-03 00:19:21,326:INFO:Visual Rendered Successfully
2024-05-03 00:19:21,461:INFO:plot_model() successfully completed......................................
2024-05-03 00:19:21,461:INFO:Initializing plot_model()
2024-05-03 00:19:21,461:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FCE41B3280>, system=True)
2024-05-03 00:19:21,461:INFO:Checking exceptions
2024-05-03 00:19:21,488:INFO:Preloading libraries
2024-05-03 00:19:21,494:INFO:Copying training dataset
2024-05-03 00:19:21,494:INFO:Plot type: auc
2024-05-03 00:19:21,608:INFO:Fitting Model
2024-05-03 00:19:21,608:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2024-05-03 00:19:21,616:INFO:Scoring test/hold-out set
2024-05-03 00:19:23,198:INFO:Visual Rendered Successfully
2024-05-03 00:19:23,304:INFO:plot_model() successfully completed......................................
2024-05-03 00:19:23,304:INFO:Initializing plot_model()
2024-05-03 00:19:23,304:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FCE41B3280>, system=True)
2024-05-03 00:19:23,304:INFO:Checking exceptions
2024-05-03 00:19:23,344:INFO:Preloading libraries
2024-05-03 00:19:23,352:INFO:Copying training dataset
2024-05-03 00:19:23,352:INFO:Plot type: confusion_matrix
2024-05-03 00:19:23,465:INFO:Fitting Model
2024-05-03 00:19:23,465:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2024-05-03 00:19:23,465:INFO:Scoring test/hold-out set
2024-05-03 00:19:25,664:INFO:Visual Rendered Successfully
2024-05-03 00:19:25,787:INFO:plot_model() successfully completed......................................
2024-05-03 00:19:25,787:INFO:Initializing plot_model()
2024-05-03 00:19:25,787:INFO:plot_model(plot=class_report, fold=None, verbose=True, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FCE41B3280>, system=True)
2024-05-03 00:19:25,787:INFO:Checking exceptions
2024-05-03 00:19:25,818:INFO:Preloading libraries
2024-05-03 00:19:25,826:INFO:Copying training dataset
2024-05-03 00:19:25,826:INFO:Plot type: class_report
2024-05-03 00:19:25,939:INFO:Fitting Model
2024-05-03 00:19:25,939:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2024-05-03 00:19:25,939:INFO:Scoring test/hold-out set
2024-05-03 00:19:27,300:INFO:Visual Rendered Successfully
2024-05-03 00:19:27,423:INFO:plot_model() successfully completed......................................
2024-05-03 00:19:27,423:INFO:Initializing predict_model()
2024-05-03 00:19:27,423:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FCE41B3280>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FC8BE25F30>)
2024-05-03 00:19:27,423:INFO:Checking exceptions
2024-05-03 00:19:27,423:INFO:Preloading libraries
2024-05-03 00:19:27,496:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:27,504:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:27,504:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:27,618:INFO:Initializing predict_model()
2024-05-03 00:19:27,618:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FCE41B3280>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FC8BE25F30>)
2024-05-03 00:19:27,618:INFO:Checking exceptions
2024-05-03 00:19:27,618:INFO:Preloading libraries
2024-05-03 00:19:27,618:INFO:Set up data.
2024-05-03 00:19:27,618:INFO:Set up index.
2024-05-03 00:19:27,699:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:27,708:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:27,708:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:27,813:INFO:Initializing predict_model()
2024-05-03 00:19:27,813:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FCE41B3280>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FC8BE25F30>)
2024-05-03 00:19:27,813:INFO:Checking exceptions
2024-05-03 00:19:27,813:INFO:Preloading libraries
2024-05-03 00:19:27,813:INFO:Set up data.
2024-05-03 00:19:27,813:INFO:Set up index.
2024-05-03 00:19:27,897:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:27,910:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:27,910:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:19:28,080:INFO:Initializing save_model()
2024-05-03 00:19:28,080:INFO:save_model(model=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), model_name=my_best_pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\seyzu\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Jsc', 'Voc', 'FF', 'Efficiency',
                                             'Sr', 'Sp', 'Temp'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-05-03 00:19:28,080:INFO:Adding model into prep_pipe
2024-05-03 00:19:28,105:INFO:my_best_pipeline.pkl saved in current working directory
2024-05-03 00:19:28,113:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Jsc', 'Voc', 'FF', 'Efficiency',
                                             'Sr', 'Sp', 'Temp'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2024-05-03 00:19:28,113:INFO:save_model() successfully completed......................................
2024-05-03 00:19:28,205:INFO:Initializing load_model()
2024-05-03 00:19:28,205:INFO:load_model(model_name=my_best_pipeline, platform=None, authentication=None, verbose=True)
2024-05-03 00:19:40,325:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-03 00:19:40,325:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-03 00:19:40,325:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-03 00:19:40,325:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-03 00:19:40,497:INFO:PyCaret RegressionExperiment
2024-05-03 00:19:40,497:INFO:Logging name: reg-default-name
2024-05-03 00:19:40,497:INFO:ML Usecase: MLUsecase.REGRESSION
2024-05-03 00:19:40,497:INFO:version 3.3.2
2024-05-03 00:19:40,497:INFO:Initializing setup()
2024-05-03 00:19:40,497:INFO:self.USI: b5d6
2024-05-03 00:19:40,497:INFO:self._variable_keys: {'seed', 'X_test', 'fold_shuffle_param', 'gpu_n_jobs_param', 'X_train', 'log_plots_param', 'pipeline', 'fold_groups_param', 'fold_generator', 'idx', '_ml_usecase', 'n_jobs_param', 'logging_param', '_available_plots', 'y', 'y_test', 'USI', 'html_param', 'gpu_param', 'target_param', 'y_train', 'exp_name_log', 'X', 'exp_id', 'memory', 'transform_target_param', 'data'}
2024-05-03 00:19:40,497:INFO:Checking environment
2024-05-03 00:19:40,497:INFO:python_version: 3.10.11
2024-05-03 00:19:40,497:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-05-03 00:19:40,497:INFO:machine: AMD64
2024-05-03 00:19:40,512:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-03 00:19:40,522:INFO:Memory: svmem(total=8302092288, available=2734571520, percent=67.1, used=5567520768, free=2734571520)
2024-05-03 00:19:40,522:INFO:Physical Core: 12
2024-05-03 00:19:40,522:INFO:Logical Core: 16
2024-05-03 00:19:40,522:INFO:Checking libraries
2024-05-03 00:19:40,522:INFO:System:
2024-05-03 00:19:40,522:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-05-03 00:19:40,526:INFO:executable: C:\Users\seyzu\AppData\Local\Programs\Python\Python310\python.exe
2024-05-03 00:19:40,526:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-03 00:19:40,526:INFO:PyCaret required dependencies:
2024-05-03 00:19:41,586:INFO:                 pip: 24.0
2024-05-03 00:19:41,586:INFO:          setuptools: 65.5.0
2024-05-03 00:19:41,586:INFO:             pycaret: 3.3.2
2024-05-03 00:19:41,586:INFO:             IPython: 8.24.0
2024-05-03 00:19:41,586:INFO:          ipywidgets: 8.1.2
2024-05-03 00:19:41,586:INFO:                tqdm: 4.66.2
2024-05-03 00:19:41,586:INFO:               numpy: 1.26.4
2024-05-03 00:19:41,586:INFO:              pandas: 2.1.4
2024-05-03 00:19:41,586:INFO:              jinja2: 3.1.3
2024-05-03 00:19:41,586:INFO:               scipy: 1.11.4
2024-05-03 00:19:41,586:INFO:              joblib: 1.3.2
2024-05-03 00:19:41,586:INFO:             sklearn: 1.4.2
2024-05-03 00:19:41,586:INFO:                pyod: 1.1.3
2024-05-03 00:19:41,586:INFO:            imblearn: 0.12.2
2024-05-03 00:19:41,586:INFO:   category_encoders: 2.6.3
2024-05-03 00:19:41,586:INFO:            lightgbm: 4.3.0
2024-05-03 00:19:41,586:INFO:               numba: 0.59.1
2024-05-03 00:19:41,586:INFO:            requests: 2.31.0
2024-05-03 00:19:41,586:INFO:          matplotlib: 3.7.5
2024-05-03 00:19:41,586:INFO:          scikitplot: 0.3.7
2024-05-03 00:19:41,586:INFO:         yellowbrick: 1.5
2024-05-03 00:19:41,586:INFO:              plotly: 5.21.0
2024-05-03 00:19:41,586:INFO:    plotly-resampler: Not installed
2024-05-03 00:19:41,586:INFO:             kaleido: 0.2.1
2024-05-03 00:19:41,586:INFO:           schemdraw: 0.15
2024-05-03 00:19:41,586:INFO:         statsmodels: 0.14.2
2024-05-03 00:19:41,586:INFO:              sktime: 0.26.0
2024-05-03 00:19:41,586:INFO:               tbats: 1.1.3
2024-05-03 00:19:41,586:INFO:            pmdarima: 2.0.4
2024-05-03 00:19:41,586:INFO:              psutil: 5.9.8
2024-05-03 00:19:41,586:INFO:          markupsafe: 2.1.5
2024-05-03 00:19:41,586:INFO:             pickle5: Not installed
2024-05-03 00:19:41,586:INFO:         cloudpickle: 3.0.0
2024-05-03 00:19:41,586:INFO:         deprecation: 2.1.0
2024-05-03 00:19:41,586:INFO:              xxhash: 3.4.1
2024-05-03 00:19:41,586:INFO:           wurlitzer: Not installed
2024-05-03 00:19:41,586:INFO:PyCaret optional dependencies:
2024-05-03 00:19:43,814:INFO:                shap: 0.44.1
2024-05-03 00:19:43,814:INFO:           interpret: 0.6.1
2024-05-03 00:19:43,814:INFO:                umap: 0.5.6
2024-05-03 00:19:43,814:INFO:     ydata_profiling: 4.7.0
2024-05-03 00:19:43,814:INFO:  explainerdashboard: 0.4.7
2024-05-03 00:19:43,814:INFO:             autoviz: Not installed
2024-05-03 00:19:43,814:INFO:           fairlearn: 0.7.0
2024-05-03 00:19:43,814:INFO:          deepchecks: Not installed
2024-05-03 00:19:43,814:INFO:             xgboost: 2.0.3
2024-05-03 00:19:43,814:INFO:            catboost: 1.2.5
2024-05-03 00:19:43,814:INFO:              kmodes: 0.12.2
2024-05-03 00:19:43,814:INFO:             mlxtend: 0.23.1
2024-05-03 00:19:43,814:INFO:       statsforecast: 1.5.0
2024-05-03 00:19:43,814:INFO:        tune_sklearn: Not installed
2024-05-03 00:19:43,814:INFO:                 ray: Not installed
2024-05-03 00:19:43,814:INFO:            hyperopt: 0.2.7
2024-05-03 00:19:43,814:INFO:              optuna: 3.6.1
2024-05-03 00:19:43,814:INFO:               skopt: 0.10.1
2024-05-03 00:19:43,814:INFO:              mlflow: 2.12.1
2024-05-03 00:19:43,814:INFO:              gradio: 4.28.3
2024-05-03 00:19:43,814:INFO:             fastapi: 0.110.3
2024-05-03 00:19:43,814:INFO:             uvicorn: 0.29.0
2024-05-03 00:19:43,814:INFO:              m2cgen: 0.10.0
2024-05-03 00:19:43,814:INFO:           evidently: 0.4.19
2024-05-03 00:19:43,814:INFO:               fugue: 0.8.7
2024-05-03 00:19:43,814:INFO:           streamlit: Not installed
2024-05-03 00:19:43,814:INFO:             prophet: Not installed
2024-05-03 00:19:43,814:INFO:None
2024-05-03 00:19:43,814:INFO:Set up data.
2024-05-03 00:20:11,263:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-03 00:20:11,263:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-03 00:20:11,263:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-03 00:20:11,263:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-03 00:20:11,384:INFO:PyCaret RegressionExperiment
2024-05-03 00:20:11,384:INFO:Logging name: reg-default-name
2024-05-03 00:20:11,384:INFO:ML Usecase: MLUsecase.REGRESSION
2024-05-03 00:20:11,384:INFO:version 3.3.2
2024-05-03 00:20:11,384:INFO:Initializing setup()
2024-05-03 00:20:11,384:INFO:self.USI: 5cfb
2024-05-03 00:20:11,384:INFO:self._variable_keys: {'X_test', 'idx', 'y_test', 'X_train', 'fold_generator', 'exp_name_log', 'data', 'USI', 'log_plots_param', '_available_plots', 'logging_param', 'target_param', 'fold_shuffle_param', 'y', 'transform_target_param', 'seed', 'memory', '_ml_usecase', 'y_train', 'gpu_n_jobs_param', 'html_param', 'X', 'gpu_param', 'n_jobs_param', 'exp_id', 'pipeline', 'fold_groups_param'}
2024-05-03 00:20:11,385:INFO:Checking environment
2024-05-03 00:20:11,385:INFO:python_version: 3.10.11
2024-05-03 00:20:11,385:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-05-03 00:20:11,385:INFO:machine: AMD64
2024-05-03 00:20:11,399:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-03 00:20:11,403:INFO:Memory: svmem(total=8302092288, available=2698760192, percent=67.5, used=5603332096, free=2698760192)
2024-05-03 00:20:11,403:INFO:Physical Core: 12
2024-05-03 00:20:11,403:INFO:Logical Core: 16
2024-05-03 00:20:11,403:INFO:Checking libraries
2024-05-03 00:20:11,403:INFO:System:
2024-05-03 00:20:11,403:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-05-03 00:20:11,404:INFO:executable: C:\Users\seyzu\AppData\Local\Programs\Python\Python310\python.exe
2024-05-03 00:20:11,404:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-03 00:20:11,404:INFO:PyCaret required dependencies:
2024-05-03 00:20:11,902:INFO:                 pip: 24.0
2024-05-03 00:20:11,902:INFO:          setuptools: 65.5.0
2024-05-03 00:20:11,902:INFO:             pycaret: 3.3.2
2024-05-03 00:20:11,902:INFO:             IPython: 8.24.0
2024-05-03 00:20:11,902:INFO:          ipywidgets: 8.1.2
2024-05-03 00:20:11,902:INFO:                tqdm: 4.66.2
2024-05-03 00:20:11,902:INFO:               numpy: 1.26.4
2024-05-03 00:20:11,902:INFO:              pandas: 2.1.4
2024-05-03 00:20:11,902:INFO:              jinja2: 3.1.3
2024-05-03 00:20:11,902:INFO:               scipy: 1.11.4
2024-05-03 00:20:11,902:INFO:              joblib: 1.3.2
2024-05-03 00:20:11,902:INFO:             sklearn: 1.4.2
2024-05-03 00:20:11,902:INFO:                pyod: 1.1.3
2024-05-03 00:20:11,902:INFO:            imblearn: 0.12.2
2024-05-03 00:20:11,902:INFO:   category_encoders: 2.6.3
2024-05-03 00:20:11,902:INFO:            lightgbm: 4.3.0
2024-05-03 00:20:11,902:INFO:               numba: 0.59.1
2024-05-03 00:20:11,902:INFO:            requests: 2.31.0
2024-05-03 00:20:11,902:INFO:          matplotlib: 3.7.5
2024-05-03 00:20:11,902:INFO:          scikitplot: 0.3.7
2024-05-03 00:20:11,902:INFO:         yellowbrick: 1.5
2024-05-03 00:20:11,902:INFO:              plotly: 5.21.0
2024-05-03 00:20:11,902:INFO:    plotly-resampler: Not installed
2024-05-03 00:20:11,902:INFO:             kaleido: 0.2.1
2024-05-03 00:20:11,902:INFO:           schemdraw: 0.15
2024-05-03 00:20:11,902:INFO:         statsmodels: 0.14.2
2024-05-03 00:20:11,902:INFO:              sktime: 0.26.0
2024-05-03 00:20:11,902:INFO:               tbats: 1.1.3
2024-05-03 00:20:11,902:INFO:            pmdarima: 2.0.4
2024-05-03 00:20:11,902:INFO:              psutil: 5.9.8
2024-05-03 00:20:11,902:INFO:          markupsafe: 2.1.5
2024-05-03 00:20:11,902:INFO:             pickle5: Not installed
2024-05-03 00:20:11,902:INFO:         cloudpickle: 3.0.0
2024-05-03 00:20:11,902:INFO:         deprecation: 2.1.0
2024-05-03 00:20:11,902:INFO:              xxhash: 3.4.1
2024-05-03 00:20:11,902:INFO:           wurlitzer: Not installed
2024-05-03 00:20:11,902:INFO:PyCaret optional dependencies:
2024-05-03 00:20:13,326:INFO:                shap: 0.44.1
2024-05-03 00:20:13,326:INFO:           interpret: 0.6.1
2024-05-03 00:20:13,326:INFO:                umap: 0.5.6
2024-05-03 00:20:13,326:INFO:     ydata_profiling: 4.7.0
2024-05-03 00:20:13,326:INFO:  explainerdashboard: 0.4.7
2024-05-03 00:20:13,326:INFO:             autoviz: Not installed
2024-05-03 00:20:13,326:INFO:           fairlearn: 0.7.0
2024-05-03 00:20:13,326:INFO:          deepchecks: Not installed
2024-05-03 00:20:13,326:INFO:             xgboost: 2.0.3
2024-05-03 00:20:13,326:INFO:            catboost: 1.2.5
2024-05-03 00:20:13,326:INFO:              kmodes: 0.12.2
2024-05-03 00:20:13,326:INFO:             mlxtend: 0.23.1
2024-05-03 00:20:13,326:INFO:       statsforecast: 1.5.0
2024-05-03 00:20:13,326:INFO:        tune_sklearn: Not installed
2024-05-03 00:20:13,326:INFO:                 ray: Not installed
2024-05-03 00:20:13,326:INFO:            hyperopt: 0.2.7
2024-05-03 00:20:13,326:INFO:              optuna: 3.6.1
2024-05-03 00:20:13,326:INFO:               skopt: 0.10.1
2024-05-03 00:20:13,326:INFO:              mlflow: 2.12.1
2024-05-03 00:20:13,326:INFO:              gradio: 4.28.3
2024-05-03 00:20:13,326:INFO:             fastapi: 0.110.3
2024-05-03 00:20:13,326:INFO:             uvicorn: 0.29.0
2024-05-03 00:20:13,326:INFO:              m2cgen: 0.10.0
2024-05-03 00:20:13,326:INFO:           evidently: 0.4.19
2024-05-03 00:20:13,326:INFO:               fugue: 0.8.7
2024-05-03 00:20:13,326:INFO:           streamlit: Not installed
2024-05-03 00:20:13,326:INFO:             prophet: Not installed
2024-05-03 00:20:13,326:INFO:None
2024-05-03 00:20:13,326:INFO:Set up data.
2024-05-03 00:20:13,334:INFO:Set up folding strategy.
2024-05-03 00:20:13,334:INFO:Set up train/test split.
2024-05-03 00:20:13,334:INFO:Set up index.
2024-05-03 00:20:13,334:INFO:Assigning column types.
2024-05-03 00:20:13,334:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-03 00:20:13,334:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-03 00:20:13,343:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-03 00:20:13,343:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-03 00:20:13,422:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-03 00:20:13,471:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-03 00:20:13,471:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:20:13,479:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:20:13,504:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-03 00:20:13,504:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-03 00:20:13,512:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-03 00:20:13,546:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-03 00:20:13,569:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-03 00:20:13,569:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:20:13,569:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:20:13,569:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-05-03 00:20:13,577:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-03 00:20:13,577:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-03 00:20:13,610:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-03 00:20:13,635:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-03 00:20:13,635:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:20:13,643:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:20:13,643:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-03 00:20:13,643:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-03 00:20:13,675:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-03 00:20:13,703:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-03 00:20:13,704:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:20:13,705:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:20:13,705:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-05-03 00:20:13,708:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-03 00:20:13,769:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-03 00:20:13,796:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-03 00:20:13,796:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:20:13,799:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:20:13,804:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-03 00:20:13,855:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-03 00:20:13,893:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-03 00:20:13,893:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:20:13,893:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:20:13,893:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-05-03 00:20:13,925:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-03 00:20:13,958:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-03 00:20:13,958:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:20:13,966:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:20:14,022:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-03 00:20:14,062:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-03 00:20:14,062:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:20:14,062:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:20:14,062:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-03 00:20:14,119:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-03 00:20:14,143:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:20:14,143:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:20:14,207:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-03 00:20:14,257:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:20:14,278:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:20:14,278:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-05-03 00:20:14,384:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:20:14,386:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:20:14,497:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:20:14,499:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:20:14,568:INFO:Preparing preprocessing pipeline...
2024-05-03 00:20:14,568:INFO:Set up simple imputation.
2024-05-03 00:20:14,589:INFO:Finished creating preprocessing pipeline.
2024-05-03 00:20:14,597:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\seyzu\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Jsc', 'Voc', 'FF', 'Efficiency',
                                             'Sr', 'Sp', 'Temp'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2024-05-03 00:20:14,597:INFO:Creating final display dataframe.
2024-05-03 00:20:14,629:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             Class
2                   Target type        Regression
3           Original data shape          (182, 8)
4        Transformed data shape          (182, 8)
5   Transformed train set shape          (127, 8)
6    Transformed test set shape           (55, 8)
7              Numeric features                 7
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              5cfb
2024-05-03 00:20:14,719:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:20:14,719:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:20:14,780:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:20:14,780:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:20:14,780:INFO:setup() successfully completed in 3.4s...............
2024-05-03 00:20:14,780:INFO:Initializing compare_models()
2024-05-03 00:20:14,780:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BC0059AFE0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001BC0059AFE0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2024-05-03 00:20:14,780:INFO:Checking exceptions
2024-05-03 00:20:14,786:INFO:Preparing display monitor
2024-05-03 00:20:14,786:INFO:Initializing Linear Regression
2024-05-03 00:20:14,786:INFO:Total runtime is 0.0 minutes
2024-05-03 00:20:14,786:INFO:SubProcess create_model() called ==================================
2024-05-03 00:20:14,786:INFO:Initializing create_model()
2024-05-03 00:20:14,786:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BC0059AFE0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BC286D14B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:20:14,786:INFO:Checking exceptions
2024-05-03 00:20:14,786:INFO:Importing libraries
2024-05-03 00:20:14,786:INFO:Copying training dataset
2024-05-03 00:20:14,791:INFO:Defining folds
2024-05-03 00:20:14,791:INFO:Declaring metric variables
2024-05-03 00:20:14,791:INFO:Importing untrained model
2024-05-03 00:20:14,791:INFO:Linear Regression Imported successfully
2024-05-03 00:20:14,791:INFO:Starting cross validation
2024-05-03 00:20:14,810:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:20:19,897:INFO:Calculating mean and std
2024-05-03 00:20:19,897:INFO:Creating metrics dataframe
2024-05-03 00:20:19,897:INFO:Uploading results into container
2024-05-03 00:20:19,897:INFO:Uploading model into container now
2024-05-03 00:20:19,897:INFO:_master_model_container: 1
2024-05-03 00:20:19,897:INFO:_display_container: 2
2024-05-03 00:20:19,897:INFO:LinearRegression(n_jobs=-1)
2024-05-03 00:20:19,897:INFO:create_model() successfully completed......................................
2024-05-03 00:20:20,042:INFO:SubProcess create_model() end ==================================
2024-05-03 00:20:20,042:INFO:Creating metrics dataframe
2024-05-03 00:20:20,042:INFO:Initializing Lasso Regression
2024-05-03 00:20:20,042:INFO:Total runtime is 0.08760546445846558 minutes
2024-05-03 00:20:20,042:INFO:SubProcess create_model() called ==================================
2024-05-03 00:20:20,042:INFO:Initializing create_model()
2024-05-03 00:20:20,042:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BC0059AFE0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BC286D14B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:20:20,042:INFO:Checking exceptions
2024-05-03 00:20:20,042:INFO:Importing libraries
2024-05-03 00:20:20,042:INFO:Copying training dataset
2024-05-03 00:20:20,050:INFO:Defining folds
2024-05-03 00:20:20,050:INFO:Declaring metric variables
2024-05-03 00:20:20,050:INFO:Importing untrained model
2024-05-03 00:20:20,050:INFO:Lasso Regression Imported successfully
2024-05-03 00:20:20,050:INFO:Starting cross validation
2024-05-03 00:20:20,050:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:20:25,576:INFO:Calculating mean and std
2024-05-03 00:20:25,576:INFO:Creating metrics dataframe
2024-05-03 00:20:25,576:INFO:Uploading results into container
2024-05-03 00:20:25,576:INFO:Uploading model into container now
2024-05-03 00:20:25,576:INFO:_master_model_container: 2
2024-05-03 00:20:25,576:INFO:_display_container: 2
2024-05-03 00:20:25,576:INFO:Lasso(random_state=123)
2024-05-03 00:20:25,576:INFO:create_model() successfully completed......................................
2024-05-03 00:20:25,713:INFO:SubProcess create_model() end ==================================
2024-05-03 00:20:25,713:INFO:Creating metrics dataframe
2024-05-03 00:20:25,716:INFO:Initializing Ridge Regression
2024-05-03 00:20:25,716:INFO:Total runtime is 0.18217823108037312 minutes
2024-05-03 00:20:25,716:INFO:SubProcess create_model() called ==================================
2024-05-03 00:20:25,716:INFO:Initializing create_model()
2024-05-03 00:20:25,716:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BC0059AFE0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BC286D14B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:20:25,716:INFO:Checking exceptions
2024-05-03 00:20:25,716:INFO:Importing libraries
2024-05-03 00:20:25,716:INFO:Copying training dataset
2024-05-03 00:20:25,720:INFO:Defining folds
2024-05-03 00:20:25,720:INFO:Declaring metric variables
2024-05-03 00:20:25,720:INFO:Importing untrained model
2024-05-03 00:20:25,720:INFO:Ridge Regression Imported successfully
2024-05-03 00:20:25,721:INFO:Starting cross validation
2024-05-03 00:20:25,721:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:20:25,862:INFO:Calculating mean and std
2024-05-03 00:20:25,864:INFO:Creating metrics dataframe
2024-05-03 00:20:25,866:INFO:Uploading results into container
2024-05-03 00:20:25,866:INFO:Uploading model into container now
2024-05-03 00:20:25,866:INFO:_master_model_container: 3
2024-05-03 00:20:25,867:INFO:_display_container: 2
2024-05-03 00:20:25,867:INFO:Ridge(random_state=123)
2024-05-03 00:20:25,867:INFO:create_model() successfully completed......................................
2024-05-03 00:20:25,983:INFO:SubProcess create_model() end ==================================
2024-05-03 00:20:25,983:INFO:Creating metrics dataframe
2024-05-03 00:20:25,983:INFO:Initializing Elastic Net
2024-05-03 00:20:25,983:INFO:Total runtime is 0.18662914037704467 minutes
2024-05-03 00:20:25,991:INFO:SubProcess create_model() called ==================================
2024-05-03 00:20:25,991:INFO:Initializing create_model()
2024-05-03 00:20:25,991:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BC0059AFE0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BC286D14B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:20:25,991:INFO:Checking exceptions
2024-05-03 00:20:25,991:INFO:Importing libraries
2024-05-03 00:20:25,991:INFO:Copying training dataset
2024-05-03 00:20:25,995:INFO:Defining folds
2024-05-03 00:20:25,995:INFO:Declaring metric variables
2024-05-03 00:20:25,995:INFO:Importing untrained model
2024-05-03 00:20:25,995:INFO:Elastic Net Imported successfully
2024-05-03 00:20:25,995:INFO:Starting cross validation
2024-05-03 00:20:25,996:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:20:26,073:INFO:Calculating mean and std
2024-05-03 00:20:26,073:INFO:Creating metrics dataframe
2024-05-03 00:20:26,073:INFO:Uploading results into container
2024-05-03 00:20:26,073:INFO:Uploading model into container now
2024-05-03 00:20:26,073:INFO:_master_model_container: 4
2024-05-03 00:20:26,073:INFO:_display_container: 2
2024-05-03 00:20:26,073:INFO:ElasticNet(random_state=123)
2024-05-03 00:20:26,073:INFO:create_model() successfully completed......................................
2024-05-03 00:20:26,187:INFO:SubProcess create_model() end ==================================
2024-05-03 00:20:26,187:INFO:Creating metrics dataframe
2024-05-03 00:20:26,196:INFO:Initializing Least Angle Regression
2024-05-03 00:20:26,196:INFO:Total runtime is 0.19017059008280435 minutes
2024-05-03 00:20:26,196:INFO:SubProcess create_model() called ==================================
2024-05-03 00:20:26,197:INFO:Initializing create_model()
2024-05-03 00:20:26,197:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BC0059AFE0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BC286D14B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:20:26,197:INFO:Checking exceptions
2024-05-03 00:20:26,197:INFO:Importing libraries
2024-05-03 00:20:26,197:INFO:Copying training dataset
2024-05-03 00:20:26,203:INFO:Defining folds
2024-05-03 00:20:26,203:INFO:Declaring metric variables
2024-05-03 00:20:26,203:INFO:Importing untrained model
2024-05-03 00:20:26,204:INFO:Least Angle Regression Imported successfully
2024-05-03 00:20:26,204:INFO:Starting cross validation
2024-05-03 00:20:26,204:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:20:26,359:INFO:Calculating mean and std
2024-05-03 00:20:26,359:INFO:Creating metrics dataframe
2024-05-03 00:20:26,359:INFO:Uploading results into container
2024-05-03 00:20:26,359:INFO:Uploading model into container now
2024-05-03 00:20:26,359:INFO:_master_model_container: 5
2024-05-03 00:20:26,359:INFO:_display_container: 2
2024-05-03 00:20:26,359:INFO:Lars(random_state=123)
2024-05-03 00:20:26,359:INFO:create_model() successfully completed......................................
2024-05-03 00:20:26,456:INFO:SubProcess create_model() end ==================================
2024-05-03 00:20:26,456:INFO:Creating metrics dataframe
2024-05-03 00:20:26,456:INFO:Initializing Lasso Least Angle Regression
2024-05-03 00:20:26,456:INFO:Total runtime is 0.19450229008992512 minutes
2024-05-03 00:20:26,456:INFO:SubProcess create_model() called ==================================
2024-05-03 00:20:26,456:INFO:Initializing create_model()
2024-05-03 00:20:26,456:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BC0059AFE0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BC286D14B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:20:26,456:INFO:Checking exceptions
2024-05-03 00:20:26,456:INFO:Importing libraries
2024-05-03 00:20:26,456:INFO:Copying training dataset
2024-05-03 00:20:26,456:INFO:Defining folds
2024-05-03 00:20:26,456:INFO:Declaring metric variables
2024-05-03 00:20:26,464:INFO:Importing untrained model
2024-05-03 00:20:26,464:INFO:Lasso Least Angle Regression Imported successfully
2024-05-03 00:20:26,464:INFO:Starting cross validation
2024-05-03 00:20:26,464:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:20:26,552:INFO:Calculating mean and std
2024-05-03 00:20:26,553:INFO:Creating metrics dataframe
2024-05-03 00:20:26,556:INFO:Uploading results into container
2024-05-03 00:20:26,556:INFO:Uploading model into container now
2024-05-03 00:20:26,556:INFO:_master_model_container: 6
2024-05-03 00:20:26,556:INFO:_display_container: 2
2024-05-03 00:20:26,556:INFO:LassoLars(random_state=123)
2024-05-03 00:20:26,556:INFO:create_model() successfully completed......................................
2024-05-03 00:20:26,690:INFO:SubProcess create_model() end ==================================
2024-05-03 00:20:26,690:INFO:Creating metrics dataframe
2024-05-03 00:20:26,698:INFO:Initializing Orthogonal Matching Pursuit
2024-05-03 00:20:26,698:INFO:Total runtime is 0.19854049285252887 minutes
2024-05-03 00:20:26,698:INFO:SubProcess create_model() called ==================================
2024-05-03 00:20:26,698:INFO:Initializing create_model()
2024-05-03 00:20:26,698:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BC0059AFE0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BC286D14B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:20:26,698:INFO:Checking exceptions
2024-05-03 00:20:26,698:INFO:Importing libraries
2024-05-03 00:20:26,698:INFO:Copying training dataset
2024-05-03 00:20:26,698:INFO:Defining folds
2024-05-03 00:20:26,698:INFO:Declaring metric variables
2024-05-03 00:20:26,698:INFO:Importing untrained model
2024-05-03 00:20:26,698:INFO:Orthogonal Matching Pursuit Imported successfully
2024-05-03 00:20:26,706:INFO:Starting cross validation
2024-05-03 00:20:26,706:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:20:26,796:INFO:Calculating mean and std
2024-05-03 00:20:26,796:INFO:Creating metrics dataframe
2024-05-03 00:20:26,798:INFO:Uploading results into container
2024-05-03 00:20:26,798:INFO:Uploading model into container now
2024-05-03 00:20:26,798:INFO:_master_model_container: 7
2024-05-03 00:20:26,798:INFO:_display_container: 2
2024-05-03 00:20:26,798:INFO:OrthogonalMatchingPursuit()
2024-05-03 00:20:26,801:INFO:create_model() successfully completed......................................
2024-05-03 00:20:26,933:INFO:SubProcess create_model() end ==================================
2024-05-03 00:20:26,933:INFO:Creating metrics dataframe
2024-05-03 00:20:26,941:INFO:Initializing Bayesian Ridge
2024-05-03 00:20:26,941:INFO:Total runtime is 0.20259069204330443 minutes
2024-05-03 00:20:26,941:INFO:SubProcess create_model() called ==================================
2024-05-03 00:20:26,941:INFO:Initializing create_model()
2024-05-03 00:20:26,941:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BC0059AFE0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BC286D14B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:20:26,941:INFO:Checking exceptions
2024-05-03 00:20:26,941:INFO:Importing libraries
2024-05-03 00:20:26,941:INFO:Copying training dataset
2024-05-03 00:20:26,941:INFO:Defining folds
2024-05-03 00:20:26,941:INFO:Declaring metric variables
2024-05-03 00:20:26,941:INFO:Importing untrained model
2024-05-03 00:20:26,941:INFO:Bayesian Ridge Imported successfully
2024-05-03 00:20:26,941:INFO:Starting cross validation
2024-05-03 00:20:26,941:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:20:27,021:INFO:Calculating mean and std
2024-05-03 00:20:27,022:INFO:Creating metrics dataframe
2024-05-03 00:20:27,024:INFO:Uploading results into container
2024-05-03 00:20:27,024:INFO:Uploading model into container now
2024-05-03 00:20:27,025:INFO:_master_model_container: 8
2024-05-03 00:20:27,025:INFO:_display_container: 2
2024-05-03 00:20:27,025:INFO:BayesianRidge()
2024-05-03 00:20:27,025:INFO:create_model() successfully completed......................................
2024-05-03 00:20:27,136:INFO:SubProcess create_model() end ==================================
2024-05-03 00:20:27,136:INFO:Creating metrics dataframe
2024-05-03 00:20:27,136:INFO:Initializing Passive Aggressive Regressor
2024-05-03 00:20:27,136:INFO:Total runtime is 0.20584452152252197 minutes
2024-05-03 00:20:27,136:INFO:SubProcess create_model() called ==================================
2024-05-03 00:20:27,136:INFO:Initializing create_model()
2024-05-03 00:20:27,136:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BC0059AFE0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BC286D14B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:20:27,136:INFO:Checking exceptions
2024-05-03 00:20:27,136:INFO:Importing libraries
2024-05-03 00:20:27,136:INFO:Copying training dataset
2024-05-03 00:20:27,144:INFO:Defining folds
2024-05-03 00:20:27,144:INFO:Declaring metric variables
2024-05-03 00:20:27,144:INFO:Importing untrained model
2024-05-03 00:20:27,144:INFO:Passive Aggressive Regressor Imported successfully
2024-05-03 00:20:27,144:INFO:Starting cross validation
2024-05-03 00:20:27,144:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:20:27,256:INFO:Calculating mean and std
2024-05-03 00:20:27,256:INFO:Creating metrics dataframe
2024-05-03 00:20:27,256:INFO:Uploading results into container
2024-05-03 00:20:27,256:INFO:Uploading model into container now
2024-05-03 00:20:27,256:INFO:_master_model_container: 9
2024-05-03 00:20:27,256:INFO:_display_container: 2
2024-05-03 00:20:27,256:INFO:PassiveAggressiveRegressor(random_state=123)
2024-05-03 00:20:27,256:INFO:create_model() successfully completed......................................
2024-05-03 00:20:27,349:INFO:SubProcess create_model() end ==================================
2024-05-03 00:20:27,350:INFO:Creating metrics dataframe
2024-05-03 00:20:27,351:INFO:Initializing Huber Regressor
2024-05-03 00:20:27,351:INFO:Total runtime is 0.209427805741628 minutes
2024-05-03 00:20:27,351:INFO:SubProcess create_model() called ==================================
2024-05-03 00:20:27,351:INFO:Initializing create_model()
2024-05-03 00:20:27,351:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BC0059AFE0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BC286D14B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:20:27,351:INFO:Checking exceptions
2024-05-03 00:20:27,351:INFO:Importing libraries
2024-05-03 00:20:27,351:INFO:Copying training dataset
2024-05-03 00:20:27,353:INFO:Defining folds
2024-05-03 00:20:27,353:INFO:Declaring metric variables
2024-05-03 00:20:27,353:INFO:Importing untrained model
2024-05-03 00:20:27,353:INFO:Huber Regressor Imported successfully
2024-05-03 00:20:27,353:INFO:Starting cross validation
2024-05-03 00:20:27,353:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:20:27,426:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-05-03 00:20:27,426:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-05-03 00:20:27,426:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-05-03 00:20:27,442:INFO:Calculating mean and std
2024-05-03 00:20:27,442:INFO:Creating metrics dataframe
2024-05-03 00:20:27,442:INFO:Uploading results into container
2024-05-03 00:20:27,442:INFO:Uploading model into container now
2024-05-03 00:20:27,442:INFO:_master_model_container: 10
2024-05-03 00:20:27,442:INFO:_display_container: 2
2024-05-03 00:20:27,442:INFO:HuberRegressor()
2024-05-03 00:20:27,442:INFO:create_model() successfully completed......................................
2024-05-03 00:20:27,534:INFO:SubProcess create_model() end ==================================
2024-05-03 00:20:27,534:INFO:Creating metrics dataframe
2024-05-03 00:20:27,535:INFO:Initializing K Neighbors Regressor
2024-05-03 00:20:27,536:INFO:Total runtime is 0.21250895261764527 minutes
2024-05-03 00:20:27,536:INFO:SubProcess create_model() called ==================================
2024-05-03 00:20:27,536:INFO:Initializing create_model()
2024-05-03 00:20:27,536:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BC0059AFE0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BC286D14B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:20:27,536:INFO:Checking exceptions
2024-05-03 00:20:27,536:INFO:Importing libraries
2024-05-03 00:20:27,536:INFO:Copying training dataset
2024-05-03 00:20:27,537:INFO:Defining folds
2024-05-03 00:20:27,537:INFO:Declaring metric variables
2024-05-03 00:20:27,537:INFO:Importing untrained model
2024-05-03 00:20:27,537:INFO:K Neighbors Regressor Imported successfully
2024-05-03 00:20:27,537:INFO:Starting cross validation
2024-05-03 00:20:27,539:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:20:27,654:INFO:Calculating mean and std
2024-05-03 00:20:27,654:INFO:Creating metrics dataframe
2024-05-03 00:20:27,654:INFO:Uploading results into container
2024-05-03 00:20:27,654:INFO:Uploading model into container now
2024-05-03 00:20:27,654:INFO:_master_model_container: 11
2024-05-03 00:20:27,654:INFO:_display_container: 2
2024-05-03 00:20:27,654:INFO:KNeighborsRegressor(n_jobs=-1)
2024-05-03 00:20:27,654:INFO:create_model() successfully completed......................................
2024-05-03 00:20:27,776:INFO:SubProcess create_model() end ==================================
2024-05-03 00:20:27,776:INFO:Creating metrics dataframe
2024-05-03 00:20:27,784:INFO:Initializing Decision Tree Regressor
2024-05-03 00:20:27,784:INFO:Total runtime is 0.21663984060287475 minutes
2024-05-03 00:20:27,784:INFO:SubProcess create_model() called ==================================
2024-05-03 00:20:27,784:INFO:Initializing create_model()
2024-05-03 00:20:27,784:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BC0059AFE0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BC286D14B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:20:27,784:INFO:Checking exceptions
2024-05-03 00:20:27,784:INFO:Importing libraries
2024-05-03 00:20:27,784:INFO:Copying training dataset
2024-05-03 00:20:27,793:INFO:Defining folds
2024-05-03 00:20:27,793:INFO:Declaring metric variables
2024-05-03 00:20:27,793:INFO:Importing untrained model
2024-05-03 00:20:27,793:INFO:Decision Tree Regressor Imported successfully
2024-05-03 00:20:27,793:INFO:Starting cross validation
2024-05-03 00:20:27,793:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:20:27,938:INFO:Calculating mean and std
2024-05-03 00:20:27,938:INFO:Creating metrics dataframe
2024-05-03 00:20:27,938:INFO:Uploading results into container
2024-05-03 00:20:27,938:INFO:Uploading model into container now
2024-05-03 00:20:27,938:INFO:_master_model_container: 12
2024-05-03 00:20:27,938:INFO:_display_container: 2
2024-05-03 00:20:27,938:INFO:DecisionTreeRegressor(random_state=123)
2024-05-03 00:20:27,938:INFO:create_model() successfully completed......................................
2024-05-03 00:20:28,059:INFO:SubProcess create_model() end ==================================
2024-05-03 00:20:28,059:INFO:Creating metrics dataframe
2024-05-03 00:20:28,068:INFO:Initializing Random Forest Regressor
2024-05-03 00:20:28,068:INFO:Total runtime is 0.22136703332265217 minutes
2024-05-03 00:20:28,068:INFO:SubProcess create_model() called ==================================
2024-05-03 00:20:28,068:INFO:Initializing create_model()
2024-05-03 00:20:28,068:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BC0059AFE0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BC286D14B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:20:28,068:INFO:Checking exceptions
2024-05-03 00:20:28,068:INFO:Importing libraries
2024-05-03 00:20:28,072:INFO:Copying training dataset
2024-05-03 00:20:28,076:INFO:Defining folds
2024-05-03 00:20:28,076:INFO:Declaring metric variables
2024-05-03 00:20:28,076:INFO:Importing untrained model
2024-05-03 00:20:28,076:INFO:Random Forest Regressor Imported successfully
2024-05-03 00:20:28,076:INFO:Starting cross validation
2024-05-03 00:20:28,076:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:20:28,513:INFO:Calculating mean and std
2024-05-03 00:20:28,513:INFO:Creating metrics dataframe
2024-05-03 00:20:28,513:INFO:Uploading results into container
2024-05-03 00:20:28,513:INFO:Uploading model into container now
2024-05-03 00:20:28,513:INFO:_master_model_container: 13
2024-05-03 00:20:28,513:INFO:_display_container: 2
2024-05-03 00:20:28,513:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2024-05-03 00:20:28,513:INFO:create_model() successfully completed......................................
2024-05-03 00:20:28,642:INFO:SubProcess create_model() end ==================================
2024-05-03 00:20:28,642:INFO:Creating metrics dataframe
2024-05-03 00:20:28,642:INFO:Initializing Extra Trees Regressor
2024-05-03 00:20:28,642:INFO:Total runtime is 0.23093973795572917 minutes
2024-05-03 00:20:28,642:INFO:SubProcess create_model() called ==================================
2024-05-03 00:20:28,642:INFO:Initializing create_model()
2024-05-03 00:20:28,642:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BC0059AFE0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BC286D14B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:20:28,642:INFO:Checking exceptions
2024-05-03 00:20:28,642:INFO:Importing libraries
2024-05-03 00:20:28,642:INFO:Copying training dataset
2024-05-03 00:20:28,650:INFO:Defining folds
2024-05-03 00:20:28,650:INFO:Declaring metric variables
2024-05-03 00:20:28,650:INFO:Importing untrained model
2024-05-03 00:20:28,650:INFO:Extra Trees Regressor Imported successfully
2024-05-03 00:20:28,650:INFO:Starting cross validation
2024-05-03 00:20:28,650:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:20:29,007:INFO:Calculating mean and std
2024-05-03 00:20:29,007:INFO:Creating metrics dataframe
2024-05-03 00:20:29,007:INFO:Uploading results into container
2024-05-03 00:20:29,007:INFO:Uploading model into container now
2024-05-03 00:20:29,007:INFO:_master_model_container: 14
2024-05-03 00:20:29,007:INFO:_display_container: 2
2024-05-03 00:20:29,007:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-05-03 00:20:29,007:INFO:create_model() successfully completed......................................
2024-05-03 00:20:29,137:INFO:SubProcess create_model() end ==================================
2024-05-03 00:20:29,137:INFO:Creating metrics dataframe
2024-05-03 00:20:29,137:INFO:Initializing AdaBoost Regressor
2024-05-03 00:20:29,137:INFO:Total runtime is 0.23918362458546957 minutes
2024-05-03 00:20:29,137:INFO:SubProcess create_model() called ==================================
2024-05-03 00:20:29,137:INFO:Initializing create_model()
2024-05-03 00:20:29,137:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BC0059AFE0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BC286D14B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:20:29,137:INFO:Checking exceptions
2024-05-03 00:20:29,137:INFO:Importing libraries
2024-05-03 00:20:29,137:INFO:Copying training dataset
2024-05-03 00:20:29,137:INFO:Defining folds
2024-05-03 00:20:29,137:INFO:Declaring metric variables
2024-05-03 00:20:29,137:INFO:Importing untrained model
2024-05-03 00:20:29,137:INFO:AdaBoost Regressor Imported successfully
2024-05-03 00:20:29,145:INFO:Starting cross validation
2024-05-03 00:20:29,145:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:20:29,387:INFO:Calculating mean and std
2024-05-03 00:20:29,387:INFO:Creating metrics dataframe
2024-05-03 00:20:29,387:INFO:Uploading results into container
2024-05-03 00:20:29,387:INFO:Uploading model into container now
2024-05-03 00:20:29,387:INFO:_master_model_container: 15
2024-05-03 00:20:29,387:INFO:_display_container: 2
2024-05-03 00:20:29,387:INFO:AdaBoostRegressor(random_state=123)
2024-05-03 00:20:29,387:INFO:create_model() successfully completed......................................
2024-05-03 00:20:29,501:INFO:SubProcess create_model() end ==================================
2024-05-03 00:20:29,501:INFO:Creating metrics dataframe
2024-05-03 00:20:29,501:INFO:Initializing Gradient Boosting Regressor
2024-05-03 00:20:29,501:INFO:Total runtime is 0.24526249170303346 minutes
2024-05-03 00:20:29,501:INFO:SubProcess create_model() called ==================================
2024-05-03 00:20:29,501:INFO:Initializing create_model()
2024-05-03 00:20:29,501:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BC0059AFE0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BC286D14B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:20:29,501:INFO:Checking exceptions
2024-05-03 00:20:29,501:INFO:Importing libraries
2024-05-03 00:20:29,501:INFO:Copying training dataset
2024-05-03 00:20:29,509:INFO:Defining folds
2024-05-03 00:20:29,509:INFO:Declaring metric variables
2024-05-03 00:20:29,509:INFO:Importing untrained model
2024-05-03 00:20:29,509:INFO:Gradient Boosting Regressor Imported successfully
2024-05-03 00:20:29,509:INFO:Starting cross validation
2024-05-03 00:20:29,509:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:20:29,759:INFO:Calculating mean and std
2024-05-03 00:20:29,759:INFO:Creating metrics dataframe
2024-05-03 00:20:29,759:INFO:Uploading results into container
2024-05-03 00:20:29,759:INFO:Uploading model into container now
2024-05-03 00:20:29,759:INFO:_master_model_container: 16
2024-05-03 00:20:29,759:INFO:_display_container: 2
2024-05-03 00:20:29,759:INFO:GradientBoostingRegressor(random_state=123)
2024-05-03 00:20:29,759:INFO:create_model() successfully completed......................................
2024-05-03 00:20:29,882:INFO:SubProcess create_model() end ==================================
2024-05-03 00:20:29,882:INFO:Creating metrics dataframe
2024-05-03 00:20:29,882:INFO:Initializing Extreme Gradient Boosting
2024-05-03 00:20:29,882:INFO:Total runtime is 0.25160942872365316 minutes
2024-05-03 00:20:29,882:INFO:SubProcess create_model() called ==================================
2024-05-03 00:20:29,882:INFO:Initializing create_model()
2024-05-03 00:20:29,882:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BC0059AFE0>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BC286D14B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:20:29,882:INFO:Checking exceptions
2024-05-03 00:20:29,882:INFO:Importing libraries
2024-05-03 00:20:29,882:INFO:Copying training dataset
2024-05-03 00:20:29,890:INFO:Defining folds
2024-05-03 00:20:29,890:INFO:Declaring metric variables
2024-05-03 00:20:29,890:INFO:Importing untrained model
2024-05-03 00:20:29,890:INFO:Extreme Gradient Boosting Imported successfully
2024-05-03 00:20:29,892:INFO:Starting cross validation
2024-05-03 00:20:29,892:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:20:30,148:INFO:Calculating mean and std
2024-05-03 00:20:30,149:INFO:Creating metrics dataframe
2024-05-03 00:20:30,150:INFO:Uploading results into container
2024-05-03 00:20:30,150:INFO:Uploading model into container now
2024-05-03 00:20:30,150:INFO:_master_model_container: 17
2024-05-03 00:20:30,150:INFO:_display_container: 2
2024-05-03 00:20:30,150:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=123, ...)
2024-05-03 00:20:30,150:INFO:create_model() successfully completed......................................
2024-05-03 00:20:30,270:INFO:SubProcess create_model() end ==================================
2024-05-03 00:20:30,270:INFO:Creating metrics dataframe
2024-05-03 00:20:30,274:INFO:Initializing Light Gradient Boosting Machine
2024-05-03 00:20:30,274:INFO:Total runtime is 0.2581466595331828 minutes
2024-05-03 00:20:30,274:INFO:SubProcess create_model() called ==================================
2024-05-03 00:20:30,274:INFO:Initializing create_model()
2024-05-03 00:20:30,274:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BC0059AFE0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BC286D14B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:20:30,274:INFO:Checking exceptions
2024-05-03 00:20:30,274:INFO:Importing libraries
2024-05-03 00:20:30,274:INFO:Copying training dataset
2024-05-03 00:20:30,278:INFO:Defining folds
2024-05-03 00:20:30,278:INFO:Declaring metric variables
2024-05-03 00:20:30,278:INFO:Importing untrained model
2024-05-03 00:20:30,278:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-03 00:20:30,278:INFO:Starting cross validation
2024-05-03 00:20:30,278:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:20:31,046:INFO:Calculating mean and std
2024-05-03 00:20:31,047:INFO:Creating metrics dataframe
2024-05-03 00:20:31,050:INFO:Uploading results into container
2024-05-03 00:20:31,050:INFO:Uploading model into container now
2024-05-03 00:20:31,050:INFO:_master_model_container: 18
2024-05-03 00:20:31,050:INFO:_display_container: 2
2024-05-03 00:20:31,054:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2024-05-03 00:20:31,054:INFO:create_model() successfully completed......................................
2024-05-03 00:20:31,193:INFO:SubProcess create_model() end ==================================
2024-05-03 00:20:31,193:INFO:Creating metrics dataframe
2024-05-03 00:20:31,193:INFO:Initializing CatBoost Regressor
2024-05-03 00:20:31,193:INFO:Total runtime is 0.2734591444333394 minutes
2024-05-03 00:20:31,193:INFO:SubProcess create_model() called ==================================
2024-05-03 00:20:31,193:INFO:Initializing create_model()
2024-05-03 00:20:31,193:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BC0059AFE0>, estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BC286D14B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:20:31,193:INFO:Checking exceptions
2024-05-03 00:20:31,193:INFO:Importing libraries
2024-05-03 00:20:31,193:INFO:Copying training dataset
2024-05-03 00:20:31,201:INFO:Defining folds
2024-05-03 00:20:31,201:INFO:Declaring metric variables
2024-05-03 00:20:31,201:INFO:Importing untrained model
2024-05-03 00:20:31,201:INFO:CatBoost Regressor Imported successfully
2024-05-03 00:20:31,201:INFO:Starting cross validation
2024-05-03 00:20:31,201:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:20:36,531:INFO:Calculating mean and std
2024-05-03 00:20:36,531:INFO:Creating metrics dataframe
2024-05-03 00:20:36,531:INFO:Uploading results into container
2024-05-03 00:20:36,531:INFO:Uploading model into container now
2024-05-03 00:20:36,531:INFO:_master_model_container: 19
2024-05-03 00:20:36,531:INFO:_display_container: 2
2024-05-03 00:20:36,531:INFO:<catboost.core.CatBoostRegressor object at 0x000001BC2855B940>
2024-05-03 00:20:36,531:INFO:create_model() successfully completed......................................
2024-05-03 00:20:36,661:INFO:SubProcess create_model() end ==================================
2024-05-03 00:20:36,661:INFO:Creating metrics dataframe
2024-05-03 00:20:36,661:INFO:Initializing Dummy Regressor
2024-05-03 00:20:36,661:INFO:Total runtime is 0.3645920674006144 minutes
2024-05-03 00:20:36,661:INFO:SubProcess create_model() called ==================================
2024-05-03 00:20:36,661:INFO:Initializing create_model()
2024-05-03 00:20:36,661:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BC0059AFE0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BC286D14B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:20:36,661:INFO:Checking exceptions
2024-05-03 00:20:36,661:INFO:Importing libraries
2024-05-03 00:20:36,661:INFO:Copying training dataset
2024-05-03 00:20:36,669:INFO:Defining folds
2024-05-03 00:20:36,669:INFO:Declaring metric variables
2024-05-03 00:20:36,669:INFO:Importing untrained model
2024-05-03 00:20:36,669:INFO:Dummy Regressor Imported successfully
2024-05-03 00:20:36,669:INFO:Starting cross validation
2024-05-03 00:20:36,669:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:20:36,750:INFO:Calculating mean and std
2024-05-03 00:20:36,750:INFO:Creating metrics dataframe
2024-05-03 00:20:36,750:INFO:Uploading results into container
2024-05-03 00:20:36,750:INFO:Uploading model into container now
2024-05-03 00:20:36,750:INFO:_master_model_container: 20
2024-05-03 00:20:36,750:INFO:_display_container: 2
2024-05-03 00:20:36,750:INFO:DummyRegressor()
2024-05-03 00:20:36,750:INFO:create_model() successfully completed......................................
2024-05-03 00:20:36,872:INFO:SubProcess create_model() end ==================================
2024-05-03 00:20:36,872:INFO:Creating metrics dataframe
2024-05-03 00:20:36,929:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-05-03 00:20:36,929:INFO:Initializing create_model()
2024-05-03 00:20:36,929:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BC0059AFE0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:20:36,929:INFO:Checking exceptions
2024-05-03 00:20:36,937:INFO:Importing libraries
2024-05-03 00:20:36,937:INFO:Copying training dataset
2024-05-03 00:20:36,941:INFO:Defining folds
2024-05-03 00:20:36,941:INFO:Declaring metric variables
2024-05-03 00:20:36,941:INFO:Importing untrained model
2024-05-03 00:20:36,941:INFO:Declaring custom model
2024-05-03 00:20:36,941:INFO:Extra Trees Regressor Imported successfully
2024-05-03 00:20:36,945:INFO:Cross validation set to False
2024-05-03 00:20:36,945:INFO:Fitting Model
2024-05-03 00:20:37,068:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-05-03 00:20:37,068:INFO:create_model() successfully completed......................................
2024-05-03 00:20:37,269:INFO:_master_model_container: 20
2024-05-03 00:20:37,271:INFO:_display_container: 2
2024-05-03 00:20:37,271:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-05-03 00:20:37,271:INFO:compare_models() successfully completed......................................
2024-05-03 00:20:37,278:INFO:Initializing evaluate_model()
2024-05-03 00:20:37,280:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BC0059AFE0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-05-03 00:20:37,518:INFO:Initializing plot_model()
2024-05-03 00:20:37,518:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BC0059AFE0>, system=True)
2024-05-03 00:20:37,518:INFO:Checking exceptions
2024-05-03 00:20:37,569:INFO:Preloading libraries
2024-05-03 00:20:37,585:INFO:Copying training dataset
2024-05-03 00:20:37,585:INFO:Plot type: pipeline
2024-05-03 00:20:48,696:INFO:Visual Rendered Successfully
2024-05-03 00:20:48,850:INFO:plot_model() successfully completed......................................
2024-05-03 00:20:48,854:INFO:Initializing plot_model()
2024-05-03 00:20:48,854:INFO:plot_model(plot=residuals, fold=None, verbose=True, display=None, display_format=None, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BC0059AFE0>, system=True)
2024-05-03 00:20:48,854:INFO:Checking exceptions
2024-05-03 00:20:48,907:INFO:Preloading libraries
2024-05-03 00:20:48,915:INFO:Copying training dataset
2024-05-03 00:20:48,915:INFO:Plot type: residuals
2024-05-03 00:20:49,239:INFO:Fitting Model
2024-05-03 00:20:49,239:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesRegressor was fitted with feature names
  warnings.warn(

2024-05-03 00:20:49,387:INFO:Scoring test/hold-out set
2024-05-03 00:20:54,851:INFO:Visual Rendered Successfully
2024-05-03 00:20:54,971:INFO:plot_model() successfully completed......................................
2024-05-03 00:20:54,971:INFO:Initializing plot_model()
2024-05-03 00:20:54,971:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BC0059AFE0>, system=True)
2024-05-03 00:20:54,971:INFO:Checking exceptions
2024-05-03 00:20:55,003:INFO:Preloading libraries
2024-05-03 00:20:55,015:INFO:Copying training dataset
2024-05-03 00:20:55,015:INFO:Plot type: feature
2024-05-03 00:20:55,015:WARNING:No coef_ found. Trying feature_importances_
2024-05-03 00:21:12,755:INFO:Visual Rendered Successfully
2024-05-03 00:21:12,893:INFO:plot_model() successfully completed......................................
2024-05-03 00:21:12,893:INFO:Initializing predict_model()
2024-05-03 00:21:12,893:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BC0059AFE0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BC285C8280>)
2024-05-03 00:21:12,893:INFO:Checking exceptions
2024-05-03 00:21:12,893:INFO:Preloading libraries
2024-05-03 00:21:12,948:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-05-03 00:21:13,065:INFO:Initializing predict_model()
2024-05-03 00:21:13,065:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BC0059AFE0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BC285C8280>)
2024-05-03 00:21:13,065:INFO:Checking exceptions
2024-05-03 00:21:13,065:INFO:Preloading libraries
2024-05-03 00:21:13,065:INFO:Set up data.
2024-05-03 00:21:13,065:INFO:Set up index.
2024-05-03 00:21:13,113:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-05-03 00:21:13,235:INFO:Initializing save_model()
2024-05-03 00:21:13,235:INFO:save_model(model=ExtraTreesRegressor(n_jobs=-1, random_state=123), model_name=my_best_pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\seyzu\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Jsc', 'Voc', 'FF', 'Efficiency',
                                             'Sr', 'Sp', 'Temp'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2024-05-03 00:21:13,235:INFO:Adding model into prep_pipe
2024-05-03 00:21:13,340:INFO:my_best_pipeline.pkl saved in current working directory
2024-05-03 00:21:13,348:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Jsc', 'Voc', 'FF', 'Efficiency',
                                             'Sr', 'Sp', 'Temp'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2024-05-03 00:21:13,348:INFO:save_model() successfully completed......................................
2024-05-03 00:21:13,511:INFO:Initializing load_model()
2024-05-03 00:21:13,511:INFO:load_model(model_name=my_best_pipeline, platform=None, authentication=None, verbose=True)
2024-05-03 00:21:45,445:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-03 00:21:45,445:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-03 00:21:45,445:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-03 00:21:45,445:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-03 00:21:45,630:INFO:PyCaret RegressionExperiment
2024-05-03 00:21:45,630:INFO:Logging name: reg-default-name
2024-05-03 00:21:45,630:INFO:ML Usecase: MLUsecase.REGRESSION
2024-05-03 00:21:45,630:INFO:version 3.3.2
2024-05-03 00:21:45,630:INFO:Initializing setup()
2024-05-03 00:21:45,630:INFO:self.USI: c87a
2024-05-03 00:21:45,630:INFO:self._variable_keys: {'html_param', 'exp_id', 'n_jobs_param', 'fold_groups_param', '_ml_usecase', 'USI', 'target_param', 'X_train', 'gpu_n_jobs_param', 'y_train', 'fold_shuffle_param', 'memory', 'pipeline', 'log_plots_param', 'seed', 'y', '_available_plots', 'transform_target_param', 'X_test', 'exp_name_log', 'gpu_param', 'fold_generator', 'idx', 'X', 'logging_param', 'y_test', 'data'}
2024-05-03 00:21:45,630:INFO:Checking environment
2024-05-03 00:21:45,630:INFO:python_version: 3.10.11
2024-05-03 00:21:45,630:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-05-03 00:21:45,630:INFO:machine: AMD64
2024-05-03 00:21:45,647:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-03 00:21:45,647:INFO:Memory: svmem(total=8302092288, available=3225890816, percent=61.1, used=5076201472, free=3225890816)
2024-05-03 00:21:45,647:INFO:Physical Core: 12
2024-05-03 00:21:45,647:INFO:Logical Core: 16
2024-05-03 00:21:45,647:INFO:Checking libraries
2024-05-03 00:21:45,647:INFO:System:
2024-05-03 00:21:45,647:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-05-03 00:21:45,647:INFO:executable: C:\Users\seyzu\AppData\Local\Programs\Python\Python310\python.exe
2024-05-03 00:21:45,647:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-03 00:21:45,647:INFO:PyCaret required dependencies:
2024-05-03 00:21:46,627:INFO:                 pip: 24.0
2024-05-03 00:21:46,627:INFO:          setuptools: 65.5.0
2024-05-03 00:21:46,627:INFO:             pycaret: 3.3.2
2024-05-03 00:21:46,627:INFO:             IPython: 8.24.0
2024-05-03 00:21:46,627:INFO:          ipywidgets: 8.1.2
2024-05-03 00:21:46,627:INFO:                tqdm: 4.66.2
2024-05-03 00:21:46,627:INFO:               numpy: 1.26.4
2024-05-03 00:21:46,627:INFO:              pandas: 2.1.4
2024-05-03 00:21:46,627:INFO:              jinja2: 3.1.3
2024-05-03 00:21:46,627:INFO:               scipy: 1.11.4
2024-05-03 00:21:46,627:INFO:              joblib: 1.3.2
2024-05-03 00:21:46,627:INFO:             sklearn: 1.4.2
2024-05-03 00:21:46,627:INFO:                pyod: 1.1.3
2024-05-03 00:21:46,627:INFO:            imblearn: 0.12.2
2024-05-03 00:21:46,627:INFO:   category_encoders: 2.6.3
2024-05-03 00:21:46,627:INFO:            lightgbm: 4.3.0
2024-05-03 00:21:46,627:INFO:               numba: 0.59.1
2024-05-03 00:21:46,627:INFO:            requests: 2.31.0
2024-05-03 00:21:46,627:INFO:          matplotlib: 3.7.5
2024-05-03 00:21:46,627:INFO:          scikitplot: 0.3.7
2024-05-03 00:21:46,627:INFO:         yellowbrick: 1.5
2024-05-03 00:21:46,627:INFO:              plotly: 5.21.0
2024-05-03 00:21:46,627:INFO:    plotly-resampler: Not installed
2024-05-03 00:21:46,627:INFO:             kaleido: 0.2.1
2024-05-03 00:21:46,627:INFO:           schemdraw: 0.15
2024-05-03 00:21:46,627:INFO:         statsmodels: 0.14.2
2024-05-03 00:21:46,627:INFO:              sktime: 0.26.0
2024-05-03 00:21:46,627:INFO:               tbats: 1.1.3
2024-05-03 00:21:46,627:INFO:            pmdarima: 2.0.4
2024-05-03 00:21:46,627:INFO:              psutil: 5.9.8
2024-05-03 00:21:46,627:INFO:          markupsafe: 2.1.5
2024-05-03 00:21:46,627:INFO:             pickle5: Not installed
2024-05-03 00:21:46,627:INFO:         cloudpickle: 3.0.0
2024-05-03 00:21:46,627:INFO:         deprecation: 2.1.0
2024-05-03 00:21:46,627:INFO:              xxhash: 3.4.1
2024-05-03 00:21:46,627:INFO:           wurlitzer: Not installed
2024-05-03 00:21:46,627:INFO:PyCaret optional dependencies:
2024-05-03 00:21:48,646:INFO:                shap: 0.44.1
2024-05-03 00:21:48,646:INFO:           interpret: 0.6.1
2024-05-03 00:21:48,646:INFO:                umap: 0.5.6
2024-05-03 00:21:48,646:INFO:     ydata_profiling: 4.7.0
2024-05-03 00:21:48,646:INFO:  explainerdashboard: 0.4.7
2024-05-03 00:21:48,646:INFO:             autoviz: Not installed
2024-05-03 00:21:48,646:INFO:           fairlearn: 0.7.0
2024-05-03 00:21:48,646:INFO:          deepchecks: Not installed
2024-05-03 00:21:48,646:INFO:             xgboost: 2.0.3
2024-05-03 00:21:48,646:INFO:            catboost: 1.2.5
2024-05-03 00:21:48,646:INFO:              kmodes: 0.12.2
2024-05-03 00:21:48,646:INFO:             mlxtend: 0.23.1
2024-05-03 00:21:48,646:INFO:       statsforecast: 1.5.0
2024-05-03 00:21:48,646:INFO:        tune_sklearn: Not installed
2024-05-03 00:21:48,646:INFO:                 ray: Not installed
2024-05-03 00:21:48,646:INFO:            hyperopt: 0.2.7
2024-05-03 00:21:48,646:INFO:              optuna: 3.6.1
2024-05-03 00:21:48,646:INFO:               skopt: 0.10.1
2024-05-03 00:21:48,646:INFO:              mlflow: 2.12.1
2024-05-03 00:21:48,646:INFO:              gradio: 4.28.3
2024-05-03 00:21:48,646:INFO:             fastapi: 0.110.3
2024-05-03 00:21:48,646:INFO:             uvicorn: 0.29.0
2024-05-03 00:21:48,646:INFO:              m2cgen: 0.10.0
2024-05-03 00:21:48,646:INFO:           evidently: 0.4.19
2024-05-03 00:21:48,646:INFO:               fugue: 0.8.7
2024-05-03 00:21:48,646:INFO:           streamlit: Not installed
2024-05-03 00:21:48,646:INFO:             prophet: Not installed
2024-05-03 00:21:48,646:INFO:None
2024-05-03 00:21:48,646:INFO:Set up data.
2024-05-03 00:21:48,654:INFO:Set up folding strategy.
2024-05-03 00:21:48,654:INFO:Set up train/test split.
2024-05-03 00:21:48,654:INFO:Set up index.
2024-05-03 00:21:48,654:INFO:Assigning column types.
2024-05-03 00:21:48,662:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-03 00:21:48,662:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-03 00:21:48,670:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-03 00:21:48,671:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-03 00:21:48,737:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-03 00:21:48,785:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-03 00:21:48,785:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:21:48,785:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:21:48,834:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-03 00:21:48,834:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-03 00:21:48,841:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-03 00:21:48,883:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-03 00:21:48,915:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-03 00:21:48,915:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:21:48,915:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:21:48,915:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-05-03 00:21:48,924:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-03 00:21:48,924:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-03 00:21:48,964:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-03 00:21:48,997:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-03 00:21:48,997:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:21:48,997:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:21:48,997:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-03 00:21:49,005:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-03 00:21:49,038:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-03 00:21:49,079:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-03 00:21:49,087:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:21:49,087:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:21:49,087:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-05-03 00:21:49,090:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-03 00:21:49,123:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-03 00:21:49,145:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-03 00:21:49,145:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:21:49,153:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:21:49,156:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-03 00:21:49,190:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-03 00:21:49,209:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-03 00:21:49,209:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:21:49,217:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:21:49,217:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-05-03 00:21:49,278:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-03 00:21:49,311:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-03 00:21:49,311:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:21:49,313:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:21:49,352:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-03 00:21:49,395:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-03 00:21:49,395:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:21:49,395:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:21:49,395:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-03 00:21:49,441:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-03 00:21:49,470:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:21:49,472:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:21:49,519:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-03 00:21:49,550:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:21:49,550:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:21:49,550:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-05-03 00:21:49,626:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:21:49,634:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:21:49,724:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:21:49,724:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:21:49,733:INFO:Preparing preprocessing pipeline...
2024-05-03 00:21:49,733:INFO:Set up simple imputation.
2024-05-03 00:21:49,766:INFO:Finished creating preprocessing pipeline.
2024-05-03 00:21:49,766:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\seyzu\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Jsc', 'Voc', 'FF', 'Sr', 'Sp',
                                             'Temp', 'Class'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2024-05-03 00:21:49,766:INFO:Creating final display dataframe.
2024-05-03 00:21:49,816:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target        Efficiency
2                   Target type        Regression
3           Original data shape          (182, 8)
4        Transformed data shape          (182, 8)
5   Transformed train set shape          (127, 8)
6    Transformed test set shape           (55, 8)
7              Numeric features                 7
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              c87a
2024-05-03 00:21:49,914:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:21:49,917:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:21:50,029:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:21:50,033:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:21:50,033:INFO:setup() successfully completed in 4.4s...............
2024-05-03 00:21:50,033:INFO:Initializing compare_models()
2024-05-03 00:21:50,033:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296396AAFE0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000296396AAFE0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2024-05-03 00:21:50,033:INFO:Checking exceptions
2024-05-03 00:21:50,033:INFO:Preparing display monitor
2024-05-03 00:21:50,037:INFO:Initializing Linear Regression
2024-05-03 00:21:50,037:INFO:Total runtime is 0.0 minutes
2024-05-03 00:21:50,037:INFO:SubProcess create_model() called ==================================
2024-05-03 00:21:50,037:INFO:Initializing create_model()
2024-05-03 00:21:50,037:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296396AAFE0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000296606614E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:21:50,037:INFO:Checking exceptions
2024-05-03 00:21:50,037:INFO:Importing libraries
2024-05-03 00:21:50,037:INFO:Copying training dataset
2024-05-03 00:21:50,037:INFO:Defining folds
2024-05-03 00:21:50,037:INFO:Declaring metric variables
2024-05-03 00:21:50,037:INFO:Importing untrained model
2024-05-03 00:21:50,037:INFO:Linear Regression Imported successfully
2024-05-03 00:21:50,037:INFO:Starting cross validation
2024-05-03 00:21:50,112:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:21:55,020:INFO:Calculating mean and std
2024-05-03 00:21:55,020:INFO:Creating metrics dataframe
2024-05-03 00:21:55,020:INFO:Uploading results into container
2024-05-03 00:21:55,020:INFO:Uploading model into container now
2024-05-03 00:21:55,020:INFO:_master_model_container: 1
2024-05-03 00:21:55,020:INFO:_display_container: 2
2024-05-03 00:21:55,020:INFO:LinearRegression(n_jobs=-1)
2024-05-03 00:21:55,020:INFO:create_model() successfully completed......................................
2024-05-03 00:21:55,126:INFO:SubProcess create_model() end ==================================
2024-05-03 00:21:55,126:INFO:Creating metrics dataframe
2024-05-03 00:21:55,126:INFO:Initializing Lasso Regression
2024-05-03 00:21:55,126:INFO:Total runtime is 0.08480656544367472 minutes
2024-05-03 00:21:55,126:INFO:SubProcess create_model() called ==================================
2024-05-03 00:21:55,126:INFO:Initializing create_model()
2024-05-03 00:21:55,126:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296396AAFE0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000296606614E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:21:55,126:INFO:Checking exceptions
2024-05-03 00:21:55,126:INFO:Importing libraries
2024-05-03 00:21:55,126:INFO:Copying training dataset
2024-05-03 00:21:55,126:INFO:Defining folds
2024-05-03 00:21:55,126:INFO:Declaring metric variables
2024-05-03 00:21:55,126:INFO:Importing untrained model
2024-05-03 00:21:55,134:INFO:Lasso Regression Imported successfully
2024-05-03 00:21:55,134:INFO:Starting cross validation
2024-05-03 00:21:55,134:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:21:58,340:INFO:Calculating mean and std
2024-05-03 00:21:58,340:INFO:Creating metrics dataframe
2024-05-03 00:21:58,340:INFO:Uploading results into container
2024-05-03 00:21:58,340:INFO:Uploading model into container now
2024-05-03 00:21:58,340:INFO:_master_model_container: 2
2024-05-03 00:21:58,340:INFO:_display_container: 2
2024-05-03 00:21:58,340:INFO:Lasso(random_state=123)
2024-05-03 00:21:58,340:INFO:create_model() successfully completed......................................
2024-05-03 00:21:58,446:INFO:SubProcess create_model() end ==================================
2024-05-03 00:21:58,446:INFO:Creating metrics dataframe
2024-05-03 00:21:58,446:INFO:Initializing Ridge Regression
2024-05-03 00:21:58,446:INFO:Total runtime is 0.1401532769203186 minutes
2024-05-03 00:21:58,446:INFO:SubProcess create_model() called ==================================
2024-05-03 00:21:58,446:INFO:Initializing create_model()
2024-05-03 00:21:58,446:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296396AAFE0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000296606614E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:21:58,446:INFO:Checking exceptions
2024-05-03 00:21:58,446:INFO:Importing libraries
2024-05-03 00:21:58,446:INFO:Copying training dataset
2024-05-03 00:21:58,446:INFO:Defining folds
2024-05-03 00:21:58,446:INFO:Declaring metric variables
2024-05-03 00:21:58,446:INFO:Importing untrained model
2024-05-03 00:21:58,446:INFO:Ridge Regression Imported successfully
2024-05-03 00:21:58,446:INFO:Starting cross validation
2024-05-03 00:21:58,446:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:21:58,503:INFO:Calculating mean and std
2024-05-03 00:21:58,504:INFO:Creating metrics dataframe
2024-05-03 00:21:58,505:INFO:Uploading results into container
2024-05-03 00:21:58,505:INFO:Uploading model into container now
2024-05-03 00:21:58,505:INFO:_master_model_container: 3
2024-05-03 00:21:58,505:INFO:_display_container: 2
2024-05-03 00:21:58,505:INFO:Ridge(random_state=123)
2024-05-03 00:21:58,505:INFO:create_model() successfully completed......................................
2024-05-03 00:21:58,617:INFO:SubProcess create_model() end ==================================
2024-05-03 00:21:58,617:INFO:Creating metrics dataframe
2024-05-03 00:21:58,617:INFO:Initializing Elastic Net
2024-05-03 00:21:58,617:INFO:Total runtime is 0.14299916823705036 minutes
2024-05-03 00:21:58,617:INFO:SubProcess create_model() called ==================================
2024-05-03 00:21:58,617:INFO:Initializing create_model()
2024-05-03 00:21:58,617:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296396AAFE0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000296606614E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:21:58,617:INFO:Checking exceptions
2024-05-03 00:21:58,617:INFO:Importing libraries
2024-05-03 00:21:58,617:INFO:Copying training dataset
2024-05-03 00:21:58,633:INFO:Defining folds
2024-05-03 00:21:58,633:INFO:Declaring metric variables
2024-05-03 00:21:58,633:INFO:Importing untrained model
2024-05-03 00:21:58,633:INFO:Elastic Net Imported successfully
2024-05-03 00:21:58,633:INFO:Starting cross validation
2024-05-03 00:21:58,633:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:21:58,705:INFO:Calculating mean and std
2024-05-03 00:21:58,705:INFO:Creating metrics dataframe
2024-05-03 00:21:58,705:INFO:Uploading results into container
2024-05-03 00:21:58,705:INFO:Uploading model into container now
2024-05-03 00:21:58,705:INFO:_master_model_container: 4
2024-05-03 00:21:58,705:INFO:_display_container: 2
2024-05-03 00:21:58,709:INFO:ElasticNet(random_state=123)
2024-05-03 00:21:58,709:INFO:create_model() successfully completed......................................
2024-05-03 00:21:58,794:INFO:SubProcess create_model() end ==================================
2024-05-03 00:21:58,794:INFO:Creating metrics dataframe
2024-05-03 00:21:58,802:INFO:Initializing Least Angle Regression
2024-05-03 00:21:58,802:INFO:Total runtime is 0.14608038663864134 minutes
2024-05-03 00:21:58,802:INFO:SubProcess create_model() called ==================================
2024-05-03 00:21:58,802:INFO:Initializing create_model()
2024-05-03 00:21:58,802:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296396AAFE0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000296606614E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:21:58,802:INFO:Checking exceptions
2024-05-03 00:21:58,802:INFO:Importing libraries
2024-05-03 00:21:58,802:INFO:Copying training dataset
2024-05-03 00:21:58,802:INFO:Defining folds
2024-05-03 00:21:58,802:INFO:Declaring metric variables
2024-05-03 00:21:58,802:INFO:Importing untrained model
2024-05-03 00:21:58,802:INFO:Least Angle Regression Imported successfully
2024-05-03 00:21:58,802:INFO:Starting cross validation
2024-05-03 00:21:58,802:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:21:58,883:INFO:Calculating mean and std
2024-05-03 00:21:58,885:INFO:Creating metrics dataframe
2024-05-03 00:21:58,885:INFO:Uploading results into container
2024-05-03 00:21:58,885:INFO:Uploading model into container now
2024-05-03 00:21:58,885:INFO:_master_model_container: 5
2024-05-03 00:21:58,885:INFO:_display_container: 2
2024-05-03 00:21:58,885:INFO:Lars(random_state=123)
2024-05-03 00:21:58,885:INFO:create_model() successfully completed......................................
2024-05-03 00:21:58,989:INFO:SubProcess create_model() end ==================================
2024-05-03 00:21:58,989:INFO:Creating metrics dataframe
2024-05-03 00:21:58,989:INFO:Initializing Lasso Least Angle Regression
2024-05-03 00:21:58,989:INFO:Total runtime is 0.14920202096303303 minutes
2024-05-03 00:21:58,989:INFO:SubProcess create_model() called ==================================
2024-05-03 00:21:58,989:INFO:Initializing create_model()
2024-05-03 00:21:58,989:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296396AAFE0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000296606614E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:21:58,989:INFO:Checking exceptions
2024-05-03 00:21:58,989:INFO:Importing libraries
2024-05-03 00:21:58,989:INFO:Copying training dataset
2024-05-03 00:21:58,989:INFO:Defining folds
2024-05-03 00:21:58,989:INFO:Declaring metric variables
2024-05-03 00:21:58,989:INFO:Importing untrained model
2024-05-03 00:21:58,989:INFO:Lasso Least Angle Regression Imported successfully
2024-05-03 00:21:58,996:INFO:Starting cross validation
2024-05-03 00:21:58,996:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:21:59,069:INFO:Calculating mean and std
2024-05-03 00:21:59,069:INFO:Creating metrics dataframe
2024-05-03 00:21:59,069:INFO:Uploading results into container
2024-05-03 00:21:59,069:INFO:Uploading model into container now
2024-05-03 00:21:59,069:INFO:_master_model_container: 6
2024-05-03 00:21:59,069:INFO:_display_container: 2
2024-05-03 00:21:59,069:INFO:LassoLars(random_state=123)
2024-05-03 00:21:59,069:INFO:create_model() successfully completed......................................
2024-05-03 00:21:59,183:INFO:SubProcess create_model() end ==================================
2024-05-03 00:21:59,183:INFO:Creating metrics dataframe
2024-05-03 00:21:59,183:INFO:Initializing Orthogonal Matching Pursuit
2024-05-03 00:21:59,183:INFO:Total runtime is 0.15243439277013143 minutes
2024-05-03 00:21:59,191:INFO:SubProcess create_model() called ==================================
2024-05-03 00:21:59,192:INFO:Initializing create_model()
2024-05-03 00:21:59,192:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296396AAFE0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000296606614E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:21:59,192:INFO:Checking exceptions
2024-05-03 00:21:59,192:INFO:Importing libraries
2024-05-03 00:21:59,192:INFO:Copying training dataset
2024-05-03 00:21:59,192:INFO:Defining folds
2024-05-03 00:21:59,192:INFO:Declaring metric variables
2024-05-03 00:21:59,192:INFO:Importing untrained model
2024-05-03 00:21:59,192:INFO:Orthogonal Matching Pursuit Imported successfully
2024-05-03 00:21:59,192:INFO:Starting cross validation
2024-05-03 00:21:59,192:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:21:59,279:INFO:Calculating mean and std
2024-05-03 00:21:59,313:INFO:Creating metrics dataframe
2024-05-03 00:21:59,313:INFO:Uploading results into container
2024-05-03 00:21:59,313:INFO:Uploading model into container now
2024-05-03 00:21:59,313:INFO:_master_model_container: 7
2024-05-03 00:21:59,313:INFO:_display_container: 2
2024-05-03 00:21:59,313:INFO:OrthogonalMatchingPursuit()
2024-05-03 00:21:59,313:INFO:create_model() successfully completed......................................
2024-05-03 00:21:59,443:INFO:SubProcess create_model() end ==================================
2024-05-03 00:21:59,443:INFO:Creating metrics dataframe
2024-05-03 00:21:59,443:INFO:Initializing Bayesian Ridge
2024-05-03 00:21:59,443:INFO:Total runtime is 0.15676455895105998 minutes
2024-05-03 00:21:59,443:INFO:SubProcess create_model() called ==================================
2024-05-03 00:21:59,443:INFO:Initializing create_model()
2024-05-03 00:21:59,443:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296396AAFE0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000296606614E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:21:59,443:INFO:Checking exceptions
2024-05-03 00:21:59,443:INFO:Importing libraries
2024-05-03 00:21:59,443:INFO:Copying training dataset
2024-05-03 00:21:59,443:INFO:Defining folds
2024-05-03 00:21:59,443:INFO:Declaring metric variables
2024-05-03 00:21:59,443:INFO:Importing untrained model
2024-05-03 00:21:59,443:INFO:Bayesian Ridge Imported successfully
2024-05-03 00:21:59,443:INFO:Starting cross validation
2024-05-03 00:21:59,443:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:21:59,516:INFO:Calculating mean and std
2024-05-03 00:21:59,516:INFO:Creating metrics dataframe
2024-05-03 00:21:59,551:INFO:Uploading results into container
2024-05-03 00:21:59,551:INFO:Uploading model into container now
2024-05-03 00:21:59,551:INFO:_master_model_container: 8
2024-05-03 00:21:59,551:INFO:_display_container: 2
2024-05-03 00:21:59,551:INFO:BayesianRidge()
2024-05-03 00:21:59,551:INFO:create_model() successfully completed......................................
2024-05-03 00:21:59,648:INFO:SubProcess create_model() end ==================================
2024-05-03 00:21:59,648:INFO:Creating metrics dataframe
2024-05-03 00:21:59,648:INFO:Initializing Passive Aggressive Regressor
2024-05-03 00:21:59,648:INFO:Total runtime is 0.16017751296361288 minutes
2024-05-03 00:21:59,648:INFO:SubProcess create_model() called ==================================
2024-05-03 00:21:59,648:INFO:Initializing create_model()
2024-05-03 00:21:59,648:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296396AAFE0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000296606614E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:21:59,648:INFO:Checking exceptions
2024-05-03 00:21:59,648:INFO:Importing libraries
2024-05-03 00:21:59,648:INFO:Copying training dataset
2024-05-03 00:21:59,648:INFO:Defining folds
2024-05-03 00:21:59,648:INFO:Declaring metric variables
2024-05-03 00:21:59,648:INFO:Importing untrained model
2024-05-03 00:21:59,648:INFO:Passive Aggressive Regressor Imported successfully
2024-05-03 00:21:59,648:INFO:Starting cross validation
2024-05-03 00:21:59,648:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:21:59,719:INFO:Calculating mean and std
2024-05-03 00:21:59,719:INFO:Creating metrics dataframe
2024-05-03 00:21:59,719:INFO:Uploading results into container
2024-05-03 00:21:59,719:INFO:Uploading model into container now
2024-05-03 00:21:59,719:INFO:_master_model_container: 9
2024-05-03 00:21:59,719:INFO:_display_container: 2
2024-05-03 00:21:59,719:INFO:PassiveAggressiveRegressor(random_state=123)
2024-05-03 00:21:59,719:INFO:create_model() successfully completed......................................
2024-05-03 00:21:59,849:INFO:SubProcess create_model() end ==================================
2024-05-03 00:21:59,849:INFO:Creating metrics dataframe
2024-05-03 00:21:59,849:INFO:Initializing Huber Regressor
2024-05-03 00:21:59,849:INFO:Total runtime is 0.1635382850964864 minutes
2024-05-03 00:21:59,849:INFO:SubProcess create_model() called ==================================
2024-05-03 00:21:59,849:INFO:Initializing create_model()
2024-05-03 00:21:59,849:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296396AAFE0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000296606614E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:21:59,849:INFO:Checking exceptions
2024-05-03 00:21:59,849:INFO:Importing libraries
2024-05-03 00:21:59,849:INFO:Copying training dataset
2024-05-03 00:21:59,857:INFO:Defining folds
2024-05-03 00:21:59,857:INFO:Declaring metric variables
2024-05-03 00:21:59,857:INFO:Importing untrained model
2024-05-03 00:21:59,857:INFO:Huber Regressor Imported successfully
2024-05-03 00:21:59,857:INFO:Starting cross validation
2024-05-03 00:21:59,857:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:21:59,940:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-05-03 00:21:59,949:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-05-03 00:21:59,965:INFO:Calculating mean and std
2024-05-03 00:21:59,965:INFO:Creating metrics dataframe
2024-05-03 00:21:59,965:INFO:Uploading results into container
2024-05-03 00:21:59,965:INFO:Uploading model into container now
2024-05-03 00:21:59,965:INFO:_master_model_container: 10
2024-05-03 00:21:59,965:INFO:_display_container: 2
2024-05-03 00:21:59,965:INFO:HuberRegressor()
2024-05-03 00:21:59,965:INFO:create_model() successfully completed......................................
2024-05-03 00:22:00,054:INFO:SubProcess create_model() end ==================================
2024-05-03 00:22:00,057:INFO:Creating metrics dataframe
2024-05-03 00:22:00,057:INFO:Initializing K Neighbors Regressor
2024-05-03 00:22:00,057:INFO:Total runtime is 0.16699631611506144 minutes
2024-05-03 00:22:00,057:INFO:SubProcess create_model() called ==================================
2024-05-03 00:22:00,057:INFO:Initializing create_model()
2024-05-03 00:22:00,057:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296396AAFE0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000296606614E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:22:00,057:INFO:Checking exceptions
2024-05-03 00:22:00,057:INFO:Importing libraries
2024-05-03 00:22:00,057:INFO:Copying training dataset
2024-05-03 00:22:00,057:INFO:Defining folds
2024-05-03 00:22:00,057:INFO:Declaring metric variables
2024-05-03 00:22:00,057:INFO:Importing untrained model
2024-05-03 00:22:00,057:INFO:K Neighbors Regressor Imported successfully
2024-05-03 00:22:00,057:INFO:Starting cross validation
2024-05-03 00:22:00,057:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:22:00,167:INFO:Calculating mean and std
2024-05-03 00:22:00,168:INFO:Creating metrics dataframe
2024-05-03 00:22:00,168:INFO:Uploading results into container
2024-05-03 00:22:00,168:INFO:Uploading model into container now
2024-05-03 00:22:00,168:INFO:_master_model_container: 11
2024-05-03 00:22:00,168:INFO:_display_container: 2
2024-05-03 00:22:00,168:INFO:KNeighborsRegressor(n_jobs=-1)
2024-05-03 00:22:00,168:INFO:create_model() successfully completed......................................
2024-05-03 00:22:00,289:INFO:SubProcess create_model() end ==================================
2024-05-03 00:22:00,289:INFO:Creating metrics dataframe
2024-05-03 00:22:00,297:INFO:Initializing Decision Tree Regressor
2024-05-03 00:22:00,297:INFO:Total runtime is 0.17099743286768596 minutes
2024-05-03 00:22:00,297:INFO:SubProcess create_model() called ==================================
2024-05-03 00:22:00,297:INFO:Initializing create_model()
2024-05-03 00:22:00,297:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296396AAFE0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000296606614E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:22:00,297:INFO:Checking exceptions
2024-05-03 00:22:00,297:INFO:Importing libraries
2024-05-03 00:22:00,297:INFO:Copying training dataset
2024-05-03 00:22:00,305:INFO:Defining folds
2024-05-03 00:22:00,305:INFO:Declaring metric variables
2024-05-03 00:22:00,305:INFO:Importing untrained model
2024-05-03 00:22:00,305:INFO:Decision Tree Regressor Imported successfully
2024-05-03 00:22:00,305:INFO:Starting cross validation
2024-05-03 00:22:00,305:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:22:00,400:INFO:Calculating mean and std
2024-05-03 00:22:00,400:INFO:Creating metrics dataframe
2024-05-03 00:22:00,400:INFO:Uploading results into container
2024-05-03 00:22:00,400:INFO:Uploading model into container now
2024-05-03 00:22:00,400:INFO:_master_model_container: 12
2024-05-03 00:22:00,400:INFO:_display_container: 2
2024-05-03 00:22:00,400:INFO:DecisionTreeRegressor(random_state=123)
2024-05-03 00:22:00,400:INFO:create_model() successfully completed......................................
2024-05-03 00:22:00,537:INFO:SubProcess create_model() end ==================================
2024-05-03 00:22:00,537:INFO:Creating metrics dataframe
2024-05-03 00:22:00,542:INFO:Initializing Random Forest Regressor
2024-05-03 00:22:00,542:INFO:Total runtime is 0.1750802238782247 minutes
2024-05-03 00:22:00,542:INFO:SubProcess create_model() called ==================================
2024-05-03 00:22:00,542:INFO:Initializing create_model()
2024-05-03 00:22:00,542:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296396AAFE0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000296606614E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:22:00,542:INFO:Checking exceptions
2024-05-03 00:22:00,542:INFO:Importing libraries
2024-05-03 00:22:00,542:INFO:Copying training dataset
2024-05-03 00:22:00,546:INFO:Defining folds
2024-05-03 00:22:00,546:INFO:Declaring metric variables
2024-05-03 00:22:00,547:INFO:Importing untrained model
2024-05-03 00:22:00,547:INFO:Random Forest Regressor Imported successfully
2024-05-03 00:22:00,547:INFO:Starting cross validation
2024-05-03 00:22:00,548:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:22:00,925:INFO:Calculating mean and std
2024-05-03 00:22:00,925:INFO:Creating metrics dataframe
2024-05-03 00:22:00,925:INFO:Uploading results into container
2024-05-03 00:22:00,925:INFO:Uploading model into container now
2024-05-03 00:22:00,925:INFO:_master_model_container: 13
2024-05-03 00:22:00,925:INFO:_display_container: 2
2024-05-03 00:22:00,925:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2024-05-03 00:22:00,925:INFO:create_model() successfully completed......................................
2024-05-03 00:22:01,014:INFO:SubProcess create_model() end ==================================
2024-05-03 00:22:01,014:INFO:Creating metrics dataframe
2024-05-03 00:22:01,023:INFO:Initializing Extra Trees Regressor
2024-05-03 00:22:01,023:INFO:Total runtime is 0.1830915609995524 minutes
2024-05-03 00:22:01,023:INFO:SubProcess create_model() called ==================================
2024-05-03 00:22:01,023:INFO:Initializing create_model()
2024-05-03 00:22:01,023:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296396AAFE0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000296606614E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:22:01,023:INFO:Checking exceptions
2024-05-03 00:22:01,023:INFO:Importing libraries
2024-05-03 00:22:01,023:INFO:Copying training dataset
2024-05-03 00:22:01,023:INFO:Defining folds
2024-05-03 00:22:01,023:INFO:Declaring metric variables
2024-05-03 00:22:01,023:INFO:Importing untrained model
2024-05-03 00:22:01,023:INFO:Extra Trees Regressor Imported successfully
2024-05-03 00:22:01,023:INFO:Starting cross validation
2024-05-03 00:22:01,023:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:22:01,298:INFO:Calculating mean and std
2024-05-03 00:22:01,298:INFO:Creating metrics dataframe
2024-05-03 00:22:01,298:INFO:Uploading results into container
2024-05-03 00:22:01,298:INFO:Uploading model into container now
2024-05-03 00:22:01,298:INFO:_master_model_container: 14
2024-05-03 00:22:01,298:INFO:_display_container: 2
2024-05-03 00:22:01,298:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-05-03 00:22:01,298:INFO:create_model() successfully completed......................................
2024-05-03 00:22:01,437:INFO:SubProcess create_model() end ==================================
2024-05-03 00:22:01,437:INFO:Creating metrics dataframe
2024-05-03 00:22:01,446:INFO:Initializing AdaBoost Regressor
2024-05-03 00:22:01,446:INFO:Total runtime is 0.19014015197753906 minutes
2024-05-03 00:22:01,446:INFO:SubProcess create_model() called ==================================
2024-05-03 00:22:01,446:INFO:Initializing create_model()
2024-05-03 00:22:01,446:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296396AAFE0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000296606614E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:22:01,446:INFO:Checking exceptions
2024-05-03 00:22:01,446:INFO:Importing libraries
2024-05-03 00:22:01,446:INFO:Copying training dataset
2024-05-03 00:22:01,454:INFO:Defining folds
2024-05-03 00:22:01,454:INFO:Declaring metric variables
2024-05-03 00:22:01,454:INFO:Importing untrained model
2024-05-03 00:22:01,454:INFO:AdaBoost Regressor Imported successfully
2024-05-03 00:22:01,454:INFO:Starting cross validation
2024-05-03 00:22:01,454:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:22:01,658:INFO:Calculating mean and std
2024-05-03 00:22:01,658:INFO:Creating metrics dataframe
2024-05-03 00:22:01,658:INFO:Uploading results into container
2024-05-03 00:22:01,658:INFO:Uploading model into container now
2024-05-03 00:22:01,658:INFO:_master_model_container: 15
2024-05-03 00:22:01,658:INFO:_display_container: 2
2024-05-03 00:22:01,658:INFO:AdaBoostRegressor(random_state=123)
2024-05-03 00:22:01,658:INFO:create_model() successfully completed......................................
2024-05-03 00:22:01,750:INFO:SubProcess create_model() end ==================================
2024-05-03 00:22:01,750:INFO:Creating metrics dataframe
2024-05-03 00:22:01,753:INFO:Initializing Gradient Boosting Regressor
2024-05-03 00:22:01,753:INFO:Total runtime is 0.19526116450627645 minutes
2024-05-03 00:22:01,753:INFO:SubProcess create_model() called ==================================
2024-05-03 00:22:01,753:INFO:Initializing create_model()
2024-05-03 00:22:01,753:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296396AAFE0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000296606614E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:22:01,753:INFO:Checking exceptions
2024-05-03 00:22:01,753:INFO:Importing libraries
2024-05-03 00:22:01,753:INFO:Copying training dataset
2024-05-03 00:22:01,754:INFO:Defining folds
2024-05-03 00:22:01,754:INFO:Declaring metric variables
2024-05-03 00:22:01,755:INFO:Importing untrained model
2024-05-03 00:22:01,755:INFO:Gradient Boosting Regressor Imported successfully
2024-05-03 00:22:01,755:INFO:Starting cross validation
2024-05-03 00:22:01,755:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:22:01,924:INFO:Calculating mean and std
2024-05-03 00:22:01,924:INFO:Creating metrics dataframe
2024-05-03 00:22:01,924:INFO:Uploading results into container
2024-05-03 00:22:01,924:INFO:Uploading model into container now
2024-05-03 00:22:01,924:INFO:_master_model_container: 16
2024-05-03 00:22:01,924:INFO:_display_container: 2
2024-05-03 00:22:01,924:INFO:GradientBoostingRegressor(random_state=123)
2024-05-03 00:22:01,924:INFO:create_model() successfully completed......................................
2024-05-03 00:22:02,046:INFO:SubProcess create_model() end ==================================
2024-05-03 00:22:02,046:INFO:Creating metrics dataframe
2024-05-03 00:22:02,054:INFO:Initializing Extreme Gradient Boosting
2024-05-03 00:22:02,054:INFO:Total runtime is 0.20028311014175415 minutes
2024-05-03 00:22:02,054:INFO:SubProcess create_model() called ==================================
2024-05-03 00:22:02,054:INFO:Initializing create_model()
2024-05-03 00:22:02,054:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296396AAFE0>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000296606614E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:22:02,054:INFO:Checking exceptions
2024-05-03 00:22:02,054:INFO:Importing libraries
2024-05-03 00:22:02,054:INFO:Copying training dataset
2024-05-03 00:22:02,054:INFO:Defining folds
2024-05-03 00:22:02,054:INFO:Declaring metric variables
2024-05-03 00:22:02,054:INFO:Importing untrained model
2024-05-03 00:22:02,054:INFO:Extreme Gradient Boosting Imported successfully
2024-05-03 00:22:02,054:INFO:Starting cross validation
2024-05-03 00:22:02,054:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:22:02,216:INFO:Calculating mean and std
2024-05-03 00:22:02,216:INFO:Creating metrics dataframe
2024-05-03 00:22:02,216:INFO:Uploading results into container
2024-05-03 00:22:02,216:INFO:Uploading model into container now
2024-05-03 00:22:02,216:INFO:_master_model_container: 17
2024-05-03 00:22:02,216:INFO:_display_container: 2
2024-05-03 00:22:02,216:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=123, ...)
2024-05-03 00:22:02,216:INFO:create_model() successfully completed......................................
2024-05-03 00:22:02,312:INFO:SubProcess create_model() end ==================================
2024-05-03 00:22:02,312:INFO:Creating metrics dataframe
2024-05-03 00:22:02,312:INFO:Initializing Light Gradient Boosting Machine
2024-05-03 00:22:02,312:INFO:Total runtime is 0.20458707412083943 minutes
2024-05-03 00:22:02,312:INFO:SubProcess create_model() called ==================================
2024-05-03 00:22:02,312:INFO:Initializing create_model()
2024-05-03 00:22:02,312:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296396AAFE0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000296606614E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:22:02,320:INFO:Checking exceptions
2024-05-03 00:22:02,320:INFO:Importing libraries
2024-05-03 00:22:02,320:INFO:Copying training dataset
2024-05-03 00:22:02,321:INFO:Defining folds
2024-05-03 00:22:02,321:INFO:Declaring metric variables
2024-05-03 00:22:02,321:INFO:Importing untrained model
2024-05-03 00:22:02,321:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-03 00:22:02,321:INFO:Starting cross validation
2024-05-03 00:22:02,321:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:22:02,753:INFO:Calculating mean and std
2024-05-03 00:22:02,754:INFO:Creating metrics dataframe
2024-05-03 00:22:02,754:INFO:Uploading results into container
2024-05-03 00:22:02,754:INFO:Uploading model into container now
2024-05-03 00:22:02,754:INFO:_master_model_container: 18
2024-05-03 00:22:02,754:INFO:_display_container: 2
2024-05-03 00:22:02,754:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2024-05-03 00:22:02,754:INFO:create_model() successfully completed......................................
2024-05-03 00:22:02,865:INFO:SubProcess create_model() end ==================================
2024-05-03 00:22:02,865:INFO:Creating metrics dataframe
2024-05-03 00:22:02,865:INFO:Initializing CatBoost Regressor
2024-05-03 00:22:02,865:INFO:Total runtime is 0.21380571524302164 minutes
2024-05-03 00:22:02,865:INFO:SubProcess create_model() called ==================================
2024-05-03 00:22:02,865:INFO:Initializing create_model()
2024-05-03 00:22:02,865:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296396AAFE0>, estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000296606614E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:22:02,865:INFO:Checking exceptions
2024-05-03 00:22:02,865:INFO:Importing libraries
2024-05-03 00:22:02,865:INFO:Copying training dataset
2024-05-03 00:22:02,865:INFO:Defining folds
2024-05-03 00:22:02,865:INFO:Declaring metric variables
2024-05-03 00:22:02,865:INFO:Importing untrained model
2024-05-03 00:22:02,865:INFO:CatBoost Regressor Imported successfully
2024-05-03 00:22:02,865:INFO:Starting cross validation
2024-05-03 00:22:02,874:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:22:06,871:INFO:Calculating mean and std
2024-05-03 00:22:06,871:INFO:Creating metrics dataframe
2024-05-03 00:22:06,871:INFO:Uploading results into container
2024-05-03 00:22:06,871:INFO:Uploading model into container now
2024-05-03 00:22:06,879:INFO:_master_model_container: 19
2024-05-03 00:22:06,879:INFO:_display_container: 2
2024-05-03 00:22:06,879:INFO:<catboost.core.CatBoostRegressor object at 0x00000296606618A0>
2024-05-03 00:22:06,879:INFO:create_model() successfully completed......................................
2024-05-03 00:22:07,014:INFO:SubProcess create_model() end ==================================
2024-05-03 00:22:07,014:INFO:Creating metrics dataframe
2024-05-03 00:22:07,016:INFO:Initializing Dummy Regressor
2024-05-03 00:22:07,016:INFO:Total runtime is 0.28298267126083376 minutes
2024-05-03 00:22:07,016:INFO:SubProcess create_model() called ==================================
2024-05-03 00:22:07,016:INFO:Initializing create_model()
2024-05-03 00:22:07,016:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296396AAFE0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000296606614E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:22:07,016:INFO:Checking exceptions
2024-05-03 00:22:07,016:INFO:Importing libraries
2024-05-03 00:22:07,016:INFO:Copying training dataset
2024-05-03 00:22:07,018:INFO:Defining folds
2024-05-03 00:22:07,018:INFO:Declaring metric variables
2024-05-03 00:22:07,018:INFO:Importing untrained model
2024-05-03 00:22:07,018:INFO:Dummy Regressor Imported successfully
2024-05-03 00:22:07,018:INFO:Starting cross validation
2024-05-03 00:22:07,018:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:22:07,118:INFO:Calculating mean and std
2024-05-03 00:22:07,118:INFO:Creating metrics dataframe
2024-05-03 00:22:07,118:INFO:Uploading results into container
2024-05-03 00:22:07,118:INFO:Uploading model into container now
2024-05-03 00:22:07,118:INFO:_master_model_container: 20
2024-05-03 00:22:07,118:INFO:_display_container: 2
2024-05-03 00:22:07,118:INFO:DummyRegressor()
2024-05-03 00:22:07,118:INFO:create_model() successfully completed......................................
2024-05-03 00:22:07,240:INFO:SubProcess create_model() end ==================================
2024-05-03 00:22:07,240:INFO:Creating metrics dataframe
2024-05-03 00:22:07,312:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-05-03 00:22:07,312:INFO:Initializing create_model()
2024-05-03 00:22:07,312:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296396AAFE0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:22:07,312:INFO:Checking exceptions
2024-05-03 00:22:07,312:INFO:Importing libraries
2024-05-03 00:22:07,312:INFO:Copying training dataset
2024-05-03 00:22:07,320:INFO:Defining folds
2024-05-03 00:22:07,320:INFO:Declaring metric variables
2024-05-03 00:22:07,320:INFO:Importing untrained model
2024-05-03 00:22:07,320:INFO:Declaring custom model
2024-05-03 00:22:07,320:INFO:Extra Trees Regressor Imported successfully
2024-05-03 00:22:07,328:INFO:Cross validation set to False
2024-05-03 00:22:07,328:INFO:Fitting Model
2024-05-03 00:22:07,401:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-05-03 00:22:07,401:INFO:create_model() successfully completed......................................
2024-05-03 00:22:07,506:INFO:_master_model_container: 20
2024-05-03 00:22:07,506:INFO:_display_container: 2
2024-05-03 00:22:07,506:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-05-03 00:22:07,506:INFO:compare_models() successfully completed......................................
2024-05-03 00:22:07,506:INFO:Initializing evaluate_model()
2024-05-03 00:22:07,506:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296396AAFE0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-05-03 00:22:07,636:INFO:Initializing plot_model()
2024-05-03 00:22:07,636:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296396AAFE0>, system=True)
2024-05-03 00:22:07,636:INFO:Checking exceptions
2024-05-03 00:22:07,690:INFO:Preloading libraries
2024-05-03 00:22:07,708:INFO:Copying training dataset
2024-05-03 00:22:07,708:INFO:Plot type: pipeline
2024-05-03 00:22:12,519:INFO:Visual Rendered Successfully
2024-05-03 00:22:12,653:INFO:plot_model() successfully completed......................................
2024-05-03 00:22:12,661:INFO:Initializing plot_model()
2024-05-03 00:22:12,661:INFO:plot_model(plot=residuals, fold=None, verbose=True, display=None, display_format=None, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296396AAFE0>, system=True)
2024-05-03 00:22:12,661:INFO:Checking exceptions
2024-05-03 00:22:12,687:INFO:Preloading libraries
2024-05-03 00:22:12,694:INFO:Copying training dataset
2024-05-03 00:22:12,694:INFO:Plot type: residuals
2024-05-03 00:22:12,906:INFO:Fitting Model
2024-05-03 00:22:12,912:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesRegressor was fitted with feature names
  warnings.warn(

2024-05-03 00:22:13,058:INFO:Scoring test/hold-out set
2024-05-03 00:22:15,169:INFO:Visual Rendered Successfully
2024-05-03 00:22:15,279:INFO:plot_model() successfully completed......................................
2024-05-03 00:22:15,285:INFO:Initializing plot_model()
2024-05-03 00:22:15,285:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296396AAFE0>, system=True)
2024-05-03 00:22:15,285:INFO:Checking exceptions
2024-05-03 00:22:15,309:INFO:Preloading libraries
2024-05-03 00:22:15,324:INFO:Copying training dataset
2024-05-03 00:22:15,324:INFO:Plot type: feature
2024-05-03 00:22:15,324:WARNING:No coef_ found. Trying feature_importances_
2024-05-03 00:22:18,979:INFO:Visual Rendered Successfully
2024-05-03 00:22:19,090:INFO:plot_model() successfully completed......................................
2024-05-03 00:22:19,090:INFO:Initializing predict_model()
2024-05-03 00:22:19,090:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296396AAFE0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002966074B910>)
2024-05-03 00:22:19,090:INFO:Checking exceptions
2024-05-03 00:22:19,090:INFO:Preloading libraries
2024-05-03 00:22:19,139:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-05-03 00:22:19,261:INFO:Initializing predict_model()
2024-05-03 00:22:19,261:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296396AAFE0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002966074B910>)
2024-05-03 00:22:19,261:INFO:Checking exceptions
2024-05-03 00:22:19,261:INFO:Preloading libraries
2024-05-03 00:22:19,261:INFO:Set up data.
2024-05-03 00:22:19,261:INFO:Set up index.
2024-05-03 00:22:19,304:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-05-03 00:22:19,418:INFO:Initializing save_model()
2024-05-03 00:22:19,418:INFO:save_model(model=ExtraTreesRegressor(n_jobs=-1, random_state=123), model_name=my_best_pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\seyzu\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Jsc', 'Voc', 'FF', 'Sr', 'Sp',
                                             'Temp', 'Class'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2024-05-03 00:22:19,418:INFO:Adding model into prep_pipe
2024-05-03 00:22:19,514:INFO:my_best_pipeline.pkl saved in current working directory
2024-05-03 00:22:19,522:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Jsc', 'Voc', 'FF', 'Sr', 'Sp',
                                             'Temp', 'Class'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2024-05-03 00:22:19,522:INFO:save_model() successfully completed......................................
2024-05-03 00:22:19,645:INFO:Initializing load_model()
2024-05-03 00:22:19,645:INFO:load_model(model_name=my_best_pipeline, platform=None, authentication=None, verbose=True)
2024-05-03 00:31:42,187:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-03 00:31:42,187:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-03 00:31:42,187:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-03 00:31:42,187:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-03 00:31:42,447:INFO:PyCaret RegressionExperiment
2024-05-03 00:31:42,447:INFO:Logging name: reg-default-name
2024-05-03 00:31:42,447:INFO:ML Usecase: MLUsecase.REGRESSION
2024-05-03 00:31:42,447:INFO:version 3.3.2
2024-05-03 00:31:42,447:INFO:Initializing setup()
2024-05-03 00:31:42,447:INFO:self.USI: b806
2024-05-03 00:31:42,447:INFO:self._variable_keys: {'html_param', 'gpu_param', 'y', 'data', 'USI', 'transform_target_param', 'exp_name_log', 'X_test', 'y_train', 'idx', 'fold_shuffle_param', 'fold_groups_param', 'X_train', 'y_test', 'log_plots_param', 'fold_generator', 'memory', '_ml_usecase', 'logging_param', 'seed', 'target_param', 'gpu_n_jobs_param', 'pipeline', '_available_plots', 'X', 'exp_id', 'n_jobs_param'}
2024-05-03 00:31:42,447:INFO:Checking environment
2024-05-03 00:31:42,447:INFO:python_version: 3.10.11
2024-05-03 00:31:42,447:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-05-03 00:31:42,447:INFO:machine: AMD64
2024-05-03 00:31:42,470:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-03 00:31:42,470:INFO:Memory: svmem(total=8302092288, available=1717387264, percent=79.3, used=6584705024, free=1717387264)
2024-05-03 00:31:42,470:INFO:Physical Core: 12
2024-05-03 00:31:42,470:INFO:Logical Core: 16
2024-05-03 00:31:42,470:INFO:Checking libraries
2024-05-03 00:31:42,470:INFO:System:
2024-05-03 00:31:42,470:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-05-03 00:31:42,470:INFO:executable: C:\Users\seyzu\AppData\Local\Programs\Python\Python310\python.exe
2024-05-03 00:31:42,470:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-03 00:31:42,470:INFO:PyCaret required dependencies:
2024-05-03 00:31:43,235:INFO:                 pip: 24.0
2024-05-03 00:31:43,235:INFO:          setuptools: 65.5.0
2024-05-03 00:31:43,235:INFO:             pycaret: 3.3.2
2024-05-03 00:31:43,235:INFO:             IPython: 8.24.0
2024-05-03 00:31:43,235:INFO:          ipywidgets: 8.1.2
2024-05-03 00:31:43,235:INFO:                tqdm: 4.66.2
2024-05-03 00:31:43,235:INFO:               numpy: 1.26.4
2024-05-03 00:31:43,235:INFO:              pandas: 2.1.4
2024-05-03 00:31:43,235:INFO:              jinja2: 3.1.3
2024-05-03 00:31:43,235:INFO:               scipy: 1.11.4
2024-05-03 00:31:43,235:INFO:              joblib: 1.3.2
2024-05-03 00:31:43,235:INFO:             sklearn: 1.4.2
2024-05-03 00:31:43,235:INFO:                pyod: 1.1.3
2024-05-03 00:31:43,235:INFO:            imblearn: 0.12.2
2024-05-03 00:31:43,235:INFO:   category_encoders: 2.6.3
2024-05-03 00:31:43,235:INFO:            lightgbm: 4.3.0
2024-05-03 00:31:43,235:INFO:               numba: 0.59.1
2024-05-03 00:31:43,235:INFO:            requests: 2.31.0
2024-05-03 00:31:43,242:INFO:          matplotlib: 3.7.5
2024-05-03 00:31:43,242:INFO:          scikitplot: 0.3.7
2024-05-03 00:31:43,242:INFO:         yellowbrick: 1.5
2024-05-03 00:31:43,242:INFO:              plotly: 5.21.0
2024-05-03 00:31:43,242:INFO:    plotly-resampler: Not installed
2024-05-03 00:31:43,242:INFO:             kaleido: 0.2.1
2024-05-03 00:31:43,242:INFO:           schemdraw: 0.15
2024-05-03 00:31:43,242:INFO:         statsmodels: 0.14.2
2024-05-03 00:31:43,242:INFO:              sktime: 0.26.0
2024-05-03 00:31:43,242:INFO:               tbats: 1.1.3
2024-05-03 00:31:43,242:INFO:            pmdarima: 2.0.4
2024-05-03 00:31:43,242:INFO:              psutil: 5.9.8
2024-05-03 00:31:43,242:INFO:          markupsafe: 2.1.5
2024-05-03 00:31:43,242:INFO:             pickle5: Not installed
2024-05-03 00:31:43,242:INFO:         cloudpickle: 3.0.0
2024-05-03 00:31:43,242:INFO:         deprecation: 2.1.0
2024-05-03 00:31:43,242:INFO:              xxhash: 3.4.1
2024-05-03 00:31:43,242:INFO:           wurlitzer: Not installed
2024-05-03 00:31:43,242:INFO:PyCaret optional dependencies:
2024-05-03 00:31:45,085:INFO:                shap: 0.44.1
2024-05-03 00:31:45,085:INFO:           interpret: 0.6.1
2024-05-03 00:31:45,085:INFO:                umap: 0.5.6
2024-05-03 00:31:45,085:INFO:     ydata_profiling: 4.7.0
2024-05-03 00:31:45,085:INFO:  explainerdashboard: 0.4.7
2024-05-03 00:31:45,085:INFO:             autoviz: Not installed
2024-05-03 00:31:45,085:INFO:           fairlearn: 0.7.0
2024-05-03 00:31:45,085:INFO:          deepchecks: Not installed
2024-05-03 00:31:45,085:INFO:             xgboost: 2.0.3
2024-05-03 00:31:45,085:INFO:            catboost: 1.2.5
2024-05-03 00:31:45,085:INFO:              kmodes: 0.12.2
2024-05-03 00:31:45,085:INFO:             mlxtend: 0.23.1
2024-05-03 00:31:45,085:INFO:       statsforecast: 1.5.0
2024-05-03 00:31:45,085:INFO:        tune_sklearn: Not installed
2024-05-03 00:31:45,085:INFO:                 ray: Not installed
2024-05-03 00:31:45,085:INFO:            hyperopt: 0.2.7
2024-05-03 00:31:45,085:INFO:              optuna: 3.6.1
2024-05-03 00:31:45,085:INFO:               skopt: 0.10.1
2024-05-03 00:31:45,085:INFO:              mlflow: 2.12.1
2024-05-03 00:31:45,085:INFO:              gradio: 4.28.3
2024-05-03 00:31:45,085:INFO:             fastapi: 0.110.3
2024-05-03 00:31:45,085:INFO:             uvicorn: 0.29.0
2024-05-03 00:31:45,085:INFO:              m2cgen: 0.10.0
2024-05-03 00:31:45,085:INFO:           evidently: 0.4.19
2024-05-03 00:31:45,085:INFO:               fugue: 0.8.7
2024-05-03 00:31:45,085:INFO:           streamlit: Not installed
2024-05-03 00:31:45,085:INFO:             prophet: Not installed
2024-05-03 00:31:45,085:INFO:None
2024-05-03 00:31:45,085:INFO:Set up data.
2024-05-03 00:31:45,085:INFO:Set up folding strategy.
2024-05-03 00:31:45,085:INFO:Set up train/test split.
2024-05-03 00:31:45,085:INFO:Set up index.
2024-05-03 00:31:45,085:INFO:Assigning column types.
2024-05-03 00:31:45,085:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-03 00:31:45,085:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-03 00:31:45,085:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-03 00:31:45,100:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-03 00:31:45,125:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-03 00:31:45,149:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-03 00:31:45,149:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:31:45,149:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:31:45,166:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-03 00:31:45,173:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-03 00:31:45,173:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-03 00:31:45,206:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-03 00:31:45,262:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-03 00:31:45,262:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:31:45,262:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:31:45,262:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-05-03 00:31:45,275:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-03 00:31:45,278:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-03 00:31:45,310:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-03 00:31:45,343:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-03 00:31:45,343:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:31:45,343:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:31:45,343:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-03 00:31:45,351:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-03 00:31:45,392:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-03 00:31:45,433:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-03 00:31:45,433:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:31:45,433:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:31:45,433:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-05-03 00:31:45,440:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-03 00:31:45,465:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-03 00:31:45,489:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-03 00:31:45,497:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:31:45,498:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:31:45,505:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-03 00:31:45,530:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-03 00:31:45,557:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-03 00:31:45,557:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:31:45,557:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:31:45,557:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-05-03 00:31:45,596:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-03 00:31:45,620:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-03 00:31:45,620:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:31:45,628:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:31:45,676:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-03 00:31:45,701:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-03 00:31:45,701:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:31:45,709:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:31:45,709:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-03 00:31:45,751:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-03 00:31:45,782:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:31:45,782:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:31:45,829:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-03 00:31:45,861:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:31:45,861:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:31:45,861:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-05-03 00:31:45,926:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:31:45,934:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:31:45,999:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:31:45,999:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:31:45,999:INFO:Preparing preprocessing pipeline...
2024-05-03 00:31:45,999:INFO:Set up simple imputation.
2024-05-03 00:31:46,015:INFO:Finished creating preprocessing pipeline.
2024-05-03 00:31:46,015:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\seyzu\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Jsc', 'Voc', 'FF', 'Sr', 'Sp',
                                             'Temp', 'Class'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2024-05-03 00:31:46,023:INFO:Creating final display dataframe.
2024-05-03 00:31:46,055:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target        Efficiency
2                   Target type        Regression
3           Original data shape          (182, 8)
4        Transformed data shape          (182, 8)
5   Transformed train set shape          (127, 8)
6    Transformed test set shape           (55, 8)
7              Numeric features                 7
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              b806
2024-05-03 00:31:46,136:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:31:46,139:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:31:46,201:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:31:46,201:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:31:46,201:INFO:setup() successfully completed in 3.76s...............
2024-05-03 00:31:46,201:INFO:Initializing compare_models()
2024-05-03 00:31:46,201:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026B4BD9AF80>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000026B4BD9AF80>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2024-05-03 00:31:46,201:INFO:Checking exceptions
2024-05-03 00:31:46,201:INFO:Preparing display monitor
2024-05-03 00:31:46,201:INFO:Initializing Linear Regression
2024-05-03 00:31:46,201:INFO:Total runtime is 0.0 minutes
2024-05-03 00:31:46,201:INFO:SubProcess create_model() called ==================================
2024-05-03 00:31:46,201:INFO:Initializing create_model()
2024-05-03 00:31:46,201:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026B4BD9AF80>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B73CB1420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:31:46,201:INFO:Checking exceptions
2024-05-03 00:31:46,201:INFO:Importing libraries
2024-05-03 00:31:46,201:INFO:Copying training dataset
2024-05-03 00:31:46,201:INFO:Defining folds
2024-05-03 00:31:46,201:INFO:Declaring metric variables
2024-05-03 00:31:46,201:INFO:Importing untrained model
2024-05-03 00:31:46,201:INFO:Linear Regression Imported successfully
2024-05-03 00:31:46,201:INFO:Starting cross validation
2024-05-03 00:31:46,281:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:31:51,749:INFO:Calculating mean and std
2024-05-03 00:31:51,749:INFO:Creating metrics dataframe
2024-05-03 00:31:51,757:INFO:Uploading results into container
2024-05-03 00:31:51,757:INFO:Uploading model into container now
2024-05-03 00:31:51,765:INFO:_master_model_container: 1
2024-05-03 00:31:51,765:INFO:_display_container: 2
2024-05-03 00:31:51,765:INFO:LinearRegression(n_jobs=-1)
2024-05-03 00:31:51,765:INFO:create_model() successfully completed......................................
2024-05-03 00:31:51,903:INFO:SubProcess create_model() end ==================================
2024-05-03 00:31:51,903:INFO:Creating metrics dataframe
2024-05-03 00:31:51,966:INFO:Initializing Lasso Regression
2024-05-03 00:31:51,966:INFO:Total runtime is 0.09609247048695882 minutes
2024-05-03 00:31:51,966:INFO:SubProcess create_model() called ==================================
2024-05-03 00:31:51,966:INFO:Initializing create_model()
2024-05-03 00:31:51,966:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026B4BD9AF80>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B73CB1420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:31:51,966:INFO:Checking exceptions
2024-05-03 00:31:51,966:INFO:Importing libraries
2024-05-03 00:31:51,966:INFO:Copying training dataset
2024-05-03 00:31:51,966:INFO:Defining folds
2024-05-03 00:31:51,966:INFO:Declaring metric variables
2024-05-03 00:31:51,966:INFO:Importing untrained model
2024-05-03 00:31:51,966:INFO:Lasso Regression Imported successfully
2024-05-03 00:31:51,966:INFO:Starting cross validation
2024-05-03 00:31:51,966:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:31:56,855:INFO:Calculating mean and std
2024-05-03 00:31:56,855:INFO:Creating metrics dataframe
2024-05-03 00:31:56,855:INFO:Uploading results into container
2024-05-03 00:31:56,863:INFO:Uploading model into container now
2024-05-03 00:31:56,863:INFO:_master_model_container: 2
2024-05-03 00:31:56,863:INFO:_display_container: 2
2024-05-03 00:31:56,863:INFO:Lasso(random_state=123)
2024-05-03 00:31:56,863:INFO:create_model() successfully completed......................................
2024-05-03 00:31:56,994:INFO:SubProcess create_model() end ==================================
2024-05-03 00:31:56,994:INFO:Creating metrics dataframe
2024-05-03 00:31:56,994:INFO:Initializing Ridge Regression
2024-05-03 00:31:57,001:INFO:Total runtime is 0.18000868161519368 minutes
2024-05-03 00:31:57,001:INFO:SubProcess create_model() called ==================================
2024-05-03 00:31:57,001:INFO:Initializing create_model()
2024-05-03 00:31:57,001:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026B4BD9AF80>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B73CB1420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:31:57,001:INFO:Checking exceptions
2024-05-03 00:31:57,001:INFO:Importing libraries
2024-05-03 00:31:57,001:INFO:Copying training dataset
2024-05-03 00:31:57,001:INFO:Defining folds
2024-05-03 00:31:57,001:INFO:Declaring metric variables
2024-05-03 00:31:57,001:INFO:Importing untrained model
2024-05-03 00:31:57,001:INFO:Ridge Regression Imported successfully
2024-05-03 00:31:57,001:INFO:Starting cross validation
2024-05-03 00:31:57,001:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:31:57,075:INFO:Calculating mean and std
2024-05-03 00:31:57,075:INFO:Creating metrics dataframe
2024-05-03 00:31:57,075:INFO:Uploading results into container
2024-05-03 00:31:57,075:INFO:Uploading model into container now
2024-05-03 00:31:57,075:INFO:_master_model_container: 3
2024-05-03 00:31:57,075:INFO:_display_container: 2
2024-05-03 00:31:57,078:INFO:Ridge(random_state=123)
2024-05-03 00:31:57,078:INFO:create_model() successfully completed......................................
2024-05-03 00:31:57,164:INFO:SubProcess create_model() end ==================================
2024-05-03 00:31:57,164:INFO:Creating metrics dataframe
2024-05-03 00:31:57,164:INFO:Initializing Elastic Net
2024-05-03 00:31:57,164:INFO:Total runtime is 0.1827217896779378 minutes
2024-05-03 00:31:57,164:INFO:SubProcess create_model() called ==================================
2024-05-03 00:31:57,164:INFO:Initializing create_model()
2024-05-03 00:31:57,164:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026B4BD9AF80>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B73CB1420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:31:57,164:INFO:Checking exceptions
2024-05-03 00:31:57,164:INFO:Importing libraries
2024-05-03 00:31:57,164:INFO:Copying training dataset
2024-05-03 00:31:57,164:INFO:Defining folds
2024-05-03 00:31:57,164:INFO:Declaring metric variables
2024-05-03 00:31:57,164:INFO:Importing untrained model
2024-05-03 00:31:57,164:INFO:Elastic Net Imported successfully
2024-05-03 00:31:57,164:INFO:Starting cross validation
2024-05-03 00:31:57,164:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:31:57,228:INFO:Calculating mean and std
2024-05-03 00:31:57,229:INFO:Creating metrics dataframe
2024-05-03 00:31:57,230:INFO:Uploading results into container
2024-05-03 00:31:57,231:INFO:Uploading model into container now
2024-05-03 00:31:57,231:INFO:_master_model_container: 4
2024-05-03 00:31:57,231:INFO:_display_container: 2
2024-05-03 00:31:57,231:INFO:ElasticNet(random_state=123)
2024-05-03 00:31:57,232:INFO:create_model() successfully completed......................................
2024-05-03 00:31:57,324:INFO:SubProcess create_model() end ==================================
2024-05-03 00:31:57,324:INFO:Creating metrics dataframe
2024-05-03 00:31:57,333:INFO:Initializing Least Angle Regression
2024-05-03 00:31:57,333:INFO:Total runtime is 0.1855448802312215 minutes
2024-05-03 00:31:57,333:INFO:SubProcess create_model() called ==================================
2024-05-03 00:31:57,333:INFO:Initializing create_model()
2024-05-03 00:31:57,333:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026B4BD9AF80>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B73CB1420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:31:57,333:INFO:Checking exceptions
2024-05-03 00:31:57,333:INFO:Importing libraries
2024-05-03 00:31:57,333:INFO:Copying training dataset
2024-05-03 00:31:57,338:INFO:Defining folds
2024-05-03 00:31:57,338:INFO:Declaring metric variables
2024-05-03 00:31:57,338:INFO:Importing untrained model
2024-05-03 00:31:57,338:INFO:Least Angle Regression Imported successfully
2024-05-03 00:31:57,338:INFO:Starting cross validation
2024-05-03 00:31:57,338:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:31:57,430:INFO:Calculating mean and std
2024-05-03 00:31:57,430:INFO:Creating metrics dataframe
2024-05-03 00:31:57,435:INFO:Uploading results into container
2024-05-03 00:31:57,445:INFO:Uploading model into container now
2024-05-03 00:31:57,445:INFO:_master_model_container: 5
2024-05-03 00:31:57,445:INFO:_display_container: 2
2024-05-03 00:31:57,449:INFO:Lars(random_state=123)
2024-05-03 00:31:57,449:INFO:create_model() successfully completed......................................
2024-05-03 00:31:57,539:INFO:SubProcess create_model() end ==================================
2024-05-03 00:31:57,539:INFO:Creating metrics dataframe
2024-05-03 00:31:57,539:INFO:Initializing Lasso Least Angle Regression
2024-05-03 00:31:57,539:INFO:Total runtime is 0.18897111813227335 minutes
2024-05-03 00:31:57,539:INFO:SubProcess create_model() called ==================================
2024-05-03 00:31:57,547:INFO:Initializing create_model()
2024-05-03 00:31:57,547:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026B4BD9AF80>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B73CB1420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:31:57,547:INFO:Checking exceptions
2024-05-03 00:31:57,547:INFO:Importing libraries
2024-05-03 00:31:57,547:INFO:Copying training dataset
2024-05-03 00:31:57,549:INFO:Defining folds
2024-05-03 00:31:57,549:INFO:Declaring metric variables
2024-05-03 00:31:57,549:INFO:Importing untrained model
2024-05-03 00:31:57,549:INFO:Lasso Least Angle Regression Imported successfully
2024-05-03 00:31:57,549:INFO:Starting cross validation
2024-05-03 00:31:57,549:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:31:57,649:INFO:Calculating mean and std
2024-05-03 00:31:57,649:INFO:Creating metrics dataframe
2024-05-03 00:31:57,651:INFO:Uploading results into container
2024-05-03 00:31:57,651:INFO:Uploading model into container now
2024-05-03 00:31:57,651:INFO:_master_model_container: 6
2024-05-03 00:31:57,651:INFO:_display_container: 2
2024-05-03 00:31:57,651:INFO:LassoLars(random_state=123)
2024-05-03 00:31:57,651:INFO:create_model() successfully completed......................................
2024-05-03 00:31:57,756:INFO:SubProcess create_model() end ==================================
2024-05-03 00:31:57,756:INFO:Creating metrics dataframe
2024-05-03 00:31:57,756:INFO:Initializing Orthogonal Matching Pursuit
2024-05-03 00:31:57,756:INFO:Total runtime is 0.1925965666770935 minutes
2024-05-03 00:31:57,756:INFO:SubProcess create_model() called ==================================
2024-05-03 00:31:57,756:INFO:Initializing create_model()
2024-05-03 00:31:57,756:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026B4BD9AF80>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B73CB1420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:31:57,756:INFO:Checking exceptions
2024-05-03 00:31:57,756:INFO:Importing libraries
2024-05-03 00:31:57,756:INFO:Copying training dataset
2024-05-03 00:31:57,756:INFO:Defining folds
2024-05-03 00:31:57,756:INFO:Declaring metric variables
2024-05-03 00:31:57,756:INFO:Importing untrained model
2024-05-03 00:31:57,756:INFO:Orthogonal Matching Pursuit Imported successfully
2024-05-03 00:31:57,756:INFO:Starting cross validation
2024-05-03 00:31:57,756:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:31:57,837:INFO:Calculating mean and std
2024-05-03 00:31:57,838:INFO:Creating metrics dataframe
2024-05-03 00:31:57,840:INFO:Uploading results into container
2024-05-03 00:31:57,840:INFO:Uploading model into container now
2024-05-03 00:31:57,840:INFO:_master_model_container: 7
2024-05-03 00:31:57,840:INFO:_display_container: 2
2024-05-03 00:31:57,840:INFO:OrthogonalMatchingPursuit()
2024-05-03 00:31:57,840:INFO:create_model() successfully completed......................................
2024-05-03 00:31:57,926:INFO:SubProcess create_model() end ==================================
2024-05-03 00:31:57,926:INFO:Creating metrics dataframe
2024-05-03 00:31:57,926:INFO:Initializing Bayesian Ridge
2024-05-03 00:31:57,926:INFO:Total runtime is 0.19541570742925007 minutes
2024-05-03 00:31:57,926:INFO:SubProcess create_model() called ==================================
2024-05-03 00:31:57,926:INFO:Initializing create_model()
2024-05-03 00:31:57,926:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026B4BD9AF80>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B73CB1420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:31:57,926:INFO:Checking exceptions
2024-05-03 00:31:57,926:INFO:Importing libraries
2024-05-03 00:31:57,926:INFO:Copying training dataset
2024-05-03 00:31:57,926:INFO:Defining folds
2024-05-03 00:31:57,926:INFO:Declaring metric variables
2024-05-03 00:31:57,926:INFO:Importing untrained model
2024-05-03 00:31:57,926:INFO:Bayesian Ridge Imported successfully
2024-05-03 00:31:57,926:INFO:Starting cross validation
2024-05-03 00:31:57,926:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:31:58,007:INFO:Calculating mean and std
2024-05-03 00:31:58,008:INFO:Creating metrics dataframe
2024-05-03 00:31:58,009:INFO:Uploading results into container
2024-05-03 00:31:58,009:INFO:Uploading model into container now
2024-05-03 00:31:58,009:INFO:_master_model_container: 8
2024-05-03 00:31:58,009:INFO:_display_container: 2
2024-05-03 00:31:58,009:INFO:BayesianRidge()
2024-05-03 00:31:58,009:INFO:create_model() successfully completed......................................
2024-05-03 00:31:58,121:INFO:SubProcess create_model() end ==================================
2024-05-03 00:31:58,121:INFO:Creating metrics dataframe
2024-05-03 00:31:58,125:INFO:Initializing Passive Aggressive Regressor
2024-05-03 00:31:58,126:INFO:Total runtime is 0.19875773986180623 minutes
2024-05-03 00:31:58,126:INFO:SubProcess create_model() called ==================================
2024-05-03 00:31:58,126:INFO:Initializing create_model()
2024-05-03 00:31:58,126:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026B4BD9AF80>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B73CB1420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:31:58,126:INFO:Checking exceptions
2024-05-03 00:31:58,126:INFO:Importing libraries
2024-05-03 00:31:58,126:INFO:Copying training dataset
2024-05-03 00:31:58,129:INFO:Defining folds
2024-05-03 00:31:58,129:INFO:Declaring metric variables
2024-05-03 00:31:58,129:INFO:Importing untrained model
2024-05-03 00:31:58,129:INFO:Passive Aggressive Regressor Imported successfully
2024-05-03 00:31:58,129:INFO:Starting cross validation
2024-05-03 00:31:58,129:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:31:58,275:INFO:Calculating mean and std
2024-05-03 00:31:58,275:INFO:Creating metrics dataframe
2024-05-03 00:31:58,275:INFO:Uploading results into container
2024-05-03 00:31:58,275:INFO:Uploading model into container now
2024-05-03 00:31:58,275:INFO:_master_model_container: 9
2024-05-03 00:31:58,275:INFO:_display_container: 2
2024-05-03 00:31:58,275:INFO:PassiveAggressiveRegressor(random_state=123)
2024-05-03 00:31:58,275:INFO:create_model() successfully completed......................................
2024-05-03 00:31:58,421:INFO:SubProcess create_model() end ==================================
2024-05-03 00:31:58,421:INFO:Creating metrics dataframe
2024-05-03 00:31:58,429:INFO:Initializing Huber Regressor
2024-05-03 00:31:58,429:INFO:Total runtime is 0.20380942424138387 minutes
2024-05-03 00:31:58,429:INFO:SubProcess create_model() called ==================================
2024-05-03 00:31:58,429:INFO:Initializing create_model()
2024-05-03 00:31:58,429:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026B4BD9AF80>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B73CB1420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:31:58,429:INFO:Checking exceptions
2024-05-03 00:31:58,429:INFO:Importing libraries
2024-05-03 00:31:58,429:INFO:Copying training dataset
2024-05-03 00:31:58,429:INFO:Defining folds
2024-05-03 00:31:58,429:INFO:Declaring metric variables
2024-05-03 00:31:58,429:INFO:Importing untrained model
2024-05-03 00:31:58,429:INFO:Huber Regressor Imported successfully
2024-05-03 00:31:58,437:INFO:Starting cross validation
2024-05-03 00:31:58,437:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:31:58,534:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-05-03 00:31:58,534:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-05-03 00:31:58,534:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-05-03 00:31:58,558:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-05-03 00:31:58,558:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-05-03 00:31:58,558:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-05-03 00:31:58,558:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-05-03 00:31:58,566:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-05-03 00:31:58,590:INFO:Calculating mean and std
2024-05-03 00:31:58,590:INFO:Creating metrics dataframe
2024-05-03 00:31:58,590:INFO:Uploading results into container
2024-05-03 00:31:58,590:INFO:Uploading model into container now
2024-05-03 00:31:58,590:INFO:_master_model_container: 10
2024-05-03 00:31:58,590:INFO:_display_container: 2
2024-05-03 00:31:58,590:INFO:HuberRegressor()
2024-05-03 00:31:58,590:INFO:create_model() successfully completed......................................
2024-05-03 00:31:58,680:INFO:SubProcess create_model() end ==================================
2024-05-03 00:31:58,680:INFO:Creating metrics dataframe
2024-05-03 00:31:58,680:INFO:Initializing K Neighbors Regressor
2024-05-03 00:31:58,680:INFO:Total runtime is 0.20799561738967895 minutes
2024-05-03 00:31:58,680:INFO:SubProcess create_model() called ==================================
2024-05-03 00:31:58,680:INFO:Initializing create_model()
2024-05-03 00:31:58,680:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026B4BD9AF80>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B73CB1420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:31:58,680:INFO:Checking exceptions
2024-05-03 00:31:58,680:INFO:Importing libraries
2024-05-03 00:31:58,680:INFO:Copying training dataset
2024-05-03 00:31:58,680:INFO:Defining folds
2024-05-03 00:31:58,680:INFO:Declaring metric variables
2024-05-03 00:31:58,680:INFO:Importing untrained model
2024-05-03 00:31:58,680:INFO:K Neighbors Regressor Imported successfully
2024-05-03 00:31:58,680:INFO:Starting cross validation
2024-05-03 00:31:58,688:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:31:58,828:INFO:Calculating mean and std
2024-05-03 00:31:58,828:INFO:Creating metrics dataframe
2024-05-03 00:31:58,828:INFO:Uploading results into container
2024-05-03 00:31:58,828:INFO:Uploading model into container now
2024-05-03 00:31:58,828:INFO:_master_model_container: 11
2024-05-03 00:31:58,828:INFO:_display_container: 2
2024-05-03 00:31:58,828:INFO:KNeighborsRegressor(n_jobs=-1)
2024-05-03 00:31:58,828:INFO:create_model() successfully completed......................................
2024-05-03 00:31:58,941:INFO:SubProcess create_model() end ==================================
2024-05-03 00:31:58,941:INFO:Creating metrics dataframe
2024-05-03 00:31:58,949:INFO:Initializing Decision Tree Regressor
2024-05-03 00:31:58,949:INFO:Total runtime is 0.2124785582224528 minutes
2024-05-03 00:31:58,949:INFO:SubProcess create_model() called ==================================
2024-05-03 00:31:58,949:INFO:Initializing create_model()
2024-05-03 00:31:58,952:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026B4BD9AF80>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B73CB1420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:31:58,952:INFO:Checking exceptions
2024-05-03 00:31:58,952:INFO:Importing libraries
2024-05-03 00:31:58,952:INFO:Copying training dataset
2024-05-03 00:31:58,952:INFO:Defining folds
2024-05-03 00:31:58,952:INFO:Declaring metric variables
2024-05-03 00:31:58,957:INFO:Importing untrained model
2024-05-03 00:31:58,957:INFO:Decision Tree Regressor Imported successfully
2024-05-03 00:31:58,957:INFO:Starting cross validation
2024-05-03 00:31:58,957:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:31:59,098:INFO:Calculating mean and std
2024-05-03 00:31:59,098:INFO:Creating metrics dataframe
2024-05-03 00:31:59,098:INFO:Uploading results into container
2024-05-03 00:31:59,098:INFO:Uploading model into container now
2024-05-03 00:31:59,098:INFO:_master_model_container: 12
2024-05-03 00:31:59,098:INFO:_display_container: 2
2024-05-03 00:31:59,098:INFO:DecisionTreeRegressor(random_state=123)
2024-05-03 00:31:59,098:INFO:create_model() successfully completed......................................
2024-05-03 00:31:59,203:INFO:SubProcess create_model() end ==================================
2024-05-03 00:31:59,203:INFO:Creating metrics dataframe
2024-05-03 00:31:59,203:INFO:Initializing Random Forest Regressor
2024-05-03 00:31:59,203:INFO:Total runtime is 0.2167110284169515 minutes
2024-05-03 00:31:59,203:INFO:SubProcess create_model() called ==================================
2024-05-03 00:31:59,203:INFO:Initializing create_model()
2024-05-03 00:31:59,203:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026B4BD9AF80>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B73CB1420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:31:59,203:INFO:Checking exceptions
2024-05-03 00:31:59,203:INFO:Importing libraries
2024-05-03 00:31:59,203:INFO:Copying training dataset
2024-05-03 00:31:59,211:INFO:Defining folds
2024-05-03 00:31:59,211:INFO:Declaring metric variables
2024-05-03 00:31:59,211:INFO:Importing untrained model
2024-05-03 00:31:59,211:INFO:Random Forest Regressor Imported successfully
2024-05-03 00:31:59,211:INFO:Starting cross validation
2024-05-03 00:31:59,211:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:31:59,576:INFO:Calculating mean and std
2024-05-03 00:31:59,576:INFO:Creating metrics dataframe
2024-05-03 00:31:59,576:INFO:Uploading results into container
2024-05-03 00:31:59,576:INFO:Uploading model into container now
2024-05-03 00:31:59,576:INFO:_master_model_container: 13
2024-05-03 00:31:59,576:INFO:_display_container: 2
2024-05-03 00:31:59,576:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2024-05-03 00:31:59,576:INFO:create_model() successfully completed......................................
2024-05-03 00:31:59,674:INFO:SubProcess create_model() end ==================================
2024-05-03 00:31:59,675:INFO:Creating metrics dataframe
2024-05-03 00:31:59,677:INFO:Initializing Extra Trees Regressor
2024-05-03 00:31:59,677:INFO:Total runtime is 0.22460312048594158 minutes
2024-05-03 00:31:59,677:INFO:SubProcess create_model() called ==================================
2024-05-03 00:31:59,677:INFO:Initializing create_model()
2024-05-03 00:31:59,677:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026B4BD9AF80>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B73CB1420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:31:59,677:INFO:Checking exceptions
2024-05-03 00:31:59,677:INFO:Importing libraries
2024-05-03 00:31:59,677:INFO:Copying training dataset
2024-05-03 00:31:59,677:INFO:Defining folds
2024-05-03 00:31:59,677:INFO:Declaring metric variables
2024-05-03 00:31:59,677:INFO:Importing untrained model
2024-05-03 00:31:59,677:INFO:Extra Trees Regressor Imported successfully
2024-05-03 00:31:59,677:INFO:Starting cross validation
2024-05-03 00:31:59,677:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:31:59,982:INFO:Calculating mean and std
2024-05-03 00:31:59,982:INFO:Creating metrics dataframe
2024-05-03 00:31:59,982:INFO:Uploading results into container
2024-05-03 00:31:59,982:INFO:Uploading model into container now
2024-05-03 00:31:59,982:INFO:_master_model_container: 14
2024-05-03 00:31:59,982:INFO:_display_container: 2
2024-05-03 00:31:59,982:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-05-03 00:31:59,982:INFO:create_model() successfully completed......................................
2024-05-03 00:32:00,113:INFO:SubProcess create_model() end ==================================
2024-05-03 00:32:00,113:INFO:Creating metrics dataframe
2024-05-03 00:32:00,116:INFO:Initializing AdaBoost Regressor
2024-05-03 00:32:00,116:INFO:Total runtime is 0.2319247364997864 minutes
2024-05-03 00:32:00,116:INFO:SubProcess create_model() called ==================================
2024-05-03 00:32:00,116:INFO:Initializing create_model()
2024-05-03 00:32:00,116:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026B4BD9AF80>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B73CB1420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:32:00,116:INFO:Checking exceptions
2024-05-03 00:32:00,116:INFO:Importing libraries
2024-05-03 00:32:00,116:INFO:Copying training dataset
2024-05-03 00:32:00,120:INFO:Defining folds
2024-05-03 00:32:00,120:INFO:Declaring metric variables
2024-05-03 00:32:00,120:INFO:Importing untrained model
2024-05-03 00:32:00,120:INFO:AdaBoost Regressor Imported successfully
2024-05-03 00:32:00,120:INFO:Starting cross validation
2024-05-03 00:32:00,120:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:32:00,340:INFO:Calculating mean and std
2024-05-03 00:32:00,340:INFO:Creating metrics dataframe
2024-05-03 00:32:00,340:INFO:Uploading results into container
2024-05-03 00:32:00,340:INFO:Uploading model into container now
2024-05-03 00:32:00,340:INFO:_master_model_container: 15
2024-05-03 00:32:00,340:INFO:_display_container: 2
2024-05-03 00:32:00,340:INFO:AdaBoostRegressor(random_state=123)
2024-05-03 00:32:00,340:INFO:create_model() successfully completed......................................
2024-05-03 00:32:00,422:INFO:SubProcess create_model() end ==================================
2024-05-03 00:32:00,422:INFO:Creating metrics dataframe
2024-05-03 00:32:00,422:INFO:Initializing Gradient Boosting Regressor
2024-05-03 00:32:00,422:INFO:Total runtime is 0.23701962232589724 minutes
2024-05-03 00:32:00,422:INFO:SubProcess create_model() called ==================================
2024-05-03 00:32:00,422:INFO:Initializing create_model()
2024-05-03 00:32:00,422:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026B4BD9AF80>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B73CB1420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:32:00,422:INFO:Checking exceptions
2024-05-03 00:32:00,422:INFO:Importing libraries
2024-05-03 00:32:00,422:INFO:Copying training dataset
2024-05-03 00:32:00,422:INFO:Defining folds
2024-05-03 00:32:00,422:INFO:Declaring metric variables
2024-05-03 00:32:00,422:INFO:Importing untrained model
2024-05-03 00:32:00,422:INFO:Gradient Boosting Regressor Imported successfully
2024-05-03 00:32:00,422:INFO:Starting cross validation
2024-05-03 00:32:00,422:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:32:00,654:INFO:Calculating mean and std
2024-05-03 00:32:00,654:INFO:Creating metrics dataframe
2024-05-03 00:32:00,654:INFO:Uploading results into container
2024-05-03 00:32:00,654:INFO:Uploading model into container now
2024-05-03 00:32:00,654:INFO:_master_model_container: 16
2024-05-03 00:32:00,654:INFO:_display_container: 2
2024-05-03 00:32:00,654:INFO:GradientBoostingRegressor(random_state=123)
2024-05-03 00:32:00,654:INFO:create_model() successfully completed......................................
2024-05-03 00:32:00,757:INFO:SubProcess create_model() end ==================================
2024-05-03 00:32:00,757:INFO:Creating metrics dataframe
2024-05-03 00:32:00,766:INFO:Initializing Extreme Gradient Boosting
2024-05-03 00:32:00,766:INFO:Total runtime is 0.24275454282760622 minutes
2024-05-03 00:32:00,766:INFO:SubProcess create_model() called ==================================
2024-05-03 00:32:00,766:INFO:Initializing create_model()
2024-05-03 00:32:00,766:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026B4BD9AF80>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B73CB1420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:32:00,766:INFO:Checking exceptions
2024-05-03 00:32:00,766:INFO:Importing libraries
2024-05-03 00:32:00,766:INFO:Copying training dataset
2024-05-03 00:32:00,773:INFO:Defining folds
2024-05-03 00:32:00,773:INFO:Declaring metric variables
2024-05-03 00:32:00,773:INFO:Importing untrained model
2024-05-03 00:32:00,773:INFO:Extreme Gradient Boosting Imported successfully
2024-05-03 00:32:00,773:INFO:Starting cross validation
2024-05-03 00:32:00,773:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:32:00,991:INFO:Calculating mean and std
2024-05-03 00:32:00,991:INFO:Creating metrics dataframe
2024-05-03 00:32:00,991:INFO:Uploading results into container
2024-05-03 00:32:00,991:INFO:Uploading model into container now
2024-05-03 00:32:00,991:INFO:_master_model_container: 17
2024-05-03 00:32:00,991:INFO:_display_container: 2
2024-05-03 00:32:00,991:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=123, ...)
2024-05-03 00:32:00,991:INFO:create_model() successfully completed......................................
2024-05-03 00:32:01,089:INFO:SubProcess create_model() end ==================================
2024-05-03 00:32:01,089:INFO:Creating metrics dataframe
2024-05-03 00:32:01,097:INFO:Initializing Light Gradient Boosting Machine
2024-05-03 00:32:01,097:INFO:Total runtime is 0.2482734322547913 minutes
2024-05-03 00:32:01,097:INFO:SubProcess create_model() called ==================================
2024-05-03 00:32:01,097:INFO:Initializing create_model()
2024-05-03 00:32:01,097:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026B4BD9AF80>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B73CB1420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:32:01,097:INFO:Checking exceptions
2024-05-03 00:32:01,097:INFO:Importing libraries
2024-05-03 00:32:01,097:INFO:Copying training dataset
2024-05-03 00:32:01,097:INFO:Defining folds
2024-05-03 00:32:01,097:INFO:Declaring metric variables
2024-05-03 00:32:01,097:INFO:Importing untrained model
2024-05-03 00:32:01,097:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-03 00:32:01,097:INFO:Starting cross validation
2024-05-03 00:32:01,105:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:32:01,623:INFO:Calculating mean and std
2024-05-03 00:32:01,623:INFO:Creating metrics dataframe
2024-05-03 00:32:01,623:INFO:Uploading results into container
2024-05-03 00:32:01,623:INFO:Uploading model into container now
2024-05-03 00:32:01,623:INFO:_master_model_container: 18
2024-05-03 00:32:01,623:INFO:_display_container: 2
2024-05-03 00:32:01,627:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2024-05-03 00:32:01,627:INFO:create_model() successfully completed......................................
2024-05-03 00:32:01,720:INFO:SubProcess create_model() end ==================================
2024-05-03 00:32:01,720:INFO:Creating metrics dataframe
2024-05-03 00:32:01,720:INFO:Initializing CatBoost Regressor
2024-05-03 00:32:01,720:INFO:Total runtime is 0.25865091482798264 minutes
2024-05-03 00:32:01,720:INFO:SubProcess create_model() called ==================================
2024-05-03 00:32:01,720:INFO:Initializing create_model()
2024-05-03 00:32:01,720:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026B4BD9AF80>, estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B73CB1420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:32:01,720:INFO:Checking exceptions
2024-05-03 00:32:01,720:INFO:Importing libraries
2024-05-03 00:32:01,720:INFO:Copying training dataset
2024-05-03 00:32:01,728:INFO:Defining folds
2024-05-03 00:32:01,728:INFO:Declaring metric variables
2024-05-03 00:32:01,728:INFO:Importing untrained model
2024-05-03 00:32:01,736:INFO:CatBoost Regressor Imported successfully
2024-05-03 00:32:01,736:INFO:Starting cross validation
2024-05-03 00:32:01,736:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:32:06,454:INFO:Calculating mean and std
2024-05-03 00:32:06,454:INFO:Creating metrics dataframe
2024-05-03 00:32:06,454:INFO:Uploading results into container
2024-05-03 00:32:06,454:INFO:Uploading model into container now
2024-05-03 00:32:06,454:INFO:_master_model_container: 19
2024-05-03 00:32:06,454:INFO:_display_container: 2
2024-05-03 00:32:06,454:INFO:<catboost.core.CatBoostRegressor object at 0x0000026B73B3E5C0>
2024-05-03 00:32:06,454:INFO:create_model() successfully completed......................................
2024-05-03 00:32:06,641:INFO:SubProcess create_model() end ==================================
2024-05-03 00:32:06,641:INFO:Creating metrics dataframe
2024-05-03 00:32:06,649:INFO:Initializing Dummy Regressor
2024-05-03 00:32:06,649:INFO:Total runtime is 0.34080759286880496 minutes
2024-05-03 00:32:06,649:INFO:SubProcess create_model() called ==================================
2024-05-03 00:32:06,649:INFO:Initializing create_model()
2024-05-03 00:32:06,649:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026B4BD9AF80>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B73CB1420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:32:06,649:INFO:Checking exceptions
2024-05-03 00:32:06,649:INFO:Importing libraries
2024-05-03 00:32:06,649:INFO:Copying training dataset
2024-05-03 00:32:06,649:INFO:Defining folds
2024-05-03 00:32:06,649:INFO:Declaring metric variables
2024-05-03 00:32:06,649:INFO:Importing untrained model
2024-05-03 00:32:06,649:INFO:Dummy Regressor Imported successfully
2024-05-03 00:32:06,649:INFO:Starting cross validation
2024-05-03 00:32:06,649:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:32:06,742:INFO:Calculating mean and std
2024-05-03 00:32:06,742:INFO:Creating metrics dataframe
2024-05-03 00:32:06,742:INFO:Uploading results into container
2024-05-03 00:32:06,742:INFO:Uploading model into container now
2024-05-03 00:32:06,742:INFO:_master_model_container: 20
2024-05-03 00:32:06,742:INFO:_display_container: 2
2024-05-03 00:32:06,742:INFO:DummyRegressor()
2024-05-03 00:32:06,742:INFO:create_model() successfully completed......................................
2024-05-03 00:32:06,860:INFO:SubProcess create_model() end ==================================
2024-05-03 00:32:06,860:INFO:Creating metrics dataframe
2024-05-03 00:32:06,899:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-05-03 00:32:06,903:INFO:Initializing create_model()
2024-05-03 00:32:06,903:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026B4BD9AF80>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:32:06,903:INFO:Checking exceptions
2024-05-03 00:32:06,903:INFO:Importing libraries
2024-05-03 00:32:06,903:INFO:Copying training dataset
2024-05-03 00:32:06,911:INFO:Defining folds
2024-05-03 00:32:06,911:INFO:Declaring metric variables
2024-05-03 00:32:06,911:INFO:Importing untrained model
2024-05-03 00:32:06,919:INFO:Declaring custom model
2024-05-03 00:32:06,919:INFO:Extra Trees Regressor Imported successfully
2024-05-03 00:32:06,919:INFO:Cross validation set to False
2024-05-03 00:32:06,919:INFO:Fitting Model
2024-05-03 00:32:07,076:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-05-03 00:32:07,076:INFO:create_model() successfully completed......................................
2024-05-03 00:32:07,214:INFO:_master_model_container: 20
2024-05-03 00:32:07,214:INFO:_display_container: 2
2024-05-03 00:32:07,214:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-05-03 00:32:07,214:INFO:compare_models() successfully completed......................................
2024-05-03 00:32:07,214:INFO:Initializing evaluate_model()
2024-05-03 00:32:07,214:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026B4BD9AF80>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-05-03 00:32:07,554:INFO:Initializing plot_model()
2024-05-03 00:32:07,554:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026B4BD9AF80>, system=True)
2024-05-03 00:32:07,554:INFO:Checking exceptions
2024-05-03 00:32:07,584:INFO:Preloading libraries
2024-05-03 00:32:07,592:INFO:Copying training dataset
2024-05-03 00:32:07,592:INFO:Plot type: pipeline
2024-05-03 00:32:20,980:INFO:Visual Rendered Successfully
2024-05-03 00:32:21,085:INFO:plot_model() successfully completed......................................
2024-05-03 00:32:21,085:INFO:Initializing plot_model()
2024-05-03 00:32:21,085:INFO:plot_model(plot=residuals, fold=None, verbose=True, display=None, display_format=None, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026B4BD9AF80>, system=True)
2024-05-03 00:32:21,085:INFO:Checking exceptions
2024-05-03 00:32:21,116:INFO:Preloading libraries
2024-05-03 00:32:21,116:INFO:Copying training dataset
2024-05-03 00:32:21,116:INFO:Plot type: residuals
2024-05-03 00:32:21,273:INFO:Fitting Model
2024-05-03 00:32:21,276:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesRegressor was fitted with feature names
  warnings.warn(

2024-05-03 00:32:21,352:INFO:Scoring test/hold-out set
2024-05-03 00:32:25,000:INFO:Visual Rendered Successfully
2024-05-03 00:32:25,106:INFO:plot_model() successfully completed......................................
2024-05-03 00:32:25,106:INFO:Initializing plot_model()
2024-05-03 00:32:25,106:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026B4BD9AF80>, system=True)
2024-05-03 00:32:25,106:INFO:Checking exceptions
2024-05-03 00:32:25,135:INFO:Preloading libraries
2024-05-03 00:32:25,143:INFO:Copying training dataset
2024-05-03 00:32:25,143:INFO:Plot type: feature
2024-05-03 00:32:25,143:WARNING:No coef_ found. Trying feature_importances_
2024-05-03 00:32:31,118:INFO:Visual Rendered Successfully
2024-05-03 00:32:31,242:INFO:plot_model() successfully completed......................................
2024-05-03 00:32:31,243:INFO:Initializing predict_model()
2024-05-03 00:32:31,243:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026B4BD9AF80>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026B7386C790>)
2024-05-03 00:32:31,243:INFO:Checking exceptions
2024-05-03 00:32:31,243:INFO:Preloading libraries
2024-05-03 00:32:31,344:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-05-03 00:32:31,517:INFO:Initializing predict_model()
2024-05-03 00:32:31,517:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026B4BD9AF80>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026B7386C790>)
2024-05-03 00:32:31,517:INFO:Checking exceptions
2024-05-03 00:32:31,517:INFO:Preloading libraries
2024-05-03 00:32:31,517:INFO:Set up data.
2024-05-03 00:32:31,521:INFO:Set up index.
2024-05-03 00:32:31,572:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-05-03 00:32:31,721:INFO:Initializing save_model()
2024-05-03 00:32:31,722:INFO:save_model(model=ExtraTreesRegressor(n_jobs=-1, random_state=123), model_name=my_best_pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\seyzu\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Jsc', 'Voc', 'FF', 'Sr', 'Sp',
                                             'Temp', 'Class'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2024-05-03 00:32:31,722:INFO:Adding model into prep_pipe
2024-05-03 00:32:31,769:INFO:my_best_pipeline.pkl saved in current working directory
2024-05-03 00:32:31,773:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Jsc', 'Voc', 'FF', 'Sr', 'Sp',
                                             'Temp', 'Class'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2024-05-03 00:32:31,773:INFO:save_model() successfully completed......................................
2024-05-03 00:32:31,873:INFO:Initializing load_model()
2024-05-03 00:32:31,873:INFO:load_model(model_name=my_best_pipeline, platform=None, authentication=None, verbose=True)
2024-05-03 00:32:39,806:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-03 00:32:39,806:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-03 00:32:39,806:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-03 00:32:39,806:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-03 00:32:41,465:INFO:PyCaret ClassificationExperiment
2024-05-03 00:32:41,465:INFO:Logging name: clf-default-name
2024-05-03 00:32:41,465:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-03 00:32:41,465:INFO:version 3.3.2
2024-05-03 00:32:41,465:INFO:Initializing setup()
2024-05-03 00:32:41,465:INFO:self.USI: f70d
2024-05-03 00:32:41,465:INFO:self._variable_keys: {'fold_shuffle_param', 'y_test', 'log_plots_param', '_available_plots', 'fold_groups_param', 'fix_imbalance', 'X_test', 'exp_name_log', 'data', '_ml_usecase', 'USI', 'gpu_n_jobs_param', 'X', 'is_multiclass', 'gpu_param', 'memory', 'y_train', 'logging_param', 'exp_id', 'pipeline', 'n_jobs_param', 'X_train', 'seed', 'html_param', 'fold_generator', 'target_param', 'y', 'idx'}
2024-05-03 00:32:41,473:INFO:Checking environment
2024-05-03 00:32:41,473:INFO:python_version: 3.10.11
2024-05-03 00:32:41,473:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-05-03 00:32:41,473:INFO:machine: AMD64
2024-05-03 00:32:41,494:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-03 00:32:41,498:INFO:Memory: svmem(total=8302092288, available=3327295488, percent=59.9, used=4974796800, free=3327295488)
2024-05-03 00:32:41,498:INFO:Physical Core: 12
2024-05-03 00:32:41,498:INFO:Logical Core: 16
2024-05-03 00:32:41,498:INFO:Checking libraries
2024-05-03 00:32:41,498:INFO:System:
2024-05-03 00:32:41,498:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-05-03 00:32:41,498:INFO:executable: C:\Users\seyzu\AppData\Local\Programs\Python\Python310\python.exe
2024-05-03 00:32:41,498:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-03 00:32:41,498:INFO:PyCaret required dependencies:
2024-05-03 00:32:42,531:INFO:                 pip: 24.0
2024-05-03 00:32:42,531:INFO:          setuptools: 65.5.0
2024-05-03 00:32:42,531:INFO:             pycaret: 3.3.2
2024-05-03 00:32:42,531:INFO:             IPython: 8.24.0
2024-05-03 00:32:42,531:INFO:          ipywidgets: 8.1.2
2024-05-03 00:32:42,531:INFO:                tqdm: 4.66.2
2024-05-03 00:32:42,531:INFO:               numpy: 1.26.4
2024-05-03 00:32:42,531:INFO:              pandas: 2.1.4
2024-05-03 00:32:42,531:INFO:              jinja2: 3.1.3
2024-05-03 00:32:42,531:INFO:               scipy: 1.11.4
2024-05-03 00:32:42,531:INFO:              joblib: 1.3.2
2024-05-03 00:32:42,531:INFO:             sklearn: 1.4.2
2024-05-03 00:32:42,531:INFO:                pyod: 1.1.3
2024-05-03 00:32:42,531:INFO:            imblearn: 0.12.2
2024-05-03 00:32:42,531:INFO:   category_encoders: 2.6.3
2024-05-03 00:32:42,531:INFO:            lightgbm: 4.3.0
2024-05-03 00:32:42,531:INFO:               numba: 0.59.1
2024-05-03 00:32:42,531:INFO:            requests: 2.31.0
2024-05-03 00:32:42,531:INFO:          matplotlib: 3.7.5
2024-05-03 00:32:42,531:INFO:          scikitplot: 0.3.7
2024-05-03 00:32:42,531:INFO:         yellowbrick: 1.5
2024-05-03 00:32:42,531:INFO:              plotly: 5.21.0
2024-05-03 00:32:42,531:INFO:    plotly-resampler: Not installed
2024-05-03 00:32:42,531:INFO:             kaleido: 0.2.1
2024-05-03 00:32:42,531:INFO:           schemdraw: 0.15
2024-05-03 00:32:42,531:INFO:         statsmodels: 0.14.2
2024-05-03 00:32:42,531:INFO:              sktime: 0.26.0
2024-05-03 00:32:42,531:INFO:               tbats: 1.1.3
2024-05-03 00:32:42,531:INFO:            pmdarima: 2.0.4
2024-05-03 00:32:42,531:INFO:              psutil: 5.9.8
2024-05-03 00:32:42,531:INFO:          markupsafe: 2.1.5
2024-05-03 00:32:42,531:INFO:             pickle5: Not installed
2024-05-03 00:32:42,531:INFO:         cloudpickle: 3.0.0
2024-05-03 00:32:42,531:INFO:         deprecation: 2.1.0
2024-05-03 00:32:42,531:INFO:              xxhash: 3.4.1
2024-05-03 00:32:42,531:INFO:           wurlitzer: Not installed
2024-05-03 00:32:42,531:INFO:PyCaret optional dependencies:
2024-05-03 00:32:44,904:INFO:                shap: 0.44.1
2024-05-03 00:32:44,904:INFO:           interpret: 0.6.1
2024-05-03 00:32:44,904:INFO:                umap: 0.5.6
2024-05-03 00:32:44,904:INFO:     ydata_profiling: 4.7.0
2024-05-03 00:32:44,904:INFO:  explainerdashboard: 0.4.7
2024-05-03 00:32:44,904:INFO:             autoviz: Not installed
2024-05-03 00:32:44,904:INFO:           fairlearn: 0.7.0
2024-05-03 00:32:44,904:INFO:          deepchecks: Not installed
2024-05-03 00:32:44,904:INFO:             xgboost: 2.0.3
2024-05-03 00:32:44,904:INFO:            catboost: 1.2.5
2024-05-03 00:32:44,904:INFO:              kmodes: 0.12.2
2024-05-03 00:32:44,904:INFO:             mlxtend: 0.23.1
2024-05-03 00:32:44,904:INFO:       statsforecast: 1.5.0
2024-05-03 00:32:44,904:INFO:        tune_sklearn: Not installed
2024-05-03 00:32:44,904:INFO:                 ray: Not installed
2024-05-03 00:32:44,904:INFO:            hyperopt: 0.2.7
2024-05-03 00:32:44,904:INFO:              optuna: 3.6.1
2024-05-03 00:32:44,904:INFO:               skopt: 0.10.1
2024-05-03 00:32:44,904:INFO:              mlflow: 2.12.1
2024-05-03 00:32:44,904:INFO:              gradio: 4.28.3
2024-05-03 00:32:44,904:INFO:             fastapi: 0.110.3
2024-05-03 00:32:44,904:INFO:             uvicorn: 0.29.0
2024-05-03 00:32:44,904:INFO:              m2cgen: 0.10.0
2024-05-03 00:32:44,904:INFO:           evidently: 0.4.19
2024-05-03 00:32:44,904:INFO:               fugue: 0.8.7
2024-05-03 00:32:44,904:INFO:           streamlit: Not installed
2024-05-03 00:32:44,904:INFO:             prophet: Not installed
2024-05-03 00:32:44,904:INFO:None
2024-05-03 00:32:44,904:INFO:Set up data.
2024-05-03 00:32:44,904:INFO:Set up folding strategy.
2024-05-03 00:32:44,904:INFO:Set up train/test split.
2024-05-03 00:32:44,915:INFO:Set up index.
2024-05-03 00:32:44,915:INFO:Assigning column types.
2024-05-03 00:32:44,920:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-03 00:32:44,953:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-03 00:32:44,953:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-03 00:32:44,977:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:32:44,977:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:32:45,017:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-03 00:32:45,020:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-03 00:32:45,034:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:32:45,034:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:32:45,034:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-03 00:32:45,058:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-03 00:32:45,074:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:32:45,074:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:32:45,098:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-03 00:32:45,114:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:32:45,120:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:32:45,120:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-03 00:32:45,156:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:32:45,185:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:32:45,240:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:32:45,240:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:32:45,248:INFO:Preparing preprocessing pipeline...
2024-05-03 00:32:45,257:INFO:Set up label encoding.
2024-05-03 00:32:45,257:INFO:Set up simple imputation.
2024-05-03 00:32:45,281:INFO:Finished creating preprocessing pipeline.
2024-05-03 00:32:45,289:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\seyzu\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Jsc', 'Voc', 'FF', 'Efficiency',
                                             'Sr', 'Sp', 'Temp'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-05-03 00:32:45,289:INFO:Creating final display dataframe.
2024-05-03 00:32:45,354:INFO:Setup _display_container:                     Description                   Value
0                    Session id                     123
1                        Target                   Class
2                   Target type              Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2, 4: 3
4           Original data shape                (182, 8)
5        Transformed data shape                (182, 8)
6   Transformed train set shape                (127, 8)
7    Transformed test set shape                 (55, 8)
8              Numeric features                       7
9                    Preprocess                    True
10              Imputation type                  simple
11           Numeric imputation                    mean
12       Categorical imputation                    mode
13               Fold Generator         StratifiedKFold
14                  Fold Number                      10
15                     CPU Jobs                      -1
16                      Use GPU                   False
17               Log Experiment                   False
18              Experiment Name        clf-default-name
19                          USI                    f70d
2024-05-03 00:32:45,423:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:32:45,427:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:32:45,475:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-03 00:32:45,484:INFO:Soft dependency imported: catboost: 1.2.5
2024-05-03 00:32:45,484:INFO:setup() successfully completed in 4.02s...............
2024-05-03 00:32:45,484:INFO:Initializing compare_models()
2024-05-03 00:32:45,484:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001599A523280>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001599A523280>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-05-03 00:32:45,484:INFO:Checking exceptions
2024-05-03 00:32:45,491:INFO:Preparing display monitor
2024-05-03 00:32:45,491:INFO:Initializing Logistic Regression
2024-05-03 00:32:45,491:INFO:Total runtime is 0.0 minutes
2024-05-03 00:32:45,491:INFO:SubProcess create_model() called ==================================
2024-05-03 00:32:45,491:INFO:Initializing create_model()
2024-05-03 00:32:45,491:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001599A523280>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000159C1F3BE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:32:45,491:INFO:Checking exceptions
2024-05-03 00:32:45,491:INFO:Importing libraries
2024-05-03 00:32:45,491:INFO:Copying training dataset
2024-05-03 00:32:45,491:INFO:Defining folds
2024-05-03 00:32:45,491:INFO:Declaring metric variables
2024-05-03 00:32:45,491:INFO:Importing untrained model
2024-05-03 00:32:45,491:INFO:Logistic Regression Imported successfully
2024-05-03 00:32:45,491:INFO:Starting cross validation
2024-05-03 00:32:45,499:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:32:50,255:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-03 00:32:50,255:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-03 00:32:50,271:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:50,271:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:50,271:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-03 00:32:50,271:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,271:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,279:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,279:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,279:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,279:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,287:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:50,287:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,295:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,295:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:32:50,295:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,352:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-03 00:32:50,368:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:50,368:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,376:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,376:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,392:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-03 00:32:50,400:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:50,400:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,400:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-03 00:32:50,400:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,400:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,408:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:50,416:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,416:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,425:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,425:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-03 00:32:50,425:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-03 00:32:50,436:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:50,438:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,439:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:50,441:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,442:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,442:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:32:50,443:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,444:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,446:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,467:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-03 00:32:50,473:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:50,482:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,482:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,490:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,490:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-03 00:32:50,498:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:50,498:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,506:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,506:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,514:INFO:Calculating mean and std
2024-05-03 00:32:50,514:INFO:Creating metrics dataframe
2024-05-03 00:32:50,514:INFO:Uploading results into container
2024-05-03 00:32:50,514:INFO:Uploading model into container now
2024-05-03 00:32:50,514:INFO:_master_model_container: 1
2024-05-03 00:32:50,514:INFO:_display_container: 2
2024-05-03 00:32:50,514:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-03 00:32:50,514:INFO:create_model() successfully completed......................................
2024-05-03 00:32:50,627:INFO:SubProcess create_model() end ==================================
2024-05-03 00:32:50,627:INFO:Creating metrics dataframe
2024-05-03 00:32:50,627:INFO:Initializing K Neighbors Classifier
2024-05-03 00:32:50,627:INFO:Total runtime is 0.08560086091359456 minutes
2024-05-03 00:32:50,627:INFO:SubProcess create_model() called ==================================
2024-05-03 00:32:50,627:INFO:Initializing create_model()
2024-05-03 00:32:50,627:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001599A523280>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000159C1F3BE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:32:50,627:INFO:Checking exceptions
2024-05-03 00:32:50,627:INFO:Importing libraries
2024-05-03 00:32:50,627:INFO:Copying training dataset
2024-05-03 00:32:50,627:INFO:Defining folds
2024-05-03 00:32:50,627:INFO:Declaring metric variables
2024-05-03 00:32:50,627:INFO:Importing untrained model
2024-05-03 00:32:50,627:INFO:K Neighbors Classifier Imported successfully
2024-05-03 00:32:50,627:INFO:Starting cross validation
2024-05-03 00:32:50,627:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:32:50,813:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,813:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,813:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,813:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,823:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,825:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,825:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,825:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,829:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,845:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,845:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:50,845:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:32:50,845:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:54,767:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:54,767:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:54,775:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:32:54,775:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:54,799:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:54,799:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:54,807:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:54,807:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:54,807:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:54,807:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:54,856:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:54,856:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:54,856:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:54,929:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:54,929:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:54,936:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:54,961:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:54,961:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:54,969:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:54,985:INFO:Calculating mean and std
2024-05-03 00:32:54,985:INFO:Creating metrics dataframe
2024-05-03 00:32:54,985:INFO:Uploading results into container
2024-05-03 00:32:54,985:INFO:Uploading model into container now
2024-05-03 00:32:54,985:INFO:_master_model_container: 2
2024-05-03 00:32:54,985:INFO:_display_container: 2
2024-05-03 00:32:54,985:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-05-03 00:32:54,985:INFO:create_model() successfully completed......................................
2024-05-03 00:32:55,122:INFO:SubProcess create_model() end ==================================
2024-05-03 00:32:55,122:INFO:Creating metrics dataframe
2024-05-03 00:32:55,131:INFO:Initializing Naive Bayes
2024-05-03 00:32:55,131:INFO:Total runtime is 0.1606572190920512 minutes
2024-05-03 00:32:55,131:INFO:SubProcess create_model() called ==================================
2024-05-03 00:32:55,131:INFO:Initializing create_model()
2024-05-03 00:32:55,131:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001599A523280>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000159C1F3BE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:32:55,131:INFO:Checking exceptions
2024-05-03 00:32:55,131:INFO:Importing libraries
2024-05-03 00:32:55,131:INFO:Copying training dataset
2024-05-03 00:32:55,131:INFO:Defining folds
2024-05-03 00:32:55,131:INFO:Declaring metric variables
2024-05-03 00:32:55,131:INFO:Importing untrained model
2024-05-03 00:32:55,131:INFO:Naive Bayes Imported successfully
2024-05-03 00:32:55,131:INFO:Starting cross validation
2024-05-03 00:32:55,131:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:32:55,171:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,171:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,171:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:32:55,171:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,171:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,171:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,171:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:32:55,171:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,195:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,195:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,195:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,195:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,195:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,195:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:32:55,195:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,203:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,204:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,204:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:32:55,204:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,220:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,220:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,220:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,228:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:32:55,228:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,228:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,229:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,229:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:32:55,229:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,229:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,229:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,229:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:32:55,229:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,229:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,235:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:32:55,235:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,254:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,256:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,256:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,273:INFO:Calculating mean and std
2024-05-03 00:32:55,273:INFO:Creating metrics dataframe
2024-05-03 00:32:55,273:INFO:Uploading results into container
2024-05-03 00:32:55,273:INFO:Uploading model into container now
2024-05-03 00:32:55,273:INFO:_master_model_container: 3
2024-05-03 00:32:55,273:INFO:_display_container: 2
2024-05-03 00:32:55,273:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-05-03 00:32:55,273:INFO:create_model() successfully completed......................................
2024-05-03 00:32:55,419:INFO:SubProcess create_model() end ==================================
2024-05-03 00:32:55,419:INFO:Creating metrics dataframe
2024-05-03 00:32:55,427:INFO:Initializing Decision Tree Classifier
2024-05-03 00:32:55,427:INFO:Total runtime is 0.16560166279474894 minutes
2024-05-03 00:32:55,430:INFO:SubProcess create_model() called ==================================
2024-05-03 00:32:55,430:INFO:Initializing create_model()
2024-05-03 00:32:55,430:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001599A523280>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000159C1F3BE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:32:55,430:INFO:Checking exceptions
2024-05-03 00:32:55,430:INFO:Importing libraries
2024-05-03 00:32:55,430:INFO:Copying training dataset
2024-05-03 00:32:55,436:INFO:Defining folds
2024-05-03 00:32:55,436:INFO:Declaring metric variables
2024-05-03 00:32:55,436:INFO:Importing untrained model
2024-05-03 00:32:55,436:INFO:Decision Tree Classifier Imported successfully
2024-05-03 00:32:55,436:INFO:Starting cross validation
2024-05-03 00:32:55,436:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:32:55,517:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,517:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,517:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,517:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,517:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,517:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,517:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,517:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,517:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,530:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,533:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,533:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,533:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,533:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,533:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,533:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,533:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,533:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,541:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,541:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,541:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,541:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,541:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,541:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,549:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,549:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,549:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,549:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,557:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,574:INFO:Calculating mean and std
2024-05-03 00:32:55,574:INFO:Creating metrics dataframe
2024-05-03 00:32:55,574:INFO:Uploading results into container
2024-05-03 00:32:55,574:INFO:Uploading model into container now
2024-05-03 00:32:55,574:INFO:_master_model_container: 4
2024-05-03 00:32:55,574:INFO:_display_container: 2
2024-05-03 00:32:55,574:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-05-03 00:32:55,574:INFO:create_model() successfully completed......................................
2024-05-03 00:32:55,670:INFO:SubProcess create_model() end ==================================
2024-05-03 00:32:55,670:INFO:Creating metrics dataframe
2024-05-03 00:32:55,678:INFO:Initializing SVM - Linear Kernel
2024-05-03 00:32:55,678:INFO:Total runtime is 0.16978778839111328 minutes
2024-05-03 00:32:55,678:INFO:SubProcess create_model() called ==================================
2024-05-03 00:32:55,678:INFO:Initializing create_model()
2024-05-03 00:32:55,678:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001599A523280>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000159C1F3BE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:32:55,678:INFO:Checking exceptions
2024-05-03 00:32:55,678:INFO:Importing libraries
2024-05-03 00:32:55,678:INFO:Copying training dataset
2024-05-03 00:32:55,678:INFO:Defining folds
2024-05-03 00:32:55,678:INFO:Declaring metric variables
2024-05-03 00:32:55,678:INFO:Importing untrained model
2024-05-03 00:32:55,678:INFO:SVM - Linear Kernel Imported successfully
2024-05-03 00:32:55,678:INFO:Starting cross validation
2024-05-03 00:32:55,678:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:32:55,783:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:55,783:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,783:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,791:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:32:55,791:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:55,791:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:55,791:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:55,791:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,791:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,791:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,791:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,791:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,791:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,791:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:32:55,791:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,799:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,799:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:55,799:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:55,799:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:55,799:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,799:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,799:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,799:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:55,799:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,808:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,809:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,809:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,809:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:32:55,809:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:32:55,809:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:32:55,809:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,809:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,809:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:32:55,809:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,809:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

ead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:55,809:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,809:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:32:55,809:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,815:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:55,815:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,815:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,815:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,815:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:32:55,815:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,815:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,815:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:32:55,815:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,840:INFO:Calculating mean and std
2024-05-03 00:32:55,840:INFO:Creating metrics dataframe
2024-05-03 00:32:55,840:INFO:Uploading results into container
2024-05-03 00:32:55,840:INFO:Uploading model into container now
2024-05-03 00:32:55,840:INFO:_master_model_container: 5
2024-05-03 00:32:55,840:INFO:_display_container: 2
2024-05-03 00:32:55,840:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-05-03 00:32:55,840:INFO:create_model() successfully completed......................................
2024-05-03 00:32:55,949:INFO:SubProcess create_model() end ==================================
2024-05-03 00:32:55,949:INFO:Creating metrics dataframe
2024-05-03 00:32:55,953:INFO:Initializing Ridge Classifier
2024-05-03 00:32:55,953:INFO:Total runtime is 0.17437186638514202 minutes
2024-05-03 00:32:55,953:INFO:SubProcess create_model() called ==================================
2024-05-03 00:32:55,953:INFO:Initializing create_model()
2024-05-03 00:32:55,953:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001599A523280>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000159C1F3BE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:32:55,953:INFO:Checking exceptions
2024-05-03 00:32:55,953:INFO:Importing libraries
2024-05-03 00:32:55,953:INFO:Copying training dataset
2024-05-03 00:32:55,953:INFO:Defining folds
2024-05-03 00:32:55,953:INFO:Declaring metric variables
2024-05-03 00:32:55,953:INFO:Importing untrained model
2024-05-03 00:32:55,953:INFO:Ridge Classifier Imported successfully
2024-05-03 00:32:55,953:INFO:Starting cross validation
2024-05-03 00:32:55,953:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:32:55,978:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:55,986:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,986:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:55,986:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,986:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:55,986:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

odifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:32:55,986:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,986:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,986:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,986:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,994:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,994:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,994:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:55,994:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,998:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:55,998:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:56,002:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,002:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,002:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,002:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,013:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:56,013:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,018:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:56,018:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,018:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,018:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,018:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:32:56,018:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:56,018:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:56,018:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,026:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,026:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,026:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,026:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,026:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:32:56,031:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:56,031:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,031:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,031:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,035:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,036:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,059:INFO:Calculating mean and std
2024-05-03 00:32:56,059:INFO:Creating metrics dataframe
2024-05-03 00:32:56,059:INFO:Uploading results into container
2024-05-03 00:32:56,063:INFO:Uploading model into container now
2024-05-03 00:32:56,063:INFO:_master_model_container: 6
2024-05-03 00:32:56,063:INFO:_display_container: 2
2024-05-03 00:32:56,063:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-05-03 00:32:56,063:INFO:create_model() successfully completed......................................
2024-05-03 00:32:56,180:INFO:SubProcess create_model() end ==================================
2024-05-03 00:32:56,180:INFO:Creating metrics dataframe
2024-05-03 00:32:56,180:INFO:Initializing Random Forest Classifier
2024-05-03 00:32:56,180:INFO:Total runtime is 0.17815068562825523 minutes
2024-05-03 00:32:56,188:INFO:SubProcess create_model() called ==================================
2024-05-03 00:32:56,188:INFO:Initializing create_model()
2024-05-03 00:32:56,188:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001599A523280>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000159C1F3BE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:32:56,188:INFO:Checking exceptions
2024-05-03 00:32:56,188:INFO:Importing libraries
2024-05-03 00:32:56,188:INFO:Copying training dataset
2024-05-03 00:32:56,188:INFO:Defining folds
2024-05-03 00:32:56,188:INFO:Declaring metric variables
2024-05-03 00:32:56,188:INFO:Importing untrained model
2024-05-03 00:32:56,188:INFO:Random Forest Classifier Imported successfully
2024-05-03 00:32:56,188:INFO:Starting cross validation
2024-05-03 00:32:56,188:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:32:56,651:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,651:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,652:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,652:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,658:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,658:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,675:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,682:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,682:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,682:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,690:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,690:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,690:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,698:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,698:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,698:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,698:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,698:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,698:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,706:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:32:56,706:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,706:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,739:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,748:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,756:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,788:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,788:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,796:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,796:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,796:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,796:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,812:INFO:Calculating mean and std
2024-05-03 00:32:56,812:INFO:Creating metrics dataframe
2024-05-03 00:32:56,812:INFO:Uploading results into container
2024-05-03 00:32:56,812:INFO:Uploading model into container now
2024-05-03 00:32:56,812:INFO:_master_model_container: 7
2024-05-03 00:32:56,812:INFO:_display_container: 2
2024-05-03 00:32:56,812:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-05-03 00:32:56,812:INFO:create_model() successfully completed......................................
2024-05-03 00:32:56,943:INFO:SubProcess create_model() end ==================================
2024-05-03 00:32:56,943:INFO:Creating metrics dataframe
2024-05-03 00:32:56,952:INFO:Initializing Quadratic Discriminant Analysis
2024-05-03 00:32:56,952:INFO:Total runtime is 0.19101037184397382 minutes
2024-05-03 00:32:56,952:INFO:SubProcess create_model() called ==================================
2024-05-03 00:32:56,952:INFO:Initializing create_model()
2024-05-03 00:32:56,952:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001599A523280>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000159C1F3BE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:32:56,952:INFO:Checking exceptions
2024-05-03 00:32:56,952:INFO:Importing libraries
2024-05-03 00:32:56,952:INFO:Copying training dataset
2024-05-03 00:32:56,958:INFO:Defining folds
2024-05-03 00:32:56,958:INFO:Declaring metric variables
2024-05-03 00:32:56,958:INFO:Importing untrained model
2024-05-03 00:32:56,958:INFO:Quadratic Discriminant Analysis Imported successfully
2024-05-03 00:32:56,958:INFO:Starting cross validation
2024-05-03 00:32:56,958:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:32:56,999:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:56,999:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:56,999:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,007:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,009:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:57,009:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,015:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,015:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,015:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:57,015:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,023:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,023:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:57,023:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:57,023:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,023:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,023:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,023:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,032:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:57,032:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,032:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,032:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,032:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,032:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:57,032:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,032:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,032:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,032:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,032:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:32:57,032:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,032:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,040:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,040:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,040:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:57,048:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,048:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:57,048:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,048:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:32:57,048:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,048:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,048:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,056:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,064:INFO:Calculating mean and std
2024-05-03 00:32:57,064:INFO:Creating metrics dataframe
2024-05-03 00:32:57,064:INFO:Uploading results into container
2024-05-03 00:32:57,064:INFO:Uploading model into container now
2024-05-03 00:32:57,064:INFO:_master_model_container: 8
2024-05-03 00:32:57,064:INFO:_display_container: 2
2024-05-03 00:32:57,064:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-05-03 00:32:57,064:INFO:create_model() successfully completed......................................
2024-05-03 00:32:57,177:INFO:SubProcess create_model() end ==================================
2024-05-03 00:32:57,177:INFO:Creating metrics dataframe
2024-05-03 00:32:57,177:INFO:Initializing Ada Boost Classifier
2024-05-03 00:32:57,177:INFO:Total runtime is 0.1947685480117798 minutes
2024-05-03 00:32:57,177:INFO:SubProcess create_model() called ==================================
2024-05-03 00:32:57,177:INFO:Initializing create_model()
2024-05-03 00:32:57,177:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001599A523280>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000159C1F3BE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:32:57,177:INFO:Checking exceptions
2024-05-03 00:32:57,177:INFO:Importing libraries
2024-05-03 00:32:57,177:INFO:Copying training dataset
2024-05-03 00:32:57,177:INFO:Defining folds
2024-05-03 00:32:57,177:INFO:Declaring metric variables
2024-05-03 00:32:57,177:INFO:Importing untrained model
2024-05-03 00:32:57,177:INFO:Ada Boost Classifier Imported successfully
2024-05-03 00:32:57,177:INFO:Starting cross validation
2024-05-03 00:32:57,177:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:32:57,258:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-03 00:32:57,258:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-03 00:32:57,258:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-03 00:32:57,258:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-03 00:32:57,258:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-03 00:32:57,258:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-03 00:32:57,298:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-03 00:32:57,298:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-03 00:32:57,306:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-03 00:32:57,372:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:57,376:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,376:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,379:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:32:57,379:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,395:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:57,403:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,403:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:57,403:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,403:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:32:57,411:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,411:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,411:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:57,411:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:57,411:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,411:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:57,411:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,411:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,411:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:57,411:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:32:57,411:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,411:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,411:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,411:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:32:57,411:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,419:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,419:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,419:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,419:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,419:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:32:57,419:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:32:57,419:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,419:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,419:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,419:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:57,427:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,427:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,433:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:32:57,435:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,444:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:57,444:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,444:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,444:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:32:57,452:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,452:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:57,460:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,460:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,460:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:57,476:INFO:Calculating mean and std
2024-05-03 00:32:57,476:INFO:Creating metrics dataframe
2024-05-03 00:32:57,476:INFO:Uploading results into container
2024-05-03 00:32:57,476:INFO:Uploading model into container now
2024-05-03 00:32:57,476:INFO:_master_model_container: 9
2024-05-03 00:32:57,476:INFO:_display_container: 2
2024-05-03 00:32:57,476:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-05-03 00:32:57,476:INFO:create_model() successfully completed......................................
2024-05-03 00:32:57,606:INFO:SubProcess create_model() end ==================================
2024-05-03 00:32:57,606:INFO:Creating metrics dataframe
2024-05-03 00:32:57,606:INFO:Initializing Gradient Boosting Classifier
2024-05-03 00:32:57,606:INFO:Total runtime is 0.20191113154093426 minutes
2024-05-03 00:32:57,606:INFO:SubProcess create_model() called ==================================
2024-05-03 00:32:57,606:INFO:Initializing create_model()
2024-05-03 00:32:57,606:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001599A523280>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000159C1F3BE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:32:57,606:INFO:Checking exceptions
2024-05-03 00:32:57,606:INFO:Importing libraries
2024-05-03 00:32:57,606:INFO:Copying training dataset
2024-05-03 00:32:57,614:INFO:Defining folds
2024-05-03 00:32:57,614:INFO:Declaring metric variables
2024-05-03 00:32:57,614:INFO:Importing untrained model
2024-05-03 00:32:57,614:INFO:Gradient Boosting Classifier Imported successfully
2024-05-03 00:32:57,614:INFO:Starting cross validation
2024-05-03 00:32:57,614:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:32:58,384:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:58,392:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,392:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,400:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,473:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:58,482:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,482:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,489:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,489:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:58,489:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:58,489:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:58,489:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,489:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,489:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,489:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,499:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,499:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,499:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,506:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,506:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,514:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:58,514:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,522:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,522:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,603:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:58,603:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,611:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,611:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,635:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:58,636:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,636:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,644:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,693:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:58,693:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,701:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,701:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,701:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:58,709:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,709:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,709:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,733:INFO:Calculating mean and std
2024-05-03 00:32:58,734:INFO:Creating metrics dataframe
2024-05-03 00:32:58,734:INFO:Uploading results into container
2024-05-03 00:32:58,734:INFO:Uploading model into container now
2024-05-03 00:32:58,734:INFO:_master_model_container: 10
2024-05-03 00:32:58,734:INFO:_display_container: 2
2024-05-03 00:32:58,734:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-03 00:32:58,734:INFO:create_model() successfully completed......................................
2024-05-03 00:32:58,866:INFO:SubProcess create_model() end ==================================
2024-05-03 00:32:58,866:INFO:Creating metrics dataframe
2024-05-03 00:32:58,869:INFO:Initializing Linear Discriminant Analysis
2024-05-03 00:32:58,869:INFO:Total runtime is 0.22297110557556155 minutes
2024-05-03 00:32:58,869:INFO:SubProcess create_model() called ==================================
2024-05-03 00:32:58,869:INFO:Initializing create_model()
2024-05-03 00:32:58,869:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001599A523280>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000159C1F3BE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:32:58,869:INFO:Checking exceptions
2024-05-03 00:32:58,869:INFO:Importing libraries
2024-05-03 00:32:58,869:INFO:Copying training dataset
2024-05-03 00:32:58,869:INFO:Defining folds
2024-05-03 00:32:58,869:INFO:Declaring metric variables
2024-05-03 00:32:58,869:INFO:Importing untrained model
2024-05-03 00:32:58,869:INFO:Linear Discriminant Analysis Imported successfully
2024-05-03 00:32:58,869:INFO:Starting cross validation
2024-05-03 00:32:58,869:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:32:58,909:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:58,917:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,917:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,917:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:58,917:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:58,917:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:58,917:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,917:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,917:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,917:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:58,917:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,925:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,927:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,928:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,928:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,929:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:58,930:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,930:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,934:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:58,934:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,935:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,935:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,935:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,935:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:58,935:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,935:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,935:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:32:58,935:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,935:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,935:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,942:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,942:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,942:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:58,942:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,950:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-05-03 00:32:58,950:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,950:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,950:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,950:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,950:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:58,966:INFO:Calculating mean and std
2024-05-03 00:32:58,966:INFO:Creating metrics dataframe
2024-05-03 00:32:58,966:INFO:Uploading results into container
2024-05-03 00:32:58,966:INFO:Uploading model into container now
2024-05-03 00:32:58,966:INFO:_master_model_container: 11
2024-05-03 00:32:58,966:INFO:_display_container: 2
2024-05-03 00:32:58,966:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-05-03 00:32:58,966:INFO:create_model() successfully completed......................................
2024-05-03 00:32:59,087:INFO:SubProcess create_model() end ==================================
2024-05-03 00:32:59,087:INFO:Creating metrics dataframe
2024-05-03 00:32:59,087:INFO:Initializing Extra Trees Classifier
2024-05-03 00:32:59,087:INFO:Total runtime is 0.22660245498021445 minutes
2024-05-03 00:32:59,087:INFO:SubProcess create_model() called ==================================
2024-05-03 00:32:59,087:INFO:Initializing create_model()
2024-05-03 00:32:59,087:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001599A523280>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000159C1F3BE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:32:59,087:INFO:Checking exceptions
2024-05-03 00:32:59,087:INFO:Importing libraries
2024-05-03 00:32:59,087:INFO:Copying training dataset
2024-05-03 00:32:59,087:INFO:Defining folds
2024-05-03 00:32:59,087:INFO:Declaring metric variables
2024-05-03 00:32:59,087:INFO:Importing untrained model
2024-05-03 00:32:59,087:INFO:Extra Trees Classifier Imported successfully
2024-05-03 00:32:59,087:INFO:Starting cross validation
2024-05-03 00:32:59,095:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:32:59,435:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,439:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,448:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,448:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,448:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,448:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,456:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,456:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,456:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,456:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,464:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,464:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,473:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,473:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,473:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,473:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,473:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,473:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,480:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,480:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,480:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,480:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,480:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,488:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,488:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,488:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,511:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,513:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,513:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,535:INFO:Calculating mean and std
2024-05-03 00:32:59,537:INFO:Creating metrics dataframe
2024-05-03 00:32:59,537:INFO:Uploading results into container
2024-05-03 00:32:59,537:INFO:Uploading model into container now
2024-05-03 00:32:59,537:INFO:_master_model_container: 12
2024-05-03 00:32:59,537:INFO:_display_container: 2
2024-05-03 00:32:59,537:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-05-03 00:32:59,537:INFO:create_model() successfully completed......................................
2024-05-03 00:32:59,665:INFO:SubProcess create_model() end ==================================
2024-05-03 00:32:59,665:INFO:Creating metrics dataframe
2024-05-03 00:32:59,668:INFO:Initializing Extreme Gradient Boosting
2024-05-03 00:32:59,668:INFO:Total runtime is 0.23628701368967692 minutes
2024-05-03 00:32:59,668:INFO:SubProcess create_model() called ==================================
2024-05-03 00:32:59,668:INFO:Initializing create_model()
2024-05-03 00:32:59,668:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001599A523280>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000159C1F3BE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:32:59,668:INFO:Checking exceptions
2024-05-03 00:32:59,668:INFO:Importing libraries
2024-05-03 00:32:59,668:INFO:Copying training dataset
2024-05-03 00:32:59,675:INFO:Defining folds
2024-05-03 00:32:59,675:INFO:Declaring metric variables
2024-05-03 00:32:59,675:INFO:Importing untrained model
2024-05-03 00:32:59,676:INFO:Extreme Gradient Boosting Imported successfully
2024-05-03 00:32:59,676:INFO:Starting cross validation
2024-05-03 00:32:59,677:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:32:59,887:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,888:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,888:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,888:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,888:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,894:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,894:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,894:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,894:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,902:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,902:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,902:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,902:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,902:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,902:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,910:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,910:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,910:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,910:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,918:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,918:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,918:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,918:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,926:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,936:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,936:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,936:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,936:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,942:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:32:59,950:INFO:Calculating mean and std
2024-05-03 00:32:59,950:INFO:Creating metrics dataframe
2024-05-03 00:32:59,950:INFO:Uploading results into container
2024-05-03 00:32:59,950:INFO:Uploading model into container now
2024-05-03 00:32:59,950:INFO:_master_model_container: 13
2024-05-03 00:32:59,950:INFO:_display_container: 2
2024-05-03 00:32:59,950:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-05-03 00:32:59,950:INFO:create_model() successfully completed......................................
2024-05-03 00:33:00,072:INFO:SubProcess create_model() end ==================================
2024-05-03 00:33:00,072:INFO:Creating metrics dataframe
2024-05-03 00:33:00,072:INFO:Initializing Light Gradient Boosting Machine
2024-05-03 00:33:00,072:INFO:Total runtime is 0.2430197278658549 minutes
2024-05-03 00:33:00,072:INFO:SubProcess create_model() called ==================================
2024-05-03 00:33:00,072:INFO:Initializing create_model()
2024-05-03 00:33:00,072:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001599A523280>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000159C1F3BE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:33:00,072:INFO:Checking exceptions
2024-05-03 00:33:00,072:INFO:Importing libraries
2024-05-03 00:33:00,072:INFO:Copying training dataset
2024-05-03 00:33:00,080:INFO:Defining folds
2024-05-03 00:33:00,080:INFO:Declaring metric variables
2024-05-03 00:33:00,080:INFO:Importing untrained model
2024-05-03 00:33:00,080:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-03 00:33:00,080:INFO:Starting cross validation
2024-05-03 00:33:00,080:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:33:02,359:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:02,364:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:02,365:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:02,447:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:02,452:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:02,455:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:02,553:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:02,557:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:02,561:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:02,849:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:02,854:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:02,858:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:02,923:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:02,923:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:02,931:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:02,964:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:02,969:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:02,972:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:02,980:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:02,981:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:02,988:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:03,038:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:03,045:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:03,045:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:03,062:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:03,065:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:03,070:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:03,080:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:03,085:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:03,087:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:03,102:INFO:Calculating mean and std
2024-05-03 00:33:03,102:INFO:Creating metrics dataframe
2024-05-03 00:33:03,102:INFO:Uploading results into container
2024-05-03 00:33:03,102:INFO:Uploading model into container now
2024-05-03 00:33:03,102:INFO:_master_model_container: 14
2024-05-03 00:33:03,102:INFO:_display_container: 2
2024-05-03 00:33:03,102:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-05-03 00:33:03,102:INFO:create_model() successfully completed......................................
2024-05-03 00:33:03,239:INFO:SubProcess create_model() end ==================================
2024-05-03 00:33:03,239:INFO:Creating metrics dataframe
2024-05-03 00:33:03,247:INFO:Initializing CatBoost Classifier
2024-05-03 00:33:03,247:INFO:Total runtime is 0.2959272027015686 minutes
2024-05-03 00:33:03,247:INFO:SubProcess create_model() called ==================================
2024-05-03 00:33:03,247:INFO:Initializing create_model()
2024-05-03 00:33:03,247:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001599A523280>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000159C1F3BE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:33:03,247:INFO:Checking exceptions
2024-05-03 00:33:03,247:INFO:Importing libraries
2024-05-03 00:33:03,247:INFO:Copying training dataset
2024-05-03 00:33:03,247:INFO:Defining folds
2024-05-03 00:33:03,247:INFO:Declaring metric variables
2024-05-03 00:33:03,247:INFO:Importing untrained model
2024-05-03 00:33:03,247:INFO:CatBoost Classifier Imported successfully
2024-05-03 00:33:03,247:INFO:Starting cross validation
2024-05-03 00:33:03,247:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:33:14,173:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,181:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,181:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,181:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,181:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,189:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,189:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,189:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,189:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,189:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,197:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,197:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,197:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,197:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,197:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,197:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,197:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,197:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,197:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,205:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,205:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,205:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,205:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,205:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,205:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,205:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,205:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,214:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,214:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,214:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,238:INFO:Calculating mean and std
2024-05-03 00:33:14,238:INFO:Creating metrics dataframe
2024-05-03 00:33:14,238:INFO:Uploading results into container
2024-05-03 00:33:14,238:INFO:Uploading model into container now
2024-05-03 00:33:14,238:INFO:_master_model_container: 15
2024-05-03 00:33:14,238:INFO:_display_container: 2
2024-05-03 00:33:14,238:INFO:<catboost.core.CatBoostClassifier object at 0x00000159C1BD7CD0>
2024-05-03 00:33:14,238:INFO:create_model() successfully completed......................................
2024-05-03 00:33:14,368:INFO:SubProcess create_model() end ==================================
2024-05-03 00:33:14,368:INFO:Creating metrics dataframe
2024-05-03 00:33:14,378:INFO:Initializing Dummy Classifier
2024-05-03 00:33:14,378:INFO:Total runtime is 0.48144484361012774 minutes
2024-05-03 00:33:14,378:INFO:SubProcess create_model() called ==================================
2024-05-03 00:33:14,378:INFO:Initializing create_model()
2024-05-03 00:33:14,378:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001599A523280>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000159C1F3BE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:33:14,378:INFO:Checking exceptions
2024-05-03 00:33:14,378:INFO:Importing libraries
2024-05-03 00:33:14,378:INFO:Copying training dataset
2024-05-03 00:33:14,382:INFO:Defining folds
2024-05-03 00:33:14,382:INFO:Declaring metric variables
2024-05-03 00:33:14,382:INFO:Importing untrained model
2024-05-03 00:33:14,382:INFO:Dummy Classifier Imported successfully
2024-05-03 00:33:14,382:INFO:Starting cross validation
2024-05-03 00:33:14,385:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-03 00:33:14,417:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,417:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,417:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,417:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,417:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:33:14,417:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,425:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:33:14,425:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,425:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,425:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,425:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,425:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,425:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:33:14,425:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:33:14,432:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,433:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,433:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,433:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,433:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,440:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:33:14,441:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,441:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,441:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,441:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,441:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:33:14,441:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,441:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,441:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:33:14,441:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:33:14,441:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,449:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,449:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,457:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,457:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,457:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:33:14,457:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,457:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-03 00:33:14,457:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,457:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:14,489:INFO:Calculating mean and std
2024-05-03 00:33:14,491:INFO:Creating metrics dataframe
2024-05-03 00:33:14,492:INFO:Uploading results into container
2024-05-03 00:33:14,492:INFO:Uploading model into container now
2024-05-03 00:33:14,492:INFO:_master_model_container: 16
2024-05-03 00:33:14,497:INFO:_display_container: 2
2024-05-03 00:33:14,497:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-05-03 00:33:14,497:INFO:create_model() successfully completed......................................
2024-05-03 00:33:14,644:INFO:SubProcess create_model() end ==================================
2024-05-03 00:33:14,644:INFO:Creating metrics dataframe
2024-05-03 00:33:14,660:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-05-03 00:33:14,660:INFO:Initializing create_model()
2024-05-03 00:33:14,660:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001599A523280>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-03 00:33:14,660:INFO:Checking exceptions
2024-05-03 00:33:14,660:INFO:Importing libraries
2024-05-03 00:33:14,660:INFO:Copying training dataset
2024-05-03 00:33:14,670:INFO:Defining folds
2024-05-03 00:33:14,670:INFO:Declaring metric variables
2024-05-03 00:33:14,670:INFO:Importing untrained model
2024-05-03 00:33:14,670:INFO:Declaring custom model
2024-05-03 00:33:14,670:INFO:Extra Trees Classifier Imported successfully
2024-05-03 00:33:14,670:INFO:Cross validation set to False
2024-05-03 00:33:14,670:INFO:Fitting Model
2024-05-03 00:33:14,850:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-05-03 00:33:14,850:INFO:create_model() successfully completed......................................
2024-05-03 00:33:14,963:INFO:_master_model_container: 16
2024-05-03 00:33:14,963:INFO:_display_container: 2
2024-05-03 00:33:14,963:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-05-03 00:33:14,963:INFO:compare_models() successfully completed......................................
2024-05-03 00:33:14,969:INFO:Initializing evaluate_model()
2024-05-03 00:33:14,969:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001599A523280>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-05-03 00:33:15,234:INFO:Initializing plot_model()
2024-05-03 00:33:15,234:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001599A523280>, system=True)
2024-05-03 00:33:15,234:INFO:Checking exceptions
2024-05-03 00:33:15,275:INFO:Preloading libraries
2024-05-03 00:33:15,283:INFO:Copying training dataset
2024-05-03 00:33:15,283:INFO:Plot type: pipeline
2024-05-03 00:33:24,578:INFO:Visual Rendered Successfully
2024-05-03 00:33:24,671:INFO:plot_model() successfully completed......................................
2024-05-03 00:33:24,671:INFO:Initializing plot_model()
2024-05-03 00:33:24,671:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001599A523280>, system=True)
2024-05-03 00:33:24,671:INFO:Checking exceptions
2024-05-03 00:33:24,698:INFO:Preloading libraries
2024-05-03 00:33:24,704:INFO:Copying training dataset
2024-05-03 00:33:24,704:INFO:Plot type: auc
2024-05-03 00:33:24,873:INFO:Fitting Model
2024-05-03 00:33:24,932:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2024-05-03 00:33:24,932:INFO:Scoring test/hold-out set
2024-05-03 00:33:27,734:INFO:Visual Rendered Successfully
2024-05-03 00:33:27,844:INFO:plot_model() successfully completed......................................
2024-05-03 00:33:27,844:INFO:Initializing plot_model()
2024-05-03 00:33:27,844:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001599A523280>, system=True)
2024-05-03 00:33:27,844:INFO:Checking exceptions
2024-05-03 00:33:27,877:INFO:Preloading libraries
2024-05-03 00:33:27,877:INFO:Copying training dataset
2024-05-03 00:33:27,877:INFO:Plot type: confusion_matrix
2024-05-03 00:33:28,087:INFO:Fitting Model
2024-05-03 00:33:28,087:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2024-05-03 00:33:28,087:INFO:Scoring test/hold-out set
2024-05-03 00:33:30,595:INFO:Visual Rendered Successfully
2024-05-03 00:33:30,698:INFO:plot_model() successfully completed......................................
2024-05-03 00:33:30,698:INFO:Initializing plot_model()
2024-05-03 00:33:30,698:INFO:plot_model(plot=class_report, fold=None, verbose=True, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001599A523280>, system=True)
2024-05-03 00:33:30,698:INFO:Checking exceptions
2024-05-03 00:33:30,746:INFO:Preloading libraries
2024-05-03 00:33:30,763:INFO:Copying training dataset
2024-05-03 00:33:30,763:INFO:Plot type: class_report
2024-05-03 00:33:30,925:INFO:Fitting Model
2024-05-03 00:33:30,925:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2024-05-03 00:33:30,925:INFO:Scoring test/hold-out set
2024-05-03 00:33:33,091:INFO:Visual Rendered Successfully
2024-05-03 00:33:33,196:INFO:plot_model() successfully completed......................................
2024-05-03 00:33:33,203:INFO:Initializing predict_model()
2024-05-03 00:33:33,203:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001599A523280>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000159C1D744C0>)
2024-05-03 00:33:33,203:INFO:Checking exceptions
2024-05-03 00:33:33,203:INFO:Preloading libraries
2024-05-03 00:33:33,304:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:33,304:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:33,304:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:33,424:INFO:Initializing predict_model()
2024-05-03 00:33:33,424:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001599A523280>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000159C1D744C0>)
2024-05-03 00:33:33,424:INFO:Checking exceptions
2024-05-03 00:33:33,424:INFO:Preloading libraries
2024-05-03 00:33:33,424:INFO:Set up data.
2024-05-03 00:33:33,424:INFO:Set up index.
2024-05-03 00:33:33,537:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:33,537:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:33,537:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:33,660:INFO:Initializing predict_model()
2024-05-03 00:33:33,660:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001599A523280>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000159C1D744C0>)
2024-05-03 00:33:33,660:INFO:Checking exceptions
2024-05-03 00:33:33,660:INFO:Preloading libraries
2024-05-03 00:33:33,660:INFO:Set up data.
2024-05-03 00:33:33,660:INFO:Set up index.
2024-05-03 00:33:33,782:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:33,782:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:33,788:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-03 00:33:33,940:INFO:Initializing save_model()
2024-05-03 00:33:33,940:INFO:save_model(model=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), model_name=my_best_pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\seyzu\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Jsc', 'Voc', 'FF', 'Efficiency',
                                             'Sr', 'Sp', 'Temp'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-05-03 00:33:33,940:INFO:Adding model into prep_pipe
2024-05-03 00:33:33,964:INFO:my_best_pipeline.pkl saved in current working directory
2024-05-03 00:33:33,964:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Jsc', 'Voc', 'FF', 'Efficiency',
                                             'Sr', 'Sp', 'Temp'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2024-05-03 00:33:33,964:INFO:save_model() successfully completed......................................
2024-05-03 00:33:34,071:INFO:Initializing load_model()
2024-05-03 00:33:34,071:INFO:load_model(model_name=my_best_pipeline, platform=None, authentication=None, verbose=True)
2024-05-03 00:33:46,201:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-03 00:33:46,201:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-03 00:33:46,201:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-03 00:33:46,201:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-03 00:33:46,991:INFO:PyCaret ClusteringExperiment
2024-05-03 00:33:46,991:INFO:Logging name: cluster-default-name
2024-05-03 00:33:46,991:INFO:ML Usecase: MLUsecase.CLUSTERING
2024-05-03 00:33:46,991:INFO:version 3.3.2
2024-05-03 00:33:46,991:INFO:Initializing setup()
2024-05-03 00:33:46,991:INFO:self.USI: c5fd
2024-05-03 00:33:46,991:INFO:self._variable_keys: {'_available_plots', 'idx', 'pipeline', '_ml_usecase', 'exp_name_log', 'seed', 'log_plots_param', 'logging_param', 'gpu_n_jobs_param', 'memory', 'n_jobs_param', 'X', 'gpu_param', 'USI', 'html_param', 'data', 'exp_id'}
2024-05-03 00:33:46,991:INFO:Checking environment
2024-05-03 00:33:46,991:INFO:python_version: 3.10.11
2024-05-03 00:33:46,991:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-05-03 00:33:46,991:INFO:machine: AMD64
2024-05-03 00:33:47,012:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-03 00:33:47,015:INFO:Memory: svmem(total=8302092288, available=3614584832, percent=56.5, used=4687507456, free=3614584832)
2024-05-03 00:33:47,016:INFO:Physical Core: 12
2024-05-03 00:33:47,017:INFO:Logical Core: 16
2024-05-03 00:33:47,017:INFO:Checking libraries
2024-05-03 00:33:47,017:INFO:System:
2024-05-03 00:33:47,017:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-05-03 00:33:47,017:INFO:executable: C:\Users\seyzu\AppData\Local\Programs\Python\Python310\python.exe
2024-05-03 00:33:47,017:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-03 00:33:47,017:INFO:PyCaret required dependencies:
2024-05-03 00:33:47,550:INFO:                 pip: 24.0
2024-05-03 00:33:47,550:INFO:          setuptools: 65.5.0
2024-05-03 00:33:47,550:INFO:             pycaret: 3.3.2
2024-05-03 00:33:47,550:INFO:             IPython: 8.24.0
2024-05-03 00:33:47,550:INFO:          ipywidgets: 8.1.2
2024-05-03 00:33:47,550:INFO:                tqdm: 4.66.2
2024-05-03 00:33:47,550:INFO:               numpy: 1.26.4
2024-05-03 00:33:47,550:INFO:              pandas: 2.1.4
2024-05-03 00:33:47,550:INFO:              jinja2: 3.1.3
2024-05-03 00:33:47,550:INFO:               scipy: 1.11.4
2024-05-03 00:33:47,550:INFO:              joblib: 1.3.2
2024-05-03 00:33:47,550:INFO:             sklearn: 1.4.2
2024-05-03 00:33:47,550:INFO:                pyod: 1.1.3
2024-05-03 00:33:47,550:INFO:            imblearn: 0.12.2
2024-05-03 00:33:47,550:INFO:   category_encoders: 2.6.3
2024-05-03 00:33:47,550:INFO:            lightgbm: 4.3.0
2024-05-03 00:33:47,550:INFO:               numba: 0.59.1
2024-05-03 00:33:47,550:INFO:            requests: 2.31.0
2024-05-03 00:33:47,550:INFO:          matplotlib: 3.7.5
2024-05-03 00:33:47,550:INFO:          scikitplot: 0.3.7
2024-05-03 00:33:47,550:INFO:         yellowbrick: 1.5
2024-05-03 00:33:47,550:INFO:              plotly: 5.21.0
2024-05-03 00:33:47,550:INFO:    plotly-resampler: Not installed
2024-05-03 00:33:47,550:INFO:             kaleido: 0.2.1
2024-05-03 00:33:47,550:INFO:           schemdraw: 0.15
2024-05-03 00:33:47,550:INFO:         statsmodels: 0.14.2
2024-05-03 00:33:47,550:INFO:              sktime: 0.26.0
2024-05-03 00:33:47,550:INFO:               tbats: 1.1.3
2024-05-03 00:33:47,550:INFO:            pmdarima: 2.0.4
2024-05-03 00:33:47,550:INFO:              psutil: 5.9.8
2024-05-03 00:33:47,550:INFO:          markupsafe: 2.1.5
2024-05-03 00:33:47,550:INFO:             pickle5: Not installed
2024-05-03 00:33:47,550:INFO:         cloudpickle: 3.0.0
2024-05-03 00:33:47,550:INFO:         deprecation: 2.1.0
2024-05-03 00:33:47,550:INFO:              xxhash: 3.4.1
2024-05-03 00:33:47,550:INFO:           wurlitzer: Not installed
2024-05-03 00:33:47,550:INFO:PyCaret optional dependencies:
2024-05-03 00:33:48,817:INFO:                shap: 0.44.1
2024-05-03 00:33:48,817:INFO:           interpret: 0.6.1
2024-05-03 00:33:48,817:INFO:                umap: 0.5.6
2024-05-03 00:33:48,817:INFO:     ydata_profiling: 4.7.0
2024-05-03 00:33:48,817:INFO:  explainerdashboard: 0.4.7
2024-05-03 00:33:48,817:INFO:             autoviz: Not installed
2024-05-03 00:33:48,817:INFO:           fairlearn: 0.7.0
2024-05-03 00:33:48,817:INFO:          deepchecks: Not installed
2024-05-03 00:33:48,817:INFO:             xgboost: 2.0.3
2024-05-03 00:33:48,817:INFO:            catboost: 1.2.5
2024-05-03 00:33:48,817:INFO:              kmodes: 0.12.2
2024-05-03 00:33:48,817:INFO:             mlxtend: 0.23.1
2024-05-03 00:33:48,817:INFO:       statsforecast: 1.5.0
2024-05-03 00:33:48,817:INFO:        tune_sklearn: Not installed
2024-05-03 00:33:48,817:INFO:                 ray: Not installed
2024-05-03 00:33:48,817:INFO:            hyperopt: 0.2.7
2024-05-03 00:33:48,817:INFO:              optuna: 3.6.1
2024-05-03 00:33:48,817:INFO:               skopt: 0.10.1
2024-05-03 00:33:48,817:INFO:              mlflow: 2.12.1
2024-05-03 00:33:48,817:INFO:              gradio: 4.28.3
2024-05-03 00:33:48,817:INFO:             fastapi: 0.110.3
2024-05-03 00:33:48,817:INFO:             uvicorn: 0.29.0
2024-05-03 00:33:48,817:INFO:              m2cgen: 0.10.0
2024-05-03 00:33:48,817:INFO:           evidently: 0.4.19
2024-05-03 00:33:48,817:INFO:               fugue: 0.8.7
2024-05-03 00:33:48,817:INFO:           streamlit: Not installed
2024-05-03 00:33:48,817:INFO:             prophet: Not installed
2024-05-03 00:33:48,817:INFO:None
2024-05-03 00:33:48,817:INFO:Set up data.
2024-05-03 00:33:48,817:INFO:Set up index.
2024-05-03 00:33:48,817:INFO:Assigning column types.
2024-05-03 00:33:48,817:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2024-05-03 00:33:48,817:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2024-05-03 00:33:48,817:INFO:Soft dependency imported: kmodes: 0.12.2
2024-05-03 00:33:48,903:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2024-05-03 00:33:48,903:INFO:Soft dependency imported: kmodes: 0.12.2
2024-05-03 00:33:48,903:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2024-05-03 00:33:48,903:INFO:Soft dependency imported: kmodes: 0.12.2
2024-05-03 00:33:48,903:INFO:Soft dependency imported: kmodes: 0.12.2
2024-05-03 00:33:48,903:INFO:Preparing preprocessing pipeline...
2024-05-03 00:33:48,903:INFO:Set up simple imputation.
2024-05-03 00:33:48,903:INFO:Set up feature normalization.
2024-05-03 00:33:48,932:INFO:Finished creating preprocessing pipeline.
2024-05-03 00:33:48,940:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\seyzu\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Jsc', 'Voc', 'FF', 'Efficiency',
                                             'Sr', 'Sp', 'Temp', 'Class'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2024-05-03 00:33:48,940:INFO:Creating final display dataframe.
2024-05-03 00:33:48,956:INFO:Setup _display_container:                Description                 Value
0               Session id                  2988
1      Original data shape              (182, 8)
2   Transformed data shape              (182, 8)
3         Numeric features                     8
4               Preprocess                  True
5          Imputation type                simple
6       Numeric imputation                  mean
7   Categorical imputation                  mode
8                Normalize                  True
9         Normalize method                zscore
10                CPU Jobs                    -1
11                 Use GPU                 False
12          Log Experiment                 False
13         Experiment Name  cluster-default-name
14                     USI                  c5fd
2024-05-03 00:33:48,964:INFO:Soft dependency imported: kmodes: 0.12.2
2024-05-03 00:33:48,964:INFO:Soft dependency imported: kmodes: 0.12.2
2024-05-03 00:33:48,964:INFO:setup() successfully completed in 1.97s...............
2024-05-03 00:33:48,964:INFO:Initializing create_model()
2024-05-03 00:33:48,964:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001AD51533190>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2024-05-03 00:33:48,964:INFO:Checking exceptions
2024-05-03 00:33:48,990:INFO:Importing untrained model
2024-05-03 00:33:48,990:INFO:K-Means Clustering Imported successfully
2024-05-03 00:33:48,990:INFO:Fitting Model
2024-05-03 00:33:49,282:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\externals\loky\backend\context.py:136: UserWarning: Could not find the number of physical cores for the following reason:
found 0 physical cores < 1
Returning the number of logical cores instead. You can silence this warning by setting LOKY_MAX_CPU_COUNT to the number of cores you want to use.
  warnings.warn(

2024-05-03 00:33:49,282:WARNING:  File "C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\externals\loky\backend\context.py", line 282, in _count_physical_cores
2024-05-03 00:33:49,282:WARNING:    raise ValueError(f"found {cpu_count_physical} physical cores < 1")
2024-05-03 00:33:49,449:INFO:KMeans(n_clusters=4, random_state=2988)
2024-05-03 00:33:49,449:INFO:create_models() successfully completed......................................
2024-05-03 00:33:49,449:INFO:Uploading results into container
2024-05-03 00:33:49,449:INFO:Uploading model into container now
2024-05-03 00:33:49,457:INFO:_master_model_container: 1
2024-05-03 00:33:49,457:INFO:_display_container: 2
2024-05-03 00:33:49,457:INFO:KMeans(n_clusters=4, random_state=2988)
2024-05-03 00:33:49,457:INFO:create_model() successfully completed......................................
2024-05-03 00:33:49,555:INFO:Initializing evaluate_model()
2024-05-03 00:33:49,555:INFO:evaluate_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001AD51533190>, estimator=KMeans(n_clusters=4, random_state=2988), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-05-03 00:33:49,611:INFO:Initializing plot_model()
2024-05-03 00:33:49,611:INFO:plot_model(plot=pipeline, fold=None, verbose=False, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=2988), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001AD51533190>, system=True)
2024-05-03 00:33:49,611:INFO:Checking exceptions
2024-05-03 00:33:49,611:INFO:Preloading libraries
2024-05-03 00:33:49,611:INFO:Copying training dataset
2024-05-03 00:33:49,611:INFO:Plot type: pipeline
2024-05-03 00:33:53,957:INFO:Visual Rendered Successfully
2024-05-03 00:33:54,073:INFO:plot_model() successfully completed......................................
2024-05-03 00:33:54,073:INFO:Initializing plot_model()
2024-05-03 00:33:54,073:INFO:plot_model(plot=elbow, fold=None, verbose=True, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=2988), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001AD51533190>, system=True)
2024-05-03 00:33:54,073:INFO:Checking exceptions
2024-05-03 00:33:54,073:INFO:Preloading libraries
2024-05-03 00:33:54,073:INFO:Copying training dataset
2024-05-03 00:33:54,073:INFO:Plot type: elbow
2024-05-03 00:33:54,195:INFO:Fitting Model
2024-05-03 00:33:56,566:INFO:Visual Rendered Successfully
2024-05-03 00:33:56,670:INFO:plot_model() successfully completed......................................
2024-05-03 00:33:56,670:INFO:Initializing plot_model()
2024-05-03 00:33:56,670:INFO:plot_model(plot=silhouette, fold=None, verbose=True, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=2988), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001AD51533190>, system=True)
2024-05-03 00:33:56,670:INFO:Checking exceptions
2024-05-03 00:33:56,670:INFO:Preloading libraries
2024-05-03 00:33:56,670:INFO:Copying training dataset
2024-05-03 00:33:56,670:INFO:Plot type: silhouette
2024-05-03 00:33:56,806:INFO:Fitting Model
2024-05-03 00:33:56,806:WARNING:C:\Users\seyzu\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but KMeans was fitted with feature names
  warnings.warn(

2024-05-03 00:33:58,494:INFO:Visual Rendered Successfully
2024-05-03 00:33:58,598:INFO:plot_model() successfully completed......................................
2024-05-03 00:33:58,601:INFO:Initializing plot_model()
2024-05-03 00:33:58,601:INFO:plot_model(plot=tsne, fold=None, verbose=True, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=2988), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001AD51533190>, system=True)
2024-05-03 00:33:58,601:INFO:Checking exceptions
2024-05-03 00:33:58,601:INFO:Preloading libraries
2024-05-03 00:33:58,601:INFO:Copying training dataset
2024-05-03 00:33:58,601:INFO:Plot type: tsne
2024-05-03 00:33:58,601:INFO:SubProcess assign_model() called ==================================
2024-05-03 00:33:58,601:INFO:Initializing assign_model()
2024-05-03 00:33:58,601:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001AD51533190>, model=KMeans(n_clusters=4, random_state=2988), transformation=True, score=False, verbose=False)
2024-05-03 00:33:58,601:INFO:Checking exceptions
2024-05-03 00:33:58,601:INFO:Determining Trained Model
2024-05-03 00:33:58,601:INFO:Trained Model : K-Means Clustering
2024-05-03 00:33:58,601:INFO:Copying data
2024-05-03 00:33:58,620:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2024-05-03 00:33:58,622:INFO:(182, 9)
2024-05-03 00:33:58,622:INFO:assign_model() successfully completed......................................
2024-05-03 00:33:58,622:INFO:SubProcess assign_model() end ==================================
2024-05-03 00:33:58,622:INFO:Fitting TSNE()
2024-05-03 00:33:59,315:INFO:Sorting dataframe
2024-05-03 00:33:59,315:INFO:Rendering Visual
